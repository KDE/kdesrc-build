<sect1 id="features-overview">
<title>Feature Overview</title>

<para>
&kdesvn-build; features include:
</para>

<itemizedlist>

<listitem><para>
For developers: Supports <link linkend="building-apidox">building the API
documentation</link> for a module.
</para></listitem>

<listitem><para>
Supports <link linkend="changing-verbosity">output message levels</link>
ranging from being very quiet to a full debug level.
</para></listitem>

<listitem><para>
&kdesvn-build; can, with the assistance of the <ulink url="http://kdesvn-build.kde.org/">kdesvn-build website</ulink>,
allow for speedy checkouts of some modules.  If the module you are checking out
has already been packaged at the website, then kdesvn-build will download the
snapshot and prepare it for use on your computer.
</para>

<para>This is faster for you, and helps to ease the load on the kde.org
anonymous Subversion servers.</para>
</listitem>

<listitem><para>
Has excellent support for the <link linkend="using-qt-copy">qt-copy module</link>,
including optionally applying bugfix and optimization patches to the qt-copy
module.
</para></listitem>

<listitem><para>
&kdesvn-build; has <link linkend="kdesvn-build-color">colorized output.</link>
</para></listitem>

<listitem><para>
&kdesvn-build; does not require a <acronym>GUI</acronym> present to operate. So,
you can build &kde; without needing an alternate graphical environment.
</para></listitem>

<listitem><para>
Supports setting default options for all modules (such as the compilation
settings or the configuration options).  Such options can normally be changed
for specific modules as well.</para>

<para>Also, &kdesvn-build; will <link linkend="kdesvn-build-std-flags">add
standard flags</link> as appropriate to save you the trouble and possible
errors from typing them yourself.
</para></listitem>

<listitem><para>
&kdesvn-build; can <link linkend="partial-builds">checkout only portions of a
module</link>, for those situations where you only need one program from a
large module.
</para></listitem>

<listitem><para>
For developers: Will <link linkend="ssh-agent-reminder">remind you</link> if
you use svn+ssh:// but <application>ssh-agent</application> is not running, as
this will lead to repeated password requests from
<application>ssh</application>.
</para></listitem>

<listitem><para>
Can <link linkend="email-reports">e-mail reports</link> of errors to a user.
</para></listitem>

<listitem><para>
Can <link linkend="deleting-build-dir">delete the build directory</link> of a
module after its installation to save space at the expense of future compilation
time.
</para></listitem>

<listitem><para>
The locations for the directories used by &kdesvn-build; are configurable (even
per module).
</para></listitem>

<listitem><para>
Can use <application>sudo</application>, or a different user-specified command
to <link linkend="root-installation">install modules</link> so that
&kdesvn-build; does not need to be run as the super user.
</para></listitem>

<listitem><para>
&kdesvn-build; runs <link linkend="build-priority">with reduced priority</link>
by default to allow you to still use your computer while &kdesvn-build; is
working.
</para></listitem>

<listitem><para>
Has support for using &kde;'s &svn; <link linkend="using-branches">tags and
branches</link>.
</para></listitem>

<listitem><para>
&kdesvn-build; will use a set of techniques to <link linkend="building-successfully">try
and guarantee</link> a successful build.
</para></listitem>

<listitem><para>
There is support for <link linkend="resuming">resuming a build</link> from a
given module.  You can even <link linkend="ignoring-modules">ignore some
modules</link> temporarily for a given build.
</para></listitem>

<listitem><para>
&kdesvn-build; also supports using the ~/ sequence to stand for your home
directory in the &rcfile;.
</para></listitem>

<listitem><para>
Automatically checks out or updates modules from &svn;, as
appropriate.
</para></listitem>

<listitem><para>
&kdesvn-build; can quickly perform a <link linkend="partial-builds">partial
build</link> of a module directly from the command line, when you only need
to update part of a module.
</para></listitem>

<listitem><para>
&kdesvn-build; will automatically download and create the required <filename>/admin</filename>
directory for a module if it isn't downloaded from &svn; the first time for
some reason.
</para></listitem>

<listitem><para>
&kdesvn-build; will show the <link linkend="build-progress">progress of your
build</link> when using &unsermake;, and will always time the build process so
you know after the fact how long it took.
</para></listitem>

<listitem><para>
Automatically tries to rebuild modules that were using incremental
make, which is prone to failure after certain kinds of commits.
</para></listitem>

<listitem><para>
Can resume a build from a particular module.
</para></listitem>

<listitem><para>
Comes built-in with a sane set of default options appropriate for building
a base &kde; single-user installation from the anonymous &svn; repository.
</para></listitem>

<listitem><para>
Comes with &unsermake; support.
</para></listitem>

<listitem><para>
Tilde-expansion for your configuration options.  For example, you can
specify:
<programlisting>qtdir ~/kdesvn/build/qt-copy</programlisting>
</para></listitem>

<listitem><para>
Configurable build, source, and logging directories
</para></listitem>

<listitem><para>
Automatically sets up a build system, with the source directory not the
same as the build directory, in order to keep the source directory
pristine. The exception is <application>qt-copy</application>, which is not designed to be built like
that (unless you would like to test the
<link linkend="conf-use-qt-builddir-hack"><quote>qt with a separate build directory hack</quote></link>).
</para></listitem>

<listitem><para>
You can specify global options to apply to every module to check out, and
you can specify options to apply to individual modules as well.
</para></listitem>

<listitem><para>
Since the autotools sometimes get out of sync with changes to the
source tree, you can force a rebuild of a module by creating a file called
.refresh-me in the build directory of the module in question, or by running
&kdesvn-build; with the <option>--refresh-build</option> option.
</para></listitem>

<listitem><para>
You can specify various environment values to be used during the build,
including <envar>KDEDIR</envar>, <envar>QTDIR</envar>, <envar>DO_NOT_COMPILE</envar>,
and <envar>CXXFLAGS</envar>.
</para></listitem>

<listitem><para>
Command logging.  Logs are dated and numbered so that you always have a
log of a script run.  Also, a special symlink called latest is created to
always point to the most recent log entry in the log directory.
</para></listitem>

<listitem><para>
If you are using a user build of &kde; instead of a system build (for which
you must be root to install), you can use the script to install for you.  I
haven not audited this code, and it makes ample use of the <function>system()</function>
call, so I would not recommend running it as root at this point.
</para></listitem>

<listitem><para>
You can use <link linkend="conf-make-install-prefix">make-install-prefix</link> to
prefix the make install command line with a separate command, which is useful
for sudo.
</para></listitem>

<listitem><para>
You can use the <link linkend="conf-apidox">apidox</link> option to automatically
build and install the API documentation for some modules.
</para></listitem>

<listitem><para>
You can check out only a portion of a &kde; &svn; module.  For example,
you could check out only the <application>taglib</application> from
<application>kdesupport</application>, or only <application>K3B</application> from
<application>extragear/multimedia</application>.  The script will automatically pull in
<application>kde-common</application> if necessary to make the build work.
</para></listitem>

<listitem><para>
You can <quote>pretend</quote> to do the operations.  If you pass
<option>--pretend</option> or <option>-p</option> on the
command line, the script will give a very verbose description of the commands
it is about to execute, without actually executing it.
</para></listitem>

<listitem><para>
Support for checking out specific branches of &svn;
modules. This work still needs to be completed, but you already select the branch you
want to build using the <link linkend="conf-module-base-path">module-base-path
configuration option</link>.
</para></listitem>

</itemizedlist>

</sect1>
