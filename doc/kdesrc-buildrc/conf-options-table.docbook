<sect1 id="conf-options-table">
<title>Table of available configuration options</title>

<para>
Here is a table of the various options, and some comments on them. Any
option which overrides the global option will override a command line setting
as well.
</para>

<table id="option-table">
<title>Table of Options</title>
<tgroup cols="3">

<thead>
<row>
<entry>Option-name</entry>
<entry>Module -&gt; Global Behavior</entry>
<entry>Notes</entry>
</row>
</thead>

<tbody>

<row id="conf-apidox">
<entry>apidox</entry>
<entry>Overrides global</entry>
<entry><para>This option was used to allow for building KDE module API documentation.
It was removed in &kdesrc-build; 1.6.3 due to it not being supported in KDE 4.  Online
API documentation is available from <ulink url="http://api.kde.org/">kde.org</ulink>.
In addition it is possible to build KDE 4's API documentation using a script included in
the kdesdk module (/scripts directory).  See <ulink url="http://techbase.kde.org/Development/Tools/apidox">KDE
TechBase</ulink> for more details.  It is still possible to manually build API documentation
for older modules of course.</para>
</entry>
</row>

<row id="conf-apply-qt-patches">
<entry>apply-qt-patches</entry>
<entry>Overrides global</entry>
<entry>This option was removed in kdesrc-build 1.10. To get the same effect,
see <xref linkend="using-qt-copy" /> and the <link
linkend="conf-repository">repository</link> option.</entry>
</row>

<row id="conf-async">
<entry>async</entry>
<entry>Cannot be overridden</entry>
<entry><para>This option enables the asynchronous mode of operation, where the source
code update and the build process will be performed in parallel, instead of waiting for
all of the source code updates before starting the build process.  This option defaults
to enabling asynchronous mode.  To disable, set this option to <replaceable>false</replaceable></para>
<para>This option is available since the 1.6 release.</para></entry>
</row>

<row id="conf-binpath">
<entry>binpath</entry>
<entry>Overrides global</entry>
<entry><para>Set this option to set the environment variable PATH while building.
You cannot override this setting in a module option. The default value is
the $<envar>PATH</envar> that is set when the script starts. This environment
variable should include the colon-separated paths of your development
toolchain. The paths <filename class="directory">$<envar>KDEDIR</envar>/bin</filename> and
<filename class="directory">$<envar>QTDIR</envar>/bin</filename> are automatically added. You
may use the tilde (~) for any paths you add using this option.</para>
</entry>
</row>

<row id="conf-branch">
<entry>branch</entry>
<entry>Overrides global</entry>
<entry><para>Set this option to checkout from a branch of &kde; instead of the
default of <replaceable>trunk</replaceable>, where &kde; development occurs.
For instance, to checkout &kde; 4.5 branch, you would set this option to
<replaceable>4.5</replaceable>.</para>
<para>If &kdesrc-build; fails to properly download a branch with this option, you
may have to manually specify the &url; to download from using the <link
linkend="conf-module-base-path">module-base-path</link> or <link
linkend="conf-override-url">override-url</link> options.</para>
<para>Note: This option also works with source modules that use
&git; instead of &subversion;.</para>
</entry>
</row>

<row id="conf-build-dir">
<entry>build-dir</entry>
<entry>Overrides global</entry>
<entry>Use this option to change the directory to contain the built sources. There
are three different ways to use it:

<orderedlist>

<listitem><para>Relative to the &kde; &subversion; source directory (see <link
linkend="conf-source-dir">the source-dir option</link>). This is the default,
and is selected if you type a directory name that does not start with a tilde
(~) or a slash (/).</para> <para>The default value is <filename
class="directory">build</filename>.</para></listitem>

<listitem><para>Absolute path. If you specify a path that begins with a /, then
that path is used directly. For example, <filename
class="directory">/tmp/kde-obj-dir/</filename>.</para></listitem>

<listitem><para>Relative to your home directory. If you specify a path that
begins with a ~, then the path is used relative to your home directory,
analogous to the shell's tilde-expansion. For example, <filename
class="directory">~/builddir</filename> would set the build directory to
<filename
class="directory">/home/user-name/builddir</filename>.</para></listitem>

</orderedlist>

Perhaps surprisingly, this option can be changed per module.

</entry>
</row>

<row id="conf-checkout-only">
<entry>checkout-only</entry>
<entry>Overrides global</entry>
<entry><para>Set this option to checkout &subversion; sources piece by piece. The
value for this option should be a space-separated list of directories to
checkout.  Although this option overrides the global option, be aware that
setting this as a global option makes no sense.
</para>

<para>Note that this setting has no effect on &git; modules due to the
operation of the &git; source control system.</para></entry>
</row>

<row id="conf-cmake-options">
<entry>cmake-options</entry>
<entry>Appends to global options (not applicable to qt-copy)</entry>
<entry><para>Use this option to specify what flags to pass to &cmake; when
creating the build system for the module. When this is used as a global option,
it is applied to all modules that this script builds. When used as a module
option, it is added to the end of the global options. This allows you to
specify common &cmake; options in the global section.</para>

<para>This option does not apply to qt-copy (which does not use &cmake;). Use
<link linkend="conf-configure-flags">configure-flags</link> instead.</para>

<para>Since these options are passed directly to the &cmake; command line, they
should be given as they would be typed into &cmake;. For example:</para>

<screen>  cmake-options -DCMAKE_BUILD_TYPE=RelWithDebInfo
</screen>

<para>Since this is a hassle, &kdesrc-build; takes pains to ensure that as long
as the rest of the options are set correctly, you should be able to leave this
option blank. (In other words, <emphasis>required</emphasis> &cmake; parameters
are set for you automatically)</para></entry>
</row>

<row id="conf-configure-flags">
<entry>configure-flags</entry>
<entry>Overrides global</entry>
<entry><para>Use this option to specify what flags to pass to ./configure when
creating the build system for the module. When this is used as a global-option,
it is applied to all modules that this script builds. <emphasis>This option
only works for qt-copy.</emphasis></para>

<para>To change configuration settings for KDE 4 modules, see
<link linkend="conf-cmake-options">cmake-options</link>.
</para>
</entry>
</row>

<row id="conf-colorful-output">
<entry>colorful-output</entry>
<entry>Cannot be overridden</entry>
<entry>Set this option to <replaceable>false</replaceable> to disable the colorful output of &kdesrc-build;.
This option defaults to <replaceable>true</replaceable>. Note that &kdesrc-build; will not output the
color codes to anything but a terminal (such as xterm, &konsole;, or the normal
&Linux; console).
</entry>
</row>

<row id="conf-cxxflags">
<entry>cxxflags</entry>
<entry>Appends to global option</entry>
<entry><para>Use this option to specify what flags to use for building the
module. This option is
specified here instead of with <link
linkend="conf-configure-flags">configure-flags</link> or <link
linkend="conf-cmake-options">cmake-options</link> because this option will also
set the environment variable <envar>CXXFLAGS</envar> during the build process.</para>

<para>Note that for &kde; 4 and any other modules that use &cmake;, it is necessary to set the
CMAKE_BUILD_TYPE option to "none" when configuring the module.  This can be done using the
<link linkend="conf-cmake-options">cmake-options</link> option.</para>
</entry>
</row>

<row id="conf-dest-dir">
<entry>dest-dir</entry>
<entry>Overrides global</entry>
<entry>Use this option to change the name a module is given on disk. For
example, if your module was extragear/network, you could rename it to
extragear-network using this option.  Note that although this changes the
name of the module on disk, it is not a good idea to include directories
or directory separators in the name as this will interfere with any
<link linkend="conf-build-dir">build-dir</link> or
<link linkend="conf-source-dir">source-dir</link> options.
</entry>
</row>

<row id="conf-disable-agent-check">
<entry>disable-agent-check</entry>
<entry>Cannot be overridden</entry>
<entry>Normally if you are using &ssh; to download the &subversion; sources
(such as if you are using the svn+ssh protocol), &kdesrc-build; will try and
make sure that if you are using ssh-agent, it is actually managing some &ssh;
identities. This is to try and prevent &ssh; from asking for your pass phrase
for every module. You can disable this check by setting
<option>disable-agent-check</option> to <replaceable>true</replaceable>.
</entry>
</row>

<row id="conf-do-not-compile">
<entry>do-not-compile</entry>
<entry>Overrides global</entry>
<entry><para>Use this option to select a specific set of directories not to be built in a
module (instead of all of them). The directories not to build should be space-separated.</para>

<para>Note that the sources to the programs will still be downloaded. You can use
the <link linkend="conf-checkout-only">checkout-only</link>
directive to choose directories that you want to check out.</para>

<para>For example, to hold &juk; and &kscd; in the kdemultimedia module from
compiling, you would add "do-not-compile juk kscd" to your kdemultimedia settings.</para>
</entry>
</row>

<row id="conf-email-address">
<entry>email-address</entry>
<entry>Cannot be overridden</entry>
<entry>
<para>Set this option to the e-mail address &kdesrc-build; should send from
should it ever need to send e-mail. You do not need to worry about this if you
do not use any feature which send e-mail. (They are all disabled by default).
</para>

<para>Currently only <link linkend="conf-email-on-compile-error">email-on-compile-error</link>
needs this option.</para>
</entry>
</row>

<row id="conf-email-on-compile-error">
<entry>email-on-compile-error</entry>
<entry>Cannot be overridden</entry>
<entry>
<para>You can set this option to the email address to send a report to when a
module fails to build. &kdesrc-build; will wait until all the modules are done
and collate all of the results in the report. The report is only sent if a
module fails to build.
</para>

<para>Please see the <link linkend="conf-email-address">email-address</link>
option to set the address &kdesrc-build; should send from, since the default
is usually not what you want.
</para>
</entry>
</row>

<row id="conf-inst-apps">
<entry>inst-apps</entry>
<entry>Overrides global</entry>
<entry>
This option was removed in version 1.10
</entry>
</row>

<row id="conf-install-after-build">
<entry>install-after-build</entry>
<entry>Overrides global</entry>
<entry>This option is used to install the package after it successfully builds.
This option is enabled by default. If you want to disable this, you need to set
this option to 0 in the <link linkend="configure-data">configuration
file</link>. You can also use the <link
linkend="cmdline-no-install"><option>--no-install</option></link> command line
flag.
</entry>
</row>

<row id="conf-kdedir">
<entry>kdedir</entry>
<entry>Overrides global</entry>
<entry>This option sets the directory that &kde; will be installed to after it
is built. It defaults to <filename class="directory">~/kde</filename>. If you
change this to a directory needing root access, you may want to read about the
<link linkend="conf-make-install-prefix">make-install-prefix</link> option as
well.</entry>
</row>

<row id="conf-kde-languages">
<entry>kde-languages</entry>
<entry>Cannot be overridden</entry>
<entry><para>This option allows you to choose to download and install
localization packages along with &kde;. You might do this if you do not live in
the United States and would like to &kde; translated into your native
language.</para>

<para>To use this option, set it to a space-separated list of languages to
install. Each language has a language code associated with it, which you
can look up at this page: <ulink
url="http://i18n.kde.org/teams/">http://i18n.kde.org/teams/</ulink>.
</para>

<para>It is alright to choose only one language. By default, none are
downloaded, which means &kde; will display in American English.</para>

<para>For instance, to choose to install French, you would set the option to
something like: <userinput><option>kde-languages</option>
<replaceable>fr</replaceable></userinput>.  You would still need to use
&systemsettings; in order to choose the French language, however.</para>
</entry>
</row>

<row id="conf-libpath">
<entry>libpath</entry>
<entry>Overrides global</entry>
<entry>Set this option to set the environment variable
<envar>LD_LIBRARY_PATH</envar> while building. You cannot override this setting
in a module option. The default value is blank, but the paths <filename
class="directory">$<envar>KDEDIR</envar>/lib</filename> and <filename
class="directory">$<envar>QTDIR</envar>/lib</filename> are automatically added.
You may use the tilde (~) for any paths you add using this option.
</entry>
</row>

<row id="conf-log-dir">
<entry>log-dir</entry>
<entry>Overrides global</entry>
<entry>Use this option to change the directory used to hold the log files
generated by the script.
</entry>
</row>

<row id="conf-make-install-prefix">
<entry>make-install-prefix</entry>
<entry>Overrides global</entry>
<entry>Set this variable to a space-separated list, which is interpreted as a
command and its options to precede the <userinput><command>make</command> <option>install</option></userinput> command used to install
modules. This is useful for installing packages with &sudo; for example, but
please be careful while dealing with root privileges.</entry>
</row>

<row id="conf-make-options">
<entry>make-options</entry>
<entry>Overrides global</entry>
<entry>Set this variable in order to pass command line options to the
<command>make</command> command. This is useful for programs such as <ulink
url="http://distcc.samba.org/"><application>distcc</application></ulink> or
systems with more than one processor core.
</entry>
</row>

<row id="conf-manual-build">
<entry>manual-build</entry>
<entry>Overrides global</entry>
<entry>Set the option value to <replaceable>true</replaceable> to keep the
build process from attempting to build this module. It will still be kept
up-to-date when updating from &subversion;.  This option is exactly equivalent
to the <link linkend="cmdline-no-build"><option>--no-build</option></link>
command line option.
</entry>
</row>

<row id="conf-manual-update">
<entry>manual-update</entry>
<entry>Overrides global</entry>
<entry>Set the option value to <replaceable>true</replaceable> to keep the
build process from attempting to update (and by extension, build or install)
this module. If you set this option for a module, then you have essentially
commented it out.
</entry>
</row>

<row id="conf-module-base-path">
<entry>module-base-path</entry>
<entry>Overrides global</entry>
<entry><para>Set this option to override &kdesrc-build;'s default directory path to the
module in question. This can be used, for example, to pull specific branches
or tagged versions of libraries. <ulink url="http://websvn.kde.org/">The &kde;
Source Viewer</ulink> is invaluable in helping to pick the right path.</para>

<para>Note that &kdesrc-build; constructs the final path according to the
following template:
<filename class="directory"><varname>$svn-server</varname>/home/kde/<varname>$module-base-path</varname></filename>.
</para>

<para>The default value is either <filename
class="directory">trunk/<varname>$module</varname></filename> or <filename
class="directory">trunk/KDE/<varname>$module</varname></filename>, depending on
the module name.</para>

<tip><para>Use the <link linkend="conf-branch">branch</link> or <link
linkend="conf-tag">tag</link> options instead whenever they are applicable.
</para></tip>
</entry>
</row>

<row id="conf-niceness">
<entry>niceness</entry>
<entry>Cannot be overridden</entry>
<entry>Set this option to a number between 20 and 0. The higher the number, the
lower a priority &kdesrc-build; will set for itself. The default is 10.
</entry>
</row>

<row id="conf-no-svn">
<entry>no-svn</entry>
<entry>Overrides global</entry>
<entry>If this option is set to true then &kdesrc-build; will not update the
source code for the module automatically.  It will still try to build the
module if it normally would have tried anyways.</entry>
</row>

<row id="conf-no-rebuild-on-fail">
<entry>no-rebuild-on-fail</entry>
<entry>Overrides global</entry>
<entry>This option was removed in version 1.10, since this behavior no longer helps
due to fixes in the underlying build system.</entry>
</row>

<row id="conf-override-url">
<entry>override-url</entry>
<entry>Overrides global</entry>
<entry>If you set this option, &kdesrc-build; will use its value as the &url;
to pass to &subversion; <emphasis>completely unchanged</emphasis>. You should
generally use this if you want to download a specific release but &kdesrc-build;
cannot figure out what you mean using <link linkend="conf-branch">branch</link>.
</entry>
</row>

<row id="conf-prefix">
<entry>prefix</entry>
<entry>Overrides global</entry>
<entry>This option controls where to install the module (normally the
<option><link linkend="conf-kdedir">kdedir</link></option> setting is used).
</entry>
</row>

<row id="conf-purge-old-logs">
<entry>purge-old-logs</entry>
<entry>Overrides global</entry>
<entry><para>This option controls whether old log directories are automatically
deleted or not. The default value is <replaceable>false</replaceable>.</para>

<para>Even if you have not set this option to true, you can manually purge the
old log directories by running:</para>

<screen>kdesrc-build --no-src --no-build --purge-old-logs kdelibs</screen>

<para>You can use any module name in the above command line, it does not have
to be kdelibs.</para>
</entry>
</row>

<row id="conf-qtdir">
<entry>qtdir</entry>
<entry>Overrides global</entry>
<entry>Set this option to set the environment variable <envar>QTDIR</envar> while building.
You cannot override this setting in a module option. If you do not specify
this option, it defaults to
<filename class="directory"><symbol>${source-dir}</symbol>/build/qt-copy</filename>,
which uses the qt-copy module included in the &kde; source repository.
You may use a tilde (~) to represent your home directory.
</entry>
</row>

<row id="conf-remove-after-install">
<entry>remove-after-install</entry>
<entry>Overrides global</entry>
<entry><para>If you are low on hard disk space, you may want to use this option
in order to automatically delete the build directory (or both the source and
build directories for one-time installs) after the module is successfully
installed.
</para>
<para>Possible values for this option are:
<itemizedlist>
<listitem><para>none - Do not delete anything (This is the default).</para></listitem>
<listitem><para>builddir - Delete the build directory, but not the source.</para></listitem>
<listitem><para>all - Delete both the source code and build directory.</para></listitem>
</itemizedlist>
</para>

<para>Note that using this option can have a significant detrimental impact on
both your bandwidth usage (if you use <replaceable>all</replaceable>) and the time taken to compile &kde;,
since &kdesrc-build; will be unable to perform incremental builds.</para>
</entry>
</row>

<row id="conf-repository">
<entry>repository</entry>
<entry>Overrides global</entry>
<entry><para>This option was introduced with version 1.10, and is used to
specify the &git; repository to download the source code for the module.
&Qt; (and therefore qt-copy) would need this option, as well as various
&kde; modules that are in the process of conversion to use &git;.</para></entry>
</row>

<row id="conf-revision">
<entry>revision</entry>
<entry>Overrides global</entry>
<entry>If this option is set to a value other than 0 (zero), &kdesrc-build;
will force the &subversion; update to bring the module to the exact revision
given, even if options like <link linkend="conf-branch">branch</link> are in
effect. If the module is already at the given revision then it will not be
updated further unless this option is changed or removed from the
configuration.</entry>
</row>

<row id="conf-run-tests">
<entry>run-tests</entry>
<entry>Overrides global</entry>
<entry>If set to <replaceable>true</replaceable>, then the module will be
built with support for running its test suite, and the test suite will be
executed as part of the build process. &kdesrc-build; will show a simple
report of the test results. This is useful for developers or those who want
to ensure their system is setup correctly.</entry>
</row>

<row id="conf-set-env">
<entry>set-env</entry>
<entry>Overrides global</entry>
<entry><para>This option accepts a space-separated set of values, where the first value
is the environment variable to set, and the rest of the values is what you
want the variable set to. For example, to set the variable <envar>RONALD</envar> to
McDonald, you would put in the appropriate section this command:</para>
<screen><command>set-env</command> <envar>RONALD</envar> <userinput>McDonald</userinput></screen>
<para>This option is special in that it can be repeated without overriding
earlier set-env settings in the same section of the <link linkend="configure-data">configuration file</link>. This
way you can set more than one environment variable per module (or
globally).</para>
</entry>
</row>

<row id="conf-source-dir">
<entry>source-dir</entry>
<entry>Overrides global</entry>
<entry>This option is used to set the directory on your computer to store the &kde;
&subversion; sources at. If you do not specify this value, the default is
<filename class="directory">~/kdesvn</filename>. If
you do specify this value, use an absolute path name.
</entry>
</row>

<row id="conf-stop-on-failure">
<entry>stop-on-failure</entry>
<entry>Overrides global</entry>
<entry>Set this option value to <replaceable>true</replaceable> to cause the script to stop execution
after an error occurs during the build or install process. This option is off
by default.
</entry>
</row>

<row id="conf-svn-server">
<entry>svn-server</entry>
<entry>Overrides global</entry>
<entry>This option is used to set the server used to check out from &subversion;.
The default is the anonymous &subversion; repository, <filename>svn://anonsvn.kde.org/</filename></entry>
</row>

<row id="conf-tag">
<entry>tag</entry>
<entry>Overrides global</entry>
<entry><para>Use this option to download a specific release of a module.</para>
<para><emphasis>Note:</emphasis> The odds are very good that you <emphasis>do not
want</emphasis> to use this option. &kde; releases are available in tarball form
from <ulink url="ftp://ftp.kde.org/">The &kde; FTP site</ulink> or one of <ulink
url="http://download.kde.org/download.php">its mirrors</ulink>.</para>
</entry>
</row>

<row id="conf-use-cmake">
<entry>use-cmake</entry>
<entry>Overrides global</entry>
<entry>This option was removed in &kdesrc-build; 1.4 as all &kde; 4 modules
require &cmake;, and &cmake; use is not permitted on any other modules.
</entry>
</row>

<row id="conf-use-idle-io-priority">
<entry>use-idle-io-priority</entry>
<entry>Cannot be overridden</entry>
<entry>This option, added in &kdesrc-build; 1.12, will cause a lower priority
to be used for disk and other I/O usage, which can significantly improve the
responsiveness of the rest of the system at the expense of slightly longer
running times for &kdesrc-build;. The default is to be disabled, to enable
the lower disk priority set this to <replaceable>true</replaceable>.
</entry>
</row>

<row id="conf-use-qt-builddir-hack">
<entry>use-qt-builddir-hack</entry>
<entry>Overrides global</entry>
<entry>This option has been removed due to improvements in the &Qt; build
system.
</entry>
</row>

<row id="conf-use-stable-kde">
<entry>use-stable-kde</entry>
<entry>Cannot be overridden</entry>
<entry><para>
This option was removed in version 1.10, which limits support to KDE 4,
removing the effect of this option.
</para>
</entry>
</row>

</tbody>

</tgroup>
</table>

</sect1>
