<chapter id="cmdline">
<title>Command Line Options and Environment Variables</title>

<para>
This script doesn't use environment variables.  If you need to set environment
variables for the build or install process, please see the <link
linkend="conf-set-env">set-env</link> option.
</para>

<para>
The script accepts the following command-line options:
</para>

<variablelist>

<varlistentry id="cmdline-help">
<term><option>--help</option></term>
<listitem><para>
only display simple help on this script.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-version">
<term><option>--version</option></term>
<listitem><para>
display the program version.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-author">
<term><option>--author</option></term>
<listitem><para>
display contact information for the
author.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-color">
<term><option>--color</option></term>
<listitem><para>
enable colorful output.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-nice">
<term><option>--nice=<replaceable>value</replaceable></option></term>
<listitem><para>
Sets the &niceness; value to <replaceable>value</replaceable> for the duration
of this run.  <replaceable>value</replaceable> should be between 0 and 20.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-color">
<term><option>--no-color</option></term>
<listitem><para>
disable colorful output.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-pretend">
<term><option>--pretend</option> (or <option>-p</option>)</term>
<listitem><para>
don't actually DO anything, but act like you did.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-quiet">
<term><option>--quiet</option> (or <option>-q</option>)</term>
<listitem><para>
Don't be as noisy with the output.  With this switch only the basics are
output.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-really-quiet">
<term><option>--really-quiet</option></term>
<listitem><para>
Only output warnings and errors.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-verbose">
<term><option>--verbose</option></term>
<listitem><para>
Be very descriptive about what's going on, and what kdesvn-build is doing.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-svn-only">
<term><option>--svn-only</option></term>
<listitem><para>
only perform the source update.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-build-only">
<term><option>--build-only</option></term>
<listitem><para>
only perform the build process.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-ignore-modules">
<term><option>--ignore-modules</option></term>
<listitem><para>
don't include the modules passed on the rest of the command line in the update/build
process.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-svn">
<term><option>--no-svn</option></term>
<listitem><para>
skip contacting the &svn; server.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-build">
<term><option>--no-build</option></term>
<listitem><para>
skip the build process.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-install">
<term><option>--no-install</option></term>
<listitem><para>
don't automatically install packages after they're built.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-debug">
<term><option>--debug</option></term>
<listitem><para>
enables debug mode for the script.  Currently
this means that all output will be dumped to STDOUT in addition to being
logged in the log directory like normal.  Also, many functions are much more
verbose about what they're doing in debugging mode.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-rebuild-on-fail">
<term><option>--no-rebuild-on-fail</option></term>
<listitem><para>
don't try and
rebuild modules that have failed building from scratch.  &kdesvn-build; will
never try to do this to a module that already was tried to be built from
scratch.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-refresh-build">
<term><option>--refresh-build</option></term>
<listitem><para>
recreate the build system and make from scratch.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-reconfigure">
<term><option>--reconfigure</option></term>
<listitem><para>
run the configure script again
without cleaning the build directory.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-recreate-configure">
<term><option>--recreate-configure</option></term>
<listitem><para>
run <command>make <option>-f</option>
Makefile.cvs</command> again to create the configure script, and continue
building as normal.  This option implies <option><link linkend="cmdline-reconfigure">--reconfigure</link></option>.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-resume-from">
<term><option>--resume-from</option></term>
<listitem><para>
This option is used to resume the build starting from the given module, which
should be the next option on the command line.  This option
implies <link linkend="cmdline-no-svn"><option>--no-svn</option></link>.  You should not specify
other module names on the command line.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-rc-file">
<term><option>--rc-file</option></term>
<listitem><para>
which interprets the next command line
parameter as the file to read the configuration options from.  The default
value for this parameter is ~/.kdesvn-buildrc.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-prefix">
<term><option>--prefix=&lt;/path/to/kde&gt;</option></term>
<listitem><para>
which allows you to change the directory that &kde; will be installed to from the command line.
This option implies <link linkend="cmdline-reconfigure"><option>--reconfigure</option></link>.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-build-system-only">
<term><option>--build-system-only</option></term>
<listitem><para>
stop after running <command>make <option>-f</option> Makefile.cvs</command>.  The configure
script will still need to be run, which &kdesvn-build; will do next time.  This lets you
prepare all the configure scripts at once so you can view the <command>./configure
<option>--help</option></command> for each module, and edit your configure-flags accordingly.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-install"><term><option>--install</option></term>
<listitem><para>
If this is the only command-line option, it tries to install all of the modules contained in
successfully-built, except for qt-copy, which doesn't need installation.  If command-line
options are specified after <option>--install</option>, they are all assumed to be modules to install.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-global-option">
<term><option>--&lt;option-name&gt;=</option></term>
<listitem><para>
You can use this option to override an option in your &rcfile; for
every module.  For instance, to override the <link
linkend="conf-log-dir">log-dir</link> option, you would do:
<option>--log-dir=/path/to/dir</option>.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-module-option">
<term><option>--&lt;module-name&gt;,&lt;option-name&gt;=</option></term>
<listitem><para>
You can use this option to override an option in your &rcfile; for
a specific module.  For instance, to override the <link
linkend="conf-use-unsermake">use-unsermake</link> option for kdemultimedia, you
would do: <option>--kdemultimedia,use-unsermake=false</option>.
</para></listitem>
</varlistentry>

</variablelist>

<para>
Any other command-line options are assumed to be modules to update and build.
Please, don't mix building with installing.
</para>

</chapter>
