<sect1 id="supported-cmdline-params">
<title>Supported command-line parameters</title>

<para>
The script accepts the following command-line options:
</para>

<variablelist>

<varlistentry id="cmdline-async">
<term><parameter>--async</parameter></term>
<listitem><para>
Enables the <link linkend="conf-async">asynchronous mode</link>, which can
perform the source code updates and module builds at the same time.  This is
the default, this option only needs specified if you have disabled it in the
configuration.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-help">
<term><parameter>--help</parameter></term>
<listitem><para>
Only display simple help on this script.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-version">
<term><parameter>--version</parameter></term>
<listitem><para>
Display the program version.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-author">
<term><parameter>--author</parameter></term>
<listitem><para>
Display contact information for the
author.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-color">
<term><parameter>--color</parameter></term>
<listitem><para>
Enable colorful output. (This is the default for interactive terminals).
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-nice">
<term><parameter>--nice=<replaceable>value</replaceable></parameter></term>
<listitem><para>
This value adjusts the computer CPU priority requested by &kdesrc-build;, and
should be in the range of 0-20. 0 is highest priority (because it is the
least <quote>nice</quote>), 20 is lowest priority. &kdesrc-build; defaults
to 10.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-async">
<term><parameter>--no-async</parameter></term>
<listitem><para>
Disables the <link linkend="conf-async">asynchronous mode</link> of updating.
Instead the update will be performed in its entirety before the build starts.
This option will slow down the overall process, but if you encounter IPC errors
while running &kdesrc-build; try using this option, and submitting a
<ulink url="http://bugs.kde.org/">bug report</ulink>.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-color">
<term><parameter>--no-color</parameter></term>
<listitem><para>
Disable colorful output.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-pretend">
<term><parameter>--pretend</parameter> (or <parameter>-p</parameter>)</term>
<listitem><para>
&kdesrc-build; will run through the update and build process, but instead of
performing any actions to update or build, will instead output what the
script would have done (e.g. what commands to run, general steps being taken,
etc.).</para>

<para>Note: Simple read-only commands (such as reading file information) may
still be run to make the output more relevant (such as correctly simulating
whether source code would be checked out or updated).
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-quiet">
<term><parameter>--quiet</parameter> (or <parameter>-q</parameter>)</term>
<listitem><para>
Do not be as noisy with the output. With this switch only the basics are
output.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-really-quiet">
<term><parameter>--really-quiet</parameter></term>
<listitem><para>
Only output warnings and errors.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-verbose">
<term><parameter>--verbose</parameter> (or <parameter>-v</parameter>)</term>
<listitem><para>
Be very descriptive about what is going on, and what &kdesrc-build; is doing.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-src-only">
<term><parameter>--src-only</parameter> (or <parameter>--svn-only</parameter>)</term>
<listitem><para>
Only perform the source update. (The <parameter>--svn-only</parameter> is
only supported for compatibility with older scripts).
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-build-only">
<term><parameter>--build-only</parameter></term>
<listitem><para>
Only perform the build process.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-ignore-modules">
<term><parameter>--ignore-modules</parameter></term>
<listitem><para>
Do not include the modules passed on the rest of the command line in the
update/build process (this is useful if you want to build most of the modules
in your <link linkend="configure-data">configuration file</link> and just skip
a few).
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-src">
<term><parameter>--no-src</parameter> (or <parameter>--no-svn</parameter>)</term>
<listitem><para>
Skip contacting the &subversion; server. (The <parameter>--no-svn</parameter>
parameter is only supported for compatibility with older versions of the
script).
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-build">
<term><parameter>--no-build</parameter></term>
<listitem><para>
Skip the build process.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-install">
<term><parameter>--no-install</parameter></term>
<listitem><para>
Do not automatically install packages after they are built.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-build-when-unchanged">
<term><parameter>--no-build-when-unchanged</parameter></term>
<term><parameter>--force-build</parameter></term>
<listitem><para>
This option explicitly disables skipping the build process (an optimization
controlled by the <link
linkend="conf-build-when-unchanged">build-when-unchanged</link> option). This is
useful for making &kdesrc-build; run the build when you have changed something
that &kdesrc-build; cannot check.</para>

<para><parameter>--force-build</parameter> performs the exact same function, and
is perhaps easier to remember.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-debug">
<term><parameter>--debug</parameter></term>
<listitem><para>
Enables debug mode for the script. Currently this means that all output will be
dumped to the standard output in addition to being logged in the log directory
like normal. Also, many functions are much more verbose about what they are
doing in debugging mode.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-rebuild-on-fail">
<term><parameter>--no-rebuild-on-fail</parameter></term>
<listitem><para>
Do not try to
rebuild modules that have failed building from scratch. &kdesrc-build; will
never try to do this to a module that already was tried to be built from
scratch.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-refresh-build">
<term><parameter>--refresh-build</parameter></term>
<listitem><para>
Recreate the build system and make from scratch.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-reconfigure">
<term><parameter>--reconfigure</parameter></term>
<listitem><para>
Run <command>cmake</command> (for &kde; modules) or
<command>configure</command> (for &Qt;) again, without cleaning the build
directory. You should not normally have to specify this, as &kdesrc-build; will
detect when you change the relevant options and automatically re-run the build
setup. This option is implied if <parameter><link
linkend="cmdline-refresh-build">--refresh-build</link></parameter> is used.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-resume-from">
<term><parameter>--resume-from</parameter></term>
<listitem><para>
This option is used to resume the build starting from the given module, which
should be the next option on the command line. You should not
specify other module names on the command line.
</para>

<note><para>This option formerly added <link
    linkend="cmdline-no-src"><parameter>--no-src</parameter></link>, but does
not any longer (since &kdesrc-build; 1.13). If you want to avoid source updates
when resuming, simply pass <option><replaceable>--no-src</replaceable></option>
in addition to the other options.
</para></note>

<para>See also: <xref linkend="cmdline-resume-after"/> and <xref
linkend="resuming-failed"/>. You would prefer to use this command line option
if you have fixed the build error and want &kdesrc-build; to complete the
build.</para></listitem>
</varlistentry>

<varlistentry id="cmdline-resume-after">
<term><parameter>--resume-after</parameter></term>
<listitem><para>
This option is used to resume the build starting after the given module, which
should be the next option on the command line. You should not
specify other module names on the command line.
</para>

<note><para>This option formerly added <link
    linkend="cmdline-no-src"><parameter>--no-src</parameter></link>, but does
not any longer (since &kdesrc-build; 1.13). If you want to avoid source updates
when resuming, simply pass <option><replaceable>--no-src</replaceable></option>
in addition to the other options.
</para></note>

<para>See also: <xref linkend="cmdline-resume-from"/> and <xref
linkend="resuming-failed"/>. You would prefer to use this command line option
if you have fixed the build error and have also built and installed the module
yourself, and want &kdesrc-build; to start again with the next
module.</para></listitem>
</varlistentry>

<varlistentry id="cmdline-rc-file">
<term><parameter>--rc-file</parameter></term>
<listitem><para>
This interprets the next command line parameter as the file to read the
configuration options from. The default value for this parameter is
<filename>kdesrc-buildrc</filename> (checked in the current directory) if
it is present, or <filename>~/.kdesrc-buildrc</filename> otherwise. See
also <xref linkend="kdesrc-buildrc" />.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-run">
<term><parameter>--run</parameter></term>
<listitem><para>
This option interprets the next item on the command line as a program to run,
and &kdesrc-build; will then finish reading the configuration file, update the
environment as normal, and then execute the given program.</para>

<para>This will not work to start a shell with the &kdesrc-build; environment
in most cases however, since interactive shells typically reset at least part
of the environment variables (such as <envar>PATH</envar> and
<envar>KDEDIRS</envar>) in the startup sequence.
</para>

<tip><para>If you want to see the environment used by &kdesrc-build;, you
can run the <command>printenv</command> command:</para>
<informalexample>
<screen>$ <command>kdesrc-build</command> <parameter>--run</parameter> <parameter>printenv</parameter>
KDE_SESSION_VERSION=4
SDL_AUDIODRIVER=alsa
LANGUAGE=
XCURSOR_THEME=Oxygen_Blue
LESS=-R -M --shift 5
QMAIL_CONTROLDIR=/var/qmail/control
... etc.
</screen>
</informalexample></tip>
</listitem>
</varlistentry>

<varlistentry id="cmdline-prefix">
<term><parameter>--prefix=&lt;/path/to/kde&gt;</parameter></term>
<listitem><para>
This allows you to change the directory that &kde; will be installed to from
the command line.  This option implies <link
linkend="cmdline-reconfigure"><parameter>--reconfigure</parameter></link>,
but using <link linkend="cmdline-refresh-build"><parameter>--refresh-build</parameter></link>
may still be required.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-revision">
<term><parameter>--revision</parameter></term>
<listitem><para>
This option causes &kdesrc-build; to checkout a specific numbered revision
for each &subversion; module, overriding any <link linkend="conf-branch">branch</link>,
<link linkend="conf-tag">tag</link>, or <link linkend="conf-revision">revision</link>
options already set for these modules.</para>

<para>This option is likely not a good idea, and is only supported for
compatibility with older scripts.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-build-system-only">
<term><parameter>--build-system-only</parameter></term>
<listitem><para>
This option causes &kdesrc-build; to abort building a module just before
the <command>make</command> command would have been run. This is supported
for compatibility with older versions only, this effect is not helpful for
the current &kde; build system.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-install"><term><parameter>--install</parameter></term>
<listitem><para>
If this is the only command-line option, it tries to install all of the modules
contained in <filename>log/latest/build-status</filename>. If command-line
options are specified after <parameter>--install</parameter>, they are all
assumed to be modules to install (even if they did not successfully build on
the last run).
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-purge-old-logs"><term><parameter>--purge-old-logs</parameter></term>
<listitem><para>
This option causes &kdesrc-build; to delete unneeded log directories after
the build, to save disk space. All log directories that are not needed to
satisfy a link from <filename>log/latest</filename> will be deleted. This is disabled
by default. To enable this option by default, see the <link linkend="conf-purge-old-logs">purge-old-logs</link>
option.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-no-snapshots"><term><parameter>--no-snapshots</parameter></term>
<listitem><para>
Supplying this option causes &kdesrc-build; to always perform a normal initial
checkout of a module instead of using a quick-start snapshot (only available
for Git modules from the <literal>kde-projects</literal> repository).

Note that this option should only be used if there is a failure using
snapshots, as the quick-start snapshot reduces load on the KDE source
repositories.
</para>

<note><para>Module snapshots <emphasis>are</emphasis> real checkouts. You
should not need to specify this option, it is only a troubleshooting
aid.</para></note>
</listitem>
</varlistentry>

<varlistentry id="cmdline-global-option">
<term><parameter>--&lt;option-name&gt;=</parameter></term>
<listitem><para>
You can use this option to override an option in your <link linkend="configure-data">configuration file</link> for
every module. For instance, to override the <link
linkend="conf-log-dir">log-dir</link> option, you would do:
<userinput><parameter>--log-dir=<filename class="directory"><replaceable>/path/to/dir</replaceable></filename></parameter></userinput>.
</para></listitem>
</varlistentry>

<varlistentry id="cmdline-module-option">
<term><parameter>--&lt;module-name&gt;,&lt;option-name&gt;=</parameter></term>
<listitem><para>
You can use this option to override an option in your <link linkend="configure-data">configuration file</link> for
a specific module.
</para></listitem>
</varlistentry>

</variablelist>

<para>
Any other command-line options are assumed to be modules to update and build.
Please, do not mix building with installing.
</para>

</sect1>
