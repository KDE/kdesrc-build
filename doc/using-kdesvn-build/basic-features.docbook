<sect1 id="basic-features">
<title>Basic &kdesvn-build; features</title>

<sect2 id="using-qt-copy">
<title>qt-copy support</title>
<para>&kdesvn-build; strives to maintain excellent support for the qt-copy
module included in the &kde; &subversion; repository.</para>

<note><para>
qt-copy is a copy of the source code for the latest release of the &Qt; toolkit
used by &kde;. It also contains a patchset of optimization and bug improvement
patches which may optionally be applied. These patches are still compatible
with the &Qt; library so that code produced using qt-copy will run with normal
&Qt;.
</para></note>

<para>Most of the differences required for qt-copy are handled automatically by
&kdesvn-build;. However, there are a few differences you may need to know
about.</para>

<itemizedlist>
<listitem><para>Normally the value for &configure-flags; for a module is
appended to the global setting for &configure-flags;. However, the
&configure-flags; setting for qt-copy will replace the global setting since
they are not equivalent command lines.
</para></listitem>

<listitem><para>&kdesvn-build; will automatically define some extra environment
variables to build qt-copy that are not normally required for the rest of &kde;.
</para></listitem>

<listitem><para>
qt-copy also has support for an optional patch set containing some bug fixes
and optimizations that have not yet made it to the official &Qt;. To enable
these, set the &apply-qt-patches; option to <replaceable>true</replaceable>. After
making this change you may have to run <userinput><command>kdesvn-build</command>
<option>--refresh-build</option> <option>qt-copy</option></userinput>.
</para></listitem>

</itemizedlist>

</sect2>

<sect2 id="kdesvn-build-std-flags">
<title>Standard flags added by &kdesvn-build;</title>
<para>To save you time, &kdesvn-build; adds some standard paths to your
environment for you:
</para>

<itemizedlist>
<listitem><para>
The path to the &kde; and &Qt; libraries is added to the
<envar>LD_LIBRARY_PATH</envar> variable automatically. This means that you
do not need to edit &libpath; to include them.
</para></listitem>

<listitem><para>
The path to the &kde; and &Qt; development support programs are added to the
<envar>PATH</envar> variable automatically. This means that you do not need to
edit &binpath; to include them.
</para></listitem>

<listitem><para>
The path to the &kde;-provided <application>pkg-config</application> is added
automatically to <envar>PKG_CONFIG_PATH</envar>. This means that you do not
need to use &set-env; to add these.
</para></listitem>

<listitem><para>
The setting for &kdedir; is automatically propagated to the <envar>KDEDIR</envar>
environment variable while building. (<envar>KDEDIRS</envar> is not affected).
</para></listitem>

<listitem><para>
The setting for &qtdir; is automatically propagated to the <envar>QTDIR</envar>
environment variable while building.
</para></listitem>

</itemizedlist>

</sect2>

<sect2 id="build-priority">
<title>Changing &kdesvn-build;'s build priority</title>
<para>Programs can run with different priority levels on Operating Systems
nowadays, including &Linux; and &BSD;. This allows the system to allocate time
for the different programs in accordance with how important they are.
</para>

<para>&kdesvn-build; will normally allocate itself a low priority so that the
rest of the programs on your system are unaffected and can run normally.
Using this technique, &kdesvn-build; will use extra CPU when it is available.
</para>

<para>&kdesvn-build; will still maintain a high enough priority level so that
it runs before routine batch processes and before CPU donation programs
such as <ulink url="http://setiathome.ssl.berkeley.edu/">Seti@Home</ulink>.
</para>

<para>To alter &kdesvn-build; so that it uses a higher, or lower priority level
permanently, then you need to adjust the &niceness; setting in the
<link linkend="configure-data">configuration file</link>. The &niceness; setting controls how <quote>nice</quote> &kdesvn-build; is to other
programs. In other words, having a higher &niceness; gives &kdesvn-build; a
lower priority. So to give &kdesvn-build; a higher priority, reduce the
&niceness; (and vice versa). The &niceness; can go from 0 (not nice at all, 
highest priority) to 20 (super nice, lowest priority).</para>

<para>You can also temporarily change the priority for &kdesvn-build; by
using the &cmd-nice; <link linkend="cmdline">command line option</link>. The value to the option is used
exactly the same as for &niceness;.</para>

<note><para>It is possible for some programs run by the super user to have a
negative nice value, with a correspondingly even higher priority for such
programs. Setting a negative (or even 0) &niceness; for &kdesvn-build; is not
a great idea, as it will not help run time significantly, but will make your
computer seem very sluggish should you still need to use it.
</para></note>

<informalexample>
<para>To run &kdesvn-build; with a niceness of 15 (a lower priority than
normal):</para>

<screen>
<prompt>&percnt;</prompt> <userinput><command>kdesvn-build</command> <option>--nice=<replaceable>15</replaceable></option></userinput>
</screen>

<para>Or, you can edit the <link linkend="configure-data">configuration file</link> to make the change permanent:</para>

<screen>
    &niceness; <replaceable>15</replaceable>
</screen>

</informalexample>
</sect2>

<sect2 id="root-installation">
<title>Installation as the superuser</title>
<para>You may wish to have &kdesvn-build; run the installation with super user
privileges. This may be for the unrecommended system-wide installation.
This is also useful when using a recommended single user &kde; build, however.
This is because some modules (especially kdebase) install programs that will
briefly need elevated permissions when run. They are not able to achieve these
permission levels unless they are installed with the elevated permissions.
</para>

<para>You could simply run &kdesvn-build; as the super user directly, but this
is not recommended, since the program has not been audited for that kind of use.
Although it should be safe to run the program in this fashion, it is better to
avoid running as the super user when possible.</para>

<para>To take care of this, &kdesvn-build; provides the &make-install-prefix;
option. You can use this option to specify a command to use to perform the
installation as another user. The recommended way to use this command is with
the &sudo; program, which will run the install command as the super user.
</para>

<informalexample>
<para>For example, to install all modules using &sudo;,
you could do something like this:</para>

<screen>
global
  &make-install-prefix; <replaceable>sudo</replaceable>
  # Other options
end global
</screen>

<para>To use &make-install-prefix; for only a single module, this would work:
</para>

<screen>
module <replaceable>kdemultimedia</replaceable>
  &make-install-prefix; <replaceable>sudo</replaceable>
end module
</screen>
</informalexample>

</sect2>

<sect2 id="build-progress">
<title>Showing the progress of a module build</title>
<para>This feature is always available, and is automatically enabled when
possible. What this does is display an estimated build progress while
building a module; that way you know about how much longer it will take to
build a module.
</para>

</sect2>

</sect1>
