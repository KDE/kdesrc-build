<sect1 id="kde-cmake-intro">
<title>Introduction to CMake</title>

<para>In March 2006, the <ulink url="http://www.cmake.org/"><application>CMake</application></ulink> program
beat out several competitors and was selected to be the build system for &kde; 4, replacing the
autotools-based system that &kde; has used from the beginning.</para>

<para>A introduction to CMake page is available on the <ulink
url="http://wiki.kde.org/tiki-index.php?page=KDECMakeIntro">KDE Wiki</ulink>.
Basically, instead of running make -f Makefile.cvs, then configure, then unsermake (or make),
we simply run cmake and then make.
</para>

<para>&kdesvn-build; has initial support for CMake.  A few features of &kdesvn-build;
were really features of the underlying buildsystem, including <link linkend="conf-inst-apps">inst-apps</link>,
<link linkend="conf-configure-flags">configure-flags</link>, 
and <link linkend="conf-do-not-compile">do-not-compile</link>.  When equivalent
features are available, they are provided.  For instance, the equivalent to the
configure-flags option is <link linkend="conf-cmake-options">cmake-options</link>.
</para>

<para>However, some options, like inst-apps or do-not-compile, have no direct
equivalent, and are disabled.  Should I find a way to implement them with CMake
I will do so and re-enable the option.  However, more or less everything works
the same.</para>

<para>Not all of KDE has been ported to use CMake at this point.  For example,
the <link linkend="conf-apidox">apidox</link> option is rather useless until the
equivalent infrastructure is ready.  I've tried to warn about such things but
not all deficiencies may be caught by &kdesvn-build; for now.</para>

</sect1>
