<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.5-Based Variant V1.1//EN" "dtd/kdedbx45.dtd" [
  <!--
    Documentation for kdesrc-build.
    Copyright (c) 2005-2008, 2010-2022 Michael Pyne <mpyne@kde.org>

    Copyright (c) 2005 Carlos Leonhard Woelz <carloswoelz@imap-mail.com>
    Copyright (c) 2009 Burkhard Lück <lueck@hube-lueck.de>
    Copyright (c) 2007, 2011 Federico Zenith <federico.zenith@members.fsf.org>
    Copyright (c) 2009-2011 Yuri Chornoivan <yurchor@ukr.net>
    ... and possibly others. Check the git source repository for specifics.

    Permission is granted to copy, distribute and/or modify this document under
    the terms of the GNU Free Documentation License, Version 1.2 or any later
    version published by the Free Software Foundation; with no Invariant
    Sections, no Front-Cover Texts, and no Back-Cover Texts.

    A copy of the license is included in COPYING.DOC. The license will be
    included in the generated documentation as well.
   -->
  <!ENTITY kappname "kdesrc-build">
  <!ENTITY package "kdesdk">
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % Ukrainian "INCLUDE"
> <!-- Change language only here -->
  <!ENTITY kdesrc-build "<application
>kdesrc-build</application
>">
  <!ENTITY BSD '<acronym
>BSD</acronym
>'>
  <!ENTITY git '<application
>Git</application
>'>
  <!ENTITY cmake '<application
>CMake</application
>'>
  <!ENTITY make '<application
>Make</application
>'>
  <!ENTITY ninja '<application
>Ninja</application
>'>
  <!ENTITY ssh '<application
>SSH</application
>'>
  <!ENTITY cron '<application
>Cron</application
>'>
  <!ENTITY subversion '<application
>Subversion</application
>'>
  <!ENTITY sudo '<application
>Sudo</application
>'>
  <!ENTITY url '<acronym
>URL</acronym
>'>

  <!-- These define shortcut entities for some of the configuration options.
       Just add them as necessary.
  -->

  <!ENTITY configure-flags '<link linkend="conf-configure-flags"
>configure-flags</link
>'>
  <!ENTITY kdedir '<link linkend="conf-kdedir"
>kdedir</link
>'>
  <!ENTITY qtdir '<link linkend="conf-qtdir"
>qtdir</link
>'>
  <!ENTITY build-dir '<link linkend="conf-build-dir"
>build-dir</link
>'>
  <!ENTITY module-base-path '<link linkend="conf-module-base-path"
>module-base-path</link
>'>
  <!ENTITY override-url '<link linkend="conf-override-url"
>override-url</link
>'>
  <!ENTITY source-dir '<link linkend="conf-source-dir"
>source-dir</link
>'>
  <!ENTITY email-address '<link linkend="conf-email-address"
>email-address</link
>'>
  <!ENTITY email-on-compile-error '<link linkend="conf-email-on-compile-error"
>email-on-compile-error</link
>'>
  <!ENTITY colorful-output '<link linkend="conf-colorful-output"
>colorful-output</link
>'>
  <!ENTITY tag '<link linkend="conf-tag"
>tag</link
>'>
  <!ENTITY branch '<link linkend="conf-branch"
>branch</link
>'>
  <!ENTITY do-not-compile '<link linkend="conf-do-not-compile"
>do-not-compile</link
>'>
  <!ENTITY checkout-only '<link linkend="conf-checkout-only"
>checkout-only</link
>'>
  <!ENTITY svn-server '<link linkend="conf-svn-server"
>svn-server</link
>'>
  <!ENTITY make-install-prefix '<link linkend="conf-make-install-prefix"
>make-install-prefix</link
>'>
  <!ENTITY niceness '<link linkend="conf-niceness"
>niceness</link
>'>
  <!ENTITY set-env '<link linkend="conf-set-env"
>set-env</link
>'>
  <!ENTITY libpath '<link linkend="conf-libpath"
>libpath</link
>'>
  <!ENTITY binpath '<link linkend="conf-binpath"
>binpath</link
>'>

  <!-- These define shortcut entities for some of the command line options.
       Just add them as necessary.
  -->
  <!ENTITY cmd-nice '<link linkend="cmdline-nice"
>--nice</link
>'>
  <!ENTITY cmd-ignore-modules '<link linkend="cmdline-ignore-modules"
>--ignore-modules</link
>'>
  <!ENTITY cmd-resume-from '<link linkend="cmdline-resume-from"
>--resume-from</link
>'>
  <!ENTITY cmd-resume-after '<link linkend="cmdline-resume-after"
>--resume-after</link
>'>
  <!ENTITY cmd-reconfigure '<link linkend="cmdline-reconfigure"
>--reconfigure</link
>'>
  <!ENTITY cmd-refresh-build '<link linkend="cmdline-refresh-build"
>--refresh-build</link
>'>
]>

<book id="kdesrc-build" lang="&language;">

<bookinfo>
<title
>Підручник зі скрипту &kdesrc-build;</title>

<authorgroup id="authors">
    <author
>&Michael.Pyne; &Michael.Pyne.mail;</author>
    <author
><personname
><firstname
>Carlos</firstname
><surname
>Woelz</surname
></personname
> <email
>carloswoelz@imap-mail.com</email
> </author>

<othercredit role="translator"
><firstname
>Юрій</firstname
><surname
>Чорноіван</surname
><affiliation
><address
><email
>yurchor@ukr.net</email
></address
></affiliation
><contrib
>Переклад українською</contrib
></othercredit
> 

</authorgroup>

<copyright>
<year
>2006</year>
<year
>2007</year>
<year
>2008</year>
<year
>2009</year>
<year
>2010</year>
<year
>2011</year>
<year
>2012</year>
<year
>2013</year>
<year
>2014</year>
<year
>2015</year>
<year
>2016</year>
<year
>2017</year>
<year
>2018</year>
<year
>2019</year>
<holder
>Michael Pyne</holder>
</copyright>

<copyright>
<year
>2005</year>
<holder
>Carlos Woelz</holder>
</copyright>

<legalnotice
>&FDLNotice;</legalnotice>

<date
>20 січня 2018 року</date>
<releaseinfo
>&kdesrc-build; 17.12</releaseinfo>

<abstract>
<para
>&kdesrc-build; — це скрипт, який збирає і встановлює програми &kde; безпосередньо зі сховищ кодів проєкту &kde;.</para>
</abstract>

<keywordset>
<keyword
>KDE</keyword>
<keyword
>kdesdk</keyword>
<keyword
>SVN</keyword>
<keyword
>Subversion</keyword>
<keyword
>git</keyword>
<keyword
>Розробка KDE</keyword>
<!-- Older names for the software -->
<keyword
>kdesvn-build</keyword>
<keyword
>kdecvs-build</keyword>
</keywordset>

</bookinfo>

<chapter id="introduction">
<title
>Вступ</title>

<sect1 id="brief-intro">
<title
>Короткий вступ до &kdesrc-build;</title>

<sect2 id="whatis-kdesrc-build">
<title
>Для чого призначено &kdesrc-build;?</title>

<para
>&kdesrc-build; — скрипт, який допомагає учасникам спільноти &kde; встановлювати програмне забезпечення <ulink url="https://www.kde.org/"
>&kde;</ulink
> зі сховищ <ulink url="https://git-scm.com/"
>&git;</ulink
> та <ulink url="http://subversion.tigris.org/"
>&subversion;</ulink
> та неперервно його оновлювати. Цей скрипт, зокрема, призначено для тих, хто хоче тестувати та розробляти програмне забезпечення &kde;, включно з користувачами, які хочуть переконатися у виправленні певної вади, та розробниками, які працюють над новими можливостями. </para>

<para
>&kdesrc-build; може бути налаштовано для супроводу окремого модуля, всього середовища Плазми з набором програм &kde; або якогось проміжного варіанта. </para>

<para
>Для початку, ознайомтеся з розділом <xref linkend="getting-started"/> чи читайте підручник далі, щоб докладніше розібратися із принципами роботи &kdesrc-build; та питаннями, розібраними у цьому підручнику. </para>
</sect2>

<sect2 id="operation-in-a-nutshell">
<title
>Робота &kdesrc-build; «у пісочниці»</title>

<para
>&kdesrc-build; працює з використанням інструментів, доступ до яких користувач може отримати з командного рядка із використанням тих самих інтерфейсів, які доступні користувачу. Під час роботи &kdesrc-build; виконується така послідовність дій: </para>

<orderedlist>
<listitem
><para
>&kdesrc-build; читає параметри <link linkend="cmdline"
>командного рядка</link
> та <link linkend="configure-data"
>файли налаштувань</link
> для визначення частин, які слід зібрати, параметрів збирання, місця встановлення тощо.</para
></listitem>

<listitem
><para
>&kdesrc-build; виконує оновлення початкових кодів для кожного з <link linkend="module-concept"
>модулів</link
>. Оновлення продовжується, доки всі модулі не буде оновлено. Модулі, які не вдасться оновити у звичайному режимі, не зупинять збирання, — програма просто повідомить наприкінці збирання, які модулі не вдалося оновити.</para
></listitem>

<listitem
><para
>Модулі, які було успішно оновлено, буде зібрано, для них буде запущено відповідні комплекси тестування, а потім їх буде встановлено. Для зменшення загального часу обробки &kdesrc-build; типово запускатиме збирання коду, щойно завершиться оновлення першого з модулів. Решта модулів при цьому оновлюватиметься у фоновому режимі. </para
></listitem>
</orderedlist>

<tip
><para
><emphasis
>Чудовий</emphasis
> огляд збирання модулів &kde; із інформативними діаграмами наведено у <ulink url="https://www.davidrevoy.com/article193/guide-building-krita-on-linux-for- cats"
>статті із обговоренням збирання програми &kde; &krita;</ulink
>. Саме у такий спосіб &kdesrc-build; автоматизує збирання усіх модулів &kde;.</para>
</tip>

</sect2>
</sect1>

<sect1 id="intro-toc">
<title
>Огляд документації</title>

<para
>У цьому підручнику подано огляд таких аспектів роботи &kdesrc-build;: </para>

<itemizedlist>
<listitem
><para
><link linkend="getting-started"
>Огляд</link
> початкових кроків.</para
></listitem>
<listitem
><para
>Основні <link linkend="features"
>можливості</link
>.</para
></listitem>
<listitem
><para
>Синтаксис та параметри <link linkend="configure-data"
>файла налаштувань</link
>.</para
></listitem>
<listitem
><para
><link linkend="cmdline"
>Команди та параметри</link
>.</para
></listitem>
</itemizedlist>

<para
>Крім того, задокументовано кроки, які вам слід виконати за допомогою сторонніх інструментів (іншими словами, кроків, які &kdesrc-build; не виконує у автоматичному режимі). </para>

</sect1>
</chapter>

<chapter id="getting-started">
<title
>Початок роботи</title>

<para
>У цій главі ми продемонструємо, як скористатися &kdesrc-build; для отримання модулів зі сховища &kde; і їх збирання. Тут ми наведемо базові пояснення щодо структури системи керування версіями &kde; і кроків, які вам слід виконати до запуску скрипту. </para>

<para
>Всі питання, обговорені у цій главі, докладніше викладено у <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source"
>статті щодо збирання з початкових кодів</ulink
>, розміщеній на <ulink url="https://community.kde.org/"
>вебсайті вікі спільноти &kde;</ulink
>. Якщо ви компілюєте &kde; вперше, вам варто прочитати цей підручник або проконсультуватися з цим довідником. Там ви знайдете докладні відомості щодо інструментів пакування та потрібних пакунків, типових проблем з компіляцією, стратегій і запуску нововстановленого &kde;. </para>

<sect1 id="before-building">
<title
>Підготовка системи до збирання &kde;</title>

<sect2 id="before-building-users">
<title
>Створення нового облікового запису користувача</title>

<para
>Рекомендуємо вам скористатися окремим обліковим записом користувача для збирання, встановлення і запуску програмного забезпечення &kde;, оскільки таким чином ви зменшите об’єм роботи зі зміни прав доступу та уникнете перешкод, пов’язаних з псуванням налаштувань пакунків з вашого дистрибутива. Якщо у системі вже встановлено пакунки &kde;, найкращим вибором буде створення окремого облікового запису для збирання і запуску нового &kde;. </para>

<tip
><para
>Якщо ви не чіпатимете загальносистемного &kde;, у вас завжди буде запасний варіант на випадок, якщо помилка у програмному коді зробить зібрані вами програми непридатними до користування. </para
></tip>

<para
>Якщо хочете, можете усе так налаштувати, щоб встановлення відбувалося до загальносистемного каталогу (наприклад <filename class="directory"
>/usr/src/local</filename
>). Тут ми не обговорюватимемо цей тип встановлення, оскільки ми припускаємо, що ви ознайомлені зі наслідками своїх дій. </para>

</sect2>
<sect2 id="before-building-preparation">
<title
>Перевірка готовності вашої системи до збирання програмного забезпечення &kde; з початкових кодів</title>

<para
>Перш ніж почати користування скриптом &kdesrc-build; (або будь-яким іншим інструментом для збирання), вам слід встановити інструменти для розробки і бібліотеки, потрібні для &kde;. Майже повний список потрібних інструментів можна знайти на сторінці <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source#Install_required_devel_packages"
>вікі спільноти KDE</ulink
>. </para>

<para
>Ось список деяких з потрібних для збирання програм:</para>
<itemizedlist>

<listitem
><para
>Вам знадобиться &cmake;. Цю програму &kde; використовує для обробки налаштувань початкового коду під час збирання та створення специфічних команд збирання для вашої системи. Номер потрібної вам версії залежить від версій програмного забезпечення &kde;, які ви збираєте (подробиці див. на TechBase). Якщо ваш дистрибутив достатньо сучасний, включеного до нього пакунка &cmake; має бути достатньо. </para
></listitem>

<listitem
><para
>Крім того, вам слід встановити клієнтське програмне забезпечення для отримання початкових кодів &kde;. Це означає, що вам слід встановити такі пакунки:</para>

<itemizedlist>
<listitem
><para
>Вам слід встановити <ulink url="https://git-scm.com/"
>систему керування кодом Git</ulink
>, яка використовується для <ulink url=" https://commits.kde.org/"
>початкового коду</ulink
> усіх проєктів &kde;.</para
></listitem>

<listitem
><para
>Хоча збирання відповідного модуля (libdbusmenu-qt) і не є обов’язковим, вам може знадобитися система керування версіями <ulink url="http://bazaar.canonical.com/"
>Bazaar</ulink
> (цей модуль потрібен для збирання бібліотек &kde;). Для більшості користувачів цю бібліотеку можна встановити за допомогою системи керування пакунками дистрибутива, але у &kdesrc-build; передбачено і можливість її збирання. Для збирання libdbusmenu-qt вам слід встановити Bazaar.</para
></listitem>
</itemizedlist
></listitem>

<listitem
><para
>Скриптова мова Perl потрібна для роботи &kdesrc-build;, взаємодії із деякими сховищами &kde; та &Qt; (якщо ви збираєте цю бібліотеку з початкових кодів).</para>

<para
>Пакунки Perl, які є частиною вашого дистрибутива, мають підійти (потрібна Perl версії не нижчої за 5.14), але вам також знадобляться декілька додаткових модулів (&kdesrc-build; попередить вас, якщо у системі їх не буде виявлено):</para>

<itemizedlist>
    <listitem
><para
>IO::Socket::SSL</para
></listitem>
    <listitem
><para
>JSON::PP або JSON::XS</para
></listitem>
    <listitem
><para
>YAML::PP, YAML::XS або YAML::Syck</para
></listitem>
</itemizedlist>
</listitem>

<listitem
><para
>Вам знадобиться усе середовище розробки мовою C++ (компілятор, стандартна бібліотека, середовище виконання та усі пов'язані пакунки для розробки). Мінімальна потрібна версія може бути різною — усе залежить від модуля &kde;: збірка &kde; Frameworks 5 може бути зібрана найдавнішими компіляторами, а Плазма 5 &kde; та програми &kde; можуть вимагати для збирання найновіших версій компілятора.</para>
<para
>Мінімальними рекомендованими версіями є GCC 4.8 або Clang 4. У багатьох дистрибутивах передбачено просте встановлення цих інструментів за допомогою метапакунка <quote
>build-essentials</quote
>. Крім того, можна встановити «залежності для збирання» &Qt; або подібні набори пакунків. На вікі спільноти KDE є <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source/Install_the_dependencies"
>сторінка зі списком рекомендованих пакунків для основних дистрибутивів</ulink
>. </para>
</listitem>

<listitem
><para
>Вам знадобиться засіб збирання, який, власне, виконуватиме кроки компіляції (які було визначено &cmake;). Рекомендуємо скористатися GNU Make, який має бути доступним до встановлення за допомогою програми для керування пакунками вашого дистрибутива. У &cmake; передбачено підтримку інших засобів збирання, зокрема &ninja;. Цими засобами збирання можна скористатися з &kdesrc-build; за допомогою параметра файла налаштувань <link linkend="conf-custom-build-command"
>custom-build-command</link
>. </para
></listitem>

<listitem
><para
>Нарешті, вам знадобляться відповідні бібліотеки &Qt; (разом із пакунками для розробки) для версії програмного забезпечення &kde;, яку ви збираєте. Офіційно, у &kdesrc-build; не передбачено підтримки збирання &Qt; 5 (поточної основної версії бібліотеки), отже, рекомендуємо вам скористатися пакунками для розробки з вашого дистрибутива або ознайомитися із настановами з вікі спільноти KDE щодо <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source/OwnQt5"
>збирання Qt 5 власноруч</ulink
>. </para
></listitem>
</itemizedlist>

<note
><para
>У більшості операційних систем передбачено спосіб простого встановлення потрібних інструментів для розробки. Зверніться до <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source#Install_required_devel_packages"
>сторінки вікі спільноти щодо потрібних для розробки пакунків</ulink
>, щоб ознайомитися з готовими настановами.</para
></note>

<important
><para
>Деякі з цих пакунків поділено на бібліотеки (або програми) і пакунки для розробки Вам знадобляться принаймні програма або бібліотека <emphasis
>і</emphasis
> її пакунок для розробки. </para
></important>

</sect2>

<sect2 id="before-building-prepare-script">
<title
>Налаштування &kdesrc-build;</title>

<sect3 id="get-kdesrc-build">
<title
>Встановлення &kdesrc-build;</title>
<para
>Розробники &kde; постійно вдосконалюють &kdesrc-build;, підтримуючи його синхронізацію із поступом у розробці &kde;, зокрема, поліпшуючи рекомендовані налаштування &kdesrc-build;, додаючи модулі, удосконалюючи прапорці &cmake; тощо.</para>

<para
>Через це, ми рекомендуємо отримати код &kdesrc-build; безпосередньо з початкового сховища коду, а потім періодично оновлювати програму.</para>

<para
>Ви можете отримати &kdesrc-build; зі сховища його коду за допомогою такої команди:</para>
<programlisting
><prompt
>$ </prompt
><userinput
><command
>git <option
>clone</option
> <option
>https://invent.kde.org/sdk/kdesrc-build.git</option
> <option
><filename class="directory"
><replaceable
>~/kdesrc-build</replaceable
></filename
></option
></command
></userinput
>
</programlisting>

<para
>Замініть <option
><replaceable
>~/kdesrc-build</replaceable
></option
> на адресу каталогу, до якого слід встановити програму. </para>

<para
>Згодом, ви можете оновити код &kdesrc-build; за допомогою такої команди:</para>
<programlisting
><prompt
>$ </prompt
><userinput
><command
>cd <option
><filename class="directory"
><replaceable
>~/kdesrc-build</replaceable
></filename
></option
></command
></userinput>
<prompt
>$ </prompt
><userinput
><command
>git <option
>pull</option
></command
></userinput
>
</programlisting>

<tip
><para
>Ми рекомендуємо додати каталог встановлення &kdesrc-build; до вашої змінної середовища <envar
>PATH</envar
>, щоб ви могли запускати &kdesrc-build;, не вказуючи шлях до цього каталогу під час кожного запуску скрипту.</para
></tip>
</sect3>

<sect3 id="setup-rcfile">
<title
>Підготовка файла налаштувань</title>

<para
>&kdesrc-build; використовує для керування збиранням <link linkend="configure-data"
>файл налаштувань</link
>. У файлі зберігаються дані щодо модулів, які слід зібрати, дані щодо місця, де має бути встановлено модулі, тощо. Цей файл буде збережено як <filename
>~/.config/kdesrc-buildrc</filename
> (<filename
>$XDG_CONFIG_HOME/kdesrc-buildrc</filename
>, якщо встановлено значення <envar
>$XDG_CONFIG_HOME</envar
>).</para>

<para
>Ви можете скористатися програмою, включеною до складу &kdesrc-build; з назвою <application
>kdesrc-build-setup</application
> з метою приготування простих налаштувань kdesrc-build. Після цього ви можете внести зміни до <filename
>~/.config/kdesrc-buildrc</filename
> відповідно до ваших уподобань.</para>

<para
>Програма <application
>kdesrc-build-setup</application
> запускається з термінала (замість використання графічного інтерфейсу), подібно до &kdesrc-build;, отже ви можете скористатися нею, навіть якщо графічний інтерфейс недоступний.</para>

<sect4 id="setup-rcfile-manually">
<title
>Ручне визначення параметрів у файлі налаштувань</title>

<para
>Крім того, ви можете створити власний файл налаштувань вручну. Для цього скопіюйте включений зразок файла налаштувань <filename
>kdesrc-buildrc-kf5-sample</filename
> до <filename
>~/.config/kdesrc-buildrc</filename
>, а потім внесіть до нього зміни. Корисні настанови щодо цього викладено у розділі <xref linkend="kdesrc-buildrc"/>. Особливо корисною може бути <link linkend="conf-options-table"
>таблиця параметрів налаштування</link
>. </para>

<para
>До складу &kdesrc-build; включено багато рекомендованих файлів налаштувань, у яких реалізовано підтримку &kde; Frameworks 5, Плазми 5 та інших програм &kde;. Скрипт <application
>kdesrc-build-setup</application
> посилається на ці файли у створеному ним файл налаштувань, але ви можете також зробити це власноруч. Див. розділ <xref linkend="kdesrc-buildrc-including"/>, щоб дізнатися більше про те, як використати інші файли налаштувань у вашому власному <filename
>kdesrc-buildrc</filename
>. </para>

<para
>Докладніші відомості щодо синтаксису <link linkend="configure-data"
>файла налаштувань</link
> можна знайти у розділах <xref linkend="configure-data"/> і <xref linkend="kdesrc-buildrc"/>. </para>
</sect4>
</sect3>
</sect2>
</sect1>

<sect1 id="configure-data">
<title
>Визначення даних налаштувань</title>

<para
>Щоб користуватися &kdesrc-build;, вам слід мати файл з назвою <filename
>.kdesrc-buildrc</filename
> (або у <envar
>$XDG_CONFIG_HOME</envar
>, якщо встановлено) у вашому домашньому каталозі, у цьому файлі визначаються загальні параметри і перелік модулів, які ви бажаєте отримати і зібрати. </para>

<note
><para
>Ви можете скористатися іншим файлами налаштувань &kdesrc-build;, відповідну процедуру описано у розділі <xref linkend="kdesrc-buildrc"/>. Якщо у вас є потреба у використанні декількох наборів налаштувань, будь ласка, ознайомтеся з цим розділом. Надалі ми вважатимемо, що налаштування зберігаються у файлі <filename
>~/.config/kdesrc-buildrc</filename
>. </para
></note>

<para
>Найпростішим способом початкового налаштування є використання файла <filename
>kdesrc-buildrc-kf5-sample</filename
> як зразка. Достатньо змінити загальні параметри так, щоб вони відповідали вашим потребам, а також змінити список модулів, які ви бажаєте зібрати. </para>

<para
>Типових параметрів буде достатньо для збирання &kde;. Ймовірно, що серед параметрів, які ви захочете змінити, можуть бути: </para>

<itemizedlist>
<listitem
><para
><link linkend="conf-kdedir"
>kdedir</link
>, який змінює каталог призначення, куди буде встановлено програмне забезпечення &kde;. Типовим є каталог <filename class="directory"
>~/kde</filename
>, тобто середовище буде встановлено для одного (вашого) користувача.</para
></listitem>

<listitem
><para
><link linkend="conf-branch-group"
>branch-group</link
> — параметр, яким можна скористатися для вибору відповідної гілки розробки модулів &kde; у цілому. Передбачено підтримку багатьох варіантів збирання, але, найімовірніше, вам потрібна гілка <option
>kf5-qt5</option
>. Якщо використано саме цю гілку, &kdesrc-build; отримає найсвіжіший код на основі &Qt; 5 та &kde; Frameworks 5.</para>

<tip
><para
>Якщо ви не виберете якоїсь гілки, &kdesrc-build; використовуватиме типову, але типова гілка з часом змінюватиметься, тому варто вибрати гілку власноруч, щоб зміна гілки не стала для вас несподіванкою.</para
></tip>
</listitem>

<listitem
><para
><link linkend="conf-source-dir"
>source-dir</link
> — керування каталогом, який &kdesrc-build; використовує для отримання початкового коду, запуску процедури збирання та збереження журналу. Типовим каталогом є <filename class="directory"
>~/kdesrc</filename
>.</para
></listitem>

<listitem
><para
><link linkend="conf-cmake-options"
>cmake-options</link
> — параметр, який встановлює параметри, які слід передати програмі &cmake; під час збирання кожного з модулів. Типово, використовується для встановлення варіантів <quote
>debug</quote
> або <quote
>release</quote
>, тобто вмикання (або вимикання) додаткових можливостей, або передавання даних щодо розташування потрібних бібліотек до процесу збирання. </para
></listitem>

<listitem
><para
><link linkend="conf-make-options"
>make-options</link
> — параметр, який визначає параметри, які використовуватимуться для запуску самої програми <application
>make</application
> для збирання кожного з модулів (щойно &cmake; визначить систему збирання). </para>

<para
>Найтиповішим параметром є <option
>-j<replaceable
>N</replaceable
></option
>, де <replaceable
>N</replaceable
> слід замінити на максимальну кількість завдань із компіляції, які ви хочете виконувати одночасно. Чим більшою буде кількість (аж до кількості логічних процесорів, які доступні у вашій системі), тим швидшою буде компіляція, але тим більшим буде навантаження на систему. </para>

<tip
><para
>&kdesrc-build; встановлює для параметра <option
><link linkend="conf-num-cores"
>num-cores</link
></option
> значення визначеної кількості доступних ядер-обробників. Ви також можете скористатися цим значенням у ваших файлах налаштувань, щоб не встановлювати значення вручну. </para
></tip>

<example id="make-options-example">
<title
>Налаштовування Make на компіляцію з використанням усіх доступних процесорів з виключеннями</title>
<screen
>global
    # Ця змінна середовища автоматично використовується make, зокрема
    # у командах make, які не віддаються kdesrc-build безпосередньо, наприклад, командах налаштовування Qt
    set-env MAKEFLAGS -j<literal
>${num-cores}</literal>
    &hellip;
end global

&hellip;

module-set <replaceable
>big-module-set</replaceable>
    repository kde-projects
    use-modules <replaceable
>calligra</replaceable>
    make-options -j2 # Зменшити кількість завдань зі збирання лише для цих модулів
end module-set
</screen>
</example>

<note
><para
>У деяких великих сховищах Git ваша система може загрузнути у потоці багатьох паралельних завдань із збирання. Особливо цим відзначаються сховища &Qt; WebKit та &Qt; WebEngine. Щоб зберегти можливість працювати у системі, варто зменшити кількість завдань зі збирання для певних модулів.</para>
<para
><xref linkend="make-options-example"/> є прикладом того, як це зробити.</para>
</note>

</listitem>
</itemizedlist>

<para
>Ймовірно, вам захочеться вибрати для збирання інші модулі. Спосіб визначення цих модулів описано у розділі <xref linkend="selecting-modules"/>.</para>

</sect1>

<sect1 id="building-and-troubleshooting">
<title
>Використання скрипту &kdesrc-build;</title>
<para
>Після визначення даних налаштувань ви будете готові до запуску самого скрипту. Навіть якщо ви все ще хочете дещо налаштувати додатково або ознайомитися із додатковою довідковою інформацією, все ж варто одразу принаймні завантажити метадані проєктів &kde;.</para>

<sect2 id="loading-kdesrc-build-metadata">
<title
>Завантаження метаданих проєкту</title>

<para
>У вікні термінала увійдіть до системи від імені користувача, якого ви використаєте для компіляції програмного забезпечення &kde;, і виконайте команду: </para>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--metadata-only</option
></userinput
>
</screen>

<para
>Ця команда налаштує каталог з початковими кодами і з'єднає його зі сховищами &git; KDE для отримання бази даних сховищ git та бази метаданих залежностей без компіляції чи внесення змін до коду. Корисно віддати цю команду окремо, оскільки ці метадані корисні для виконання інших команд &kdesrc-build;. </para>

</sect2>

<sect2 id="pretend-mode">
<title
>Попередній перегляд того, що трапиться, якщо запустити kdesrc-build</title>

<para
>Якщо встановлено метадані проєкту, ви можете попередньо переглянути дії, які буде виконано &kdesrc-build; після запуску програми. Зробити це можна за допомогою параметра рядка команди <option
><link linkend="cmdline-pretend"
>--pretend</link
></option
>.</para>

<screen
><prompt
>&percnt; </prompt
><command
>./kdesrc-build</command
> <option
>--pretend</option
>
</screen>

<para
>Ви маєте побачити повідомлення щодо того, що певні пакунки успішно зібрано (хоча насправді нічого не було зібрано). Якщо не буде показано повідомлення про якісь значні проблеми, ви зможете перейти до безпосереднього запуску скрипту для збирання.</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--stop-on-failure</option
></userinput
>
</screen>

<para
>Ця команда призведе до отримання відповідного початкового коду та збирання і встановлення кожного модуля за порядком, але її виконання буде зупинено, якщо якийсь із модулів не вдасться зібрати (через використання параметра <option
>--stop-on-failure</option
>). Зрештою, ви маєте побачити виведені дані, подібні до даних у розділі <xref linkend="example-build-sequence"/>:</para>

<example id="example-build-sequence">
<title
>Приклад даних, виведених під час запуску kdesrc-build</title>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
></userinput>
Updating kde-build-metadata (to branch master)
Updating sysadmin-repo-metadata (to branch master)

Building libdbusmenu-qt (1/200)
        No changes to libdbusmenu-qt source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building taglib (2/200)
        Updating taglib (to branch master)
        Source update complete for taglib: 68 files affected.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building extra-cmake-modules from &lt;module-set at line 32&gt; (3/200)
        Updating extra-cmake-modules (to branch master)
        Source update complete for extra-cmake-modules: 2 files affected.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

        ...

Building kdevelop from kdev (200/200)
        Updating kdevelop (to branch master)
        Source update complete for kdevelop: 29 files affected.
        Compiling... succeeded (after 1 minute, and 34 seconds)
        Installing.. succeeded (after 2 seconds)

&lt;&lt;&lt;  PACKAGES SUCCESSFULLY BUILT  &gt;&gt;&gt;
Built 200 modules

Your logs are saved in /home/kde-src/kdesrc/log/2018-01-20-07
</screen>
</example>
</sect2>

<sect2 id="fixing-build-failures">
<title
>Усування проблем під час збирання</title>

<para
>Залежно від кількості модулів, які ви вибрали для отримання, може так статися, що &kdesrc-build; не зможе з першого разу зібрати програмне забезпечення &kde;. Але вам не слід впадати у відчай! </para>

<para
>&kdesrc-build; записує до журналу дані, виведені всіма виконаними скриптом командами. Типово, файли журналу зберігаються у теці <filename class="directory"
>~/kdesrc/log</filename
>. Щоб дізнатися про причину помилки для модуля у останній команді &kdesrc-build;, зазвичай, досить зазирнути до файла <filename class="directory"
>~/kdesrc/log/latest/<replaceable
>назва модуля</replaceable
>/error.log</filename
>.</para>

<tip
><para
>Ймовірно, найшвидшим способом виявлення повідомлення про помилку, що призвела до неможливості збирання модуля, є пошук від кінця файла без врахування регістру слова <literal
>error</literal
>. Після виявлення такого рядка пошукайте інші повідомлення щодо помилок поряд з ним. На джерело проблем має вказати перше повідомлення про помилку у виявленій групі.</para
></tip>

<para
>У цьому файлі ви знайдете повідомлення про помилку, яка призвела до невдалої спроби збирання модуля. Якщо у нижній частині цього файла ви бачите повідомлення про те, що не вдалося знайти певні пакунки, спробуйте встановити пакунки (зокрема відповідні пакунки -dev) перед повторним запуском &kdesrc-build;, і передайте &kdesrc-build; параметр <link linkend="cmdline-reconfigure"
>--reconfigure</link
> після встановлення пакунків, яких не вистачає.</para>

<para
>Або, якщо помилка є помилкою збирання (повідомлення про синтаксичні помилки, помилки щодо некоректного прототипу (<quote
>incorrect prototype</quote
>), повідомлення про невідомий тип (<quote
>unknown type</quote
>) тощо), ймовірно, що помилку пов’язано з вадою вихідних кодів &kde;, яку, як ми сподіваємося, буде усунуто протягом декількох днів. Якщо цю помилку не буде усунуто протягом цього часу, не вагайтеся і напишіть листа до списку листування <email
>kde-devel@kde.org</email
> (можливо, вам доведеться оформити підписку на цей список листування), щоб повідомити розробникам про невдалу спробу збирання.</para>

<para
>Ви можете знайти приклади помилок і знайти способи їх усування, а також загальні підказки та стратегії збирання програмного забезпечення &kde; на сторінці <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source"
>покрокових настанов зі збирання &kde; 4</ulink
>. </para>

<para
>З іншого боку, якщо все гаразд, у вашій системі встановлено нове &kde;. Тепер його слід запустити. Опис потрібних для цього дій наведено далі, у розділі <xref linkend="environment"/>.</para>

<note
><para
>Для отримання докладніших відомостей щодо можливостей журналювання &kdesrc-build;, будь ласка, зверніться до розділу <xref linkend="kdesrc-build-logging"/>.</para
></note>
</sect2>

</sect1>

<sect1 id="building-specific-modules">
<title
>Збирання окремих модулів</title>

<para
>Окрім повного збирання набору модулів, у вас може виникнути потреба у збиранні окремого модуля або невеликого набору модулів. Замість редагування вашого файла налаштувань, ви можете просто передати скрипту назви модулів або наборів модулів для збирання у рядку команди.</para>

<example id="example-subset-build">
<title
>Приклад даних, виведених kdesrc-build під час збирання окремого модуля</title>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--include-dependencies</option
> <replaceable
>dolphin</replaceable
></userinput>
Updating kde-build-metadata (to branch master)
Updating sysadmin-repo-metadata (to branch master)

Building extra-cmake-modules from frameworks-set (1/79)
        Updating extra-cmake-modules (to branch master)
        No changes to extra-cmake-modules source, proceeding to build.
        Running cmake...
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building phonon from phonon (2/79)
        Updating phonon (to branch master)
        No changes to phonon source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building attica from frameworks-set (3/79)
        Updating attica (to branch master)
        No changes to attica source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

        ...

Building dolphin from base-apps (79/79)
        Updating dolphin (to branch master)
        No changes to dolphin source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

&lt;&lt;&lt;  PACKAGES SUCCESSFULLY BUILT  &gt;&gt;&gt;
Built 79 modules

Your logs are saved in /home/kde-src/kdesrc/log/2018-01-20-07
</screen>
</example>

<para
>У нашому прикладі, хоча вказано лише програму <replaceable
>dolphin</replaceable
>, використання параметра <option
>--include-dependencies</option
> призведе до того, що &kdesrc-build; включить до процесу збирання залежності для <replaceable
>dolphin</replaceable
> (встановленням параметра <link linkend="conf-include-dependencies"
>include-dependencies</link
>). </para>

<note
><para
>Розв'язання залежностей у цьому випадку працює лише тому, що <replaceable
>dolphin</replaceable
> вказано у наборі модулів на основі <literal
>kde-projects</literal
> (у цьому прикладі він має назву <literal
>base-apps</literal
>). Див. <xref linkend="module-sets-kde"/>. </para
></note>

</sect1>

<sect1 id="environment">
<title
>Налаштовування середовища на запуск зібраного стільничного середовища Плазми &kde;</title>

<para
>Припустімо, що ви увійшли до системи від імені призначеного для збирання Плазми &kde; користувача, і що у системі вже встановлено якусь версію &kde;. В такому випадку запуск вашої копії Плазми може бути дещо ускладненим, оскільки зібрана Плазма має отримати пріоритет над старою версією. Вам слід змінити змінні середовища у ваших скриптах входу до середовища, щоб забезпечити запуск щойно зібраної версії середовища. </para>

<sect2 id="session-driver">
<title
>Автоматичне встановлення драйвера входу до системи</title>

<para
>Починаючи з версії 1.16, &kdesrc-build; намагається встановити відповідний драйвер входу до системи, за допомогою якого ви зможете входити до вашого зібраного за допомогою &kdesrc-build; стільничного середовища &kde; з загальної програми для керування сеансами. Вимкнути цей драйвер можна за допомогою параметра <option
><link linkend="conf-install-session-driver"
>install-session-driver</link
></option
> у файлі налаштувань.</para>

<note
><para
>У режимі імітації &kdesrc-build; налаштовування сеансу не відбувається.</para
></note>

<para
>Робота драйвера забезпечується встановлення нетипового типу сеансу «<literal
>xsession</literal
>». Цей тип сеансу типово має працювати з програмою для керування сеансами &kdm; (де йому відповідатиме сеанс «Custom»), інші ж програми для керування сеансами (зокрема <application
>LightDM</application
> і <application
>gdm</application
>) можуть потребувати встановлення додаткових файлів для вмикання підтримки <literal
>xsession</literal
>.</para>

<sect3 id="xsession-distribution-setup">
<title
>Додавання підтримки xsession у дистрибутив</title>

<para
>Для роботи з типовими програмами для керування сеансами деяких дистрибутивів може знадобитися встановлення додаткових пакунків з метою забезпечення підтримки входів у систему  <literal
>xsession</literal
>.</para>

<itemizedlist>
<listitem
><para
>Для забезпечення підтримки нетипових входів <literal
>xsession</literal
> у дистрибутиві <ulink url="https://getfedora.org/"
>Fedora</ulink
> &Linux; слід встановити пакунок <literal
>xorg-x11-xinit-session</literal
>.</para
></listitem>

<listitem
><para
>У <ulink url="https://www.debian.org/"
>Debian</ulink
> та заснованих на Debian дистрибутивах &Linux; типово має бути передбачено підтримку нетипових входів <literal
>xsession</literal
>, але для того, щоб з такими входами можна було працювати, слід вказати параметр <option
><userinput
>allow-user-xsession</userinput
></option
> у <filename
>/etc/X11/Xsession.options</filename
>. Також варто ознайомитися з <ulink url="https://www.debian.org/doc/manuals/debian-reference/ch07.en.html#_customizing_the_x_session_classic_method"
>документацією щодо налаштовування сеансів графічного середовища Debian</ulink
>.</para
></listitem>

<listitem
><para
>Настанови щодо налаштовування інших дистрибутивів можна знайти у розділі <xref linkend="xsession-manual-setup"/>.</para
></listitem>
</itemizedlist>

</sect3>

<sect3 id="xsession-manual-setup">
<title
>Додавання підтримки xsession вручну</title>

<para
>Якщо у розділі <xref linkend="xsession-distribution-setup"/> немає специфічних для вашого дистрибутива настанов, ви можете додати до списку сеансів вашого дистрибутива пункт «Custom xsession login» у такий спосіб:</para>

<procedure id="proc-adding-xsession-type">
<title
>Додавання типу входу до сеансу до .xsession.</title>

<note
><para
>Для виконання цих настанов вам, ймовірно, знадобляться права доступу адміністратора. </para
></note>

<step performance="required">
<para
>Створіть файл <filename
>/usr/share/xsessions/kdesrc-build.desktop</filename
>.</para>
</step>

<step performance="required">
<para
>Додайте до створеного файла такий текстовий фрагмент:</para>
<literallayout
><userinput>
Type=XSession
Exec=<co id="session-homedir"/><replaceable
>$HOME</replaceable
>/.xsession
Name=KDE Plasma Desktop (unstable; kdesrc-build)
</userinput
></literallayout>

<calloutlist>
<callout arearefs="session-homedir"
><para
>Запис <replaceable
>$HOME</replaceable
> слід замінити на повний шлях до вашого домашнього каталогу (наприклад <filename class="directory"
>/home/<replaceable
>користувач</replaceable
></filename
>). У специфікації запису стільниці не передбачено використання універсальних для всіх користувачів файлів. </para
></callout>

</calloutlist>
</step>

<step performance="optional"
><para
>Після перезапуску програми для керування сеансами у її меню має бути показано новий тип сеансу — «KDE Plasma Desktop (unstable; kdesrc-build)». У разі вибору цього пункту буде виконано спробу запустити файл <filename
>.xsession</filename
>, встановленого &kdesrc-build;.</para>

<note
><para
>Якщо програма для керування сеансами не стежить за оновленням у каталозі <filename class="directory"
>/usr/share/xsessions</filename
>, найпростішим способом її перезапуску є перезапуск комп’ютера.</para
></note>

</step>

</procedure>

</sect3>

</sect2>

<sect2 id="old-profile-instructions">
<title
>Налаштовування середовища вручну</title>
<para
>У цьому документів наведено настанови щодо тих змінних середовища, які слід встановити для завантаження щойно зібраного стільничного середовища. Ці настанови можна знайти у додатку (<xref linkend="old-profile-setup"/>).</para>

<para
>Якщо ви маєте намір власноруч налаштувати підтримку входу до системи, ви можете звернутися до відповідного додатка або переглянути файл <filename
>sample-kde-env-master.sh</filename
>, який є частиною початкових кодів &kdesrc-build;.</para>

</sect2>

</sect1>

<sect1 id="kde-modules-and-selection">
<title
>Впорядкування та вибір модулів</title>

<sect2 id="kde-layers">
<title
>Структура модулів програмного забезпечення KDE</title>

<para
>Програмне забезпечення &kde; поділено на декілька компонентів, значну кількість яких можна зібрати за допомогою &kdesrc-build;. Знання зі структури компонентів допоможуть вам визначитися з модулями програмного забезпечення, які слід зібрати. </para>

<orderedlist>
<listitem
><para
>На найнижчому рівні структури перебуває бібліотека &Qt;, яка дуже потужним набором інструментів, здатних працювати на багатьох програмних платформах. &kde; засновано та &Qt;, крім того, деякі з бібліотек, які не є частиною &kde;, але потрібні для роботи &kde;, також засновано на &Qt;. &kdesrc-build; може зібрати &Qt; або скористатися вже зібраною бібліотекою, яку встановлено у системі, якщо ця бібліотека є достатньо новою.</para
></listitem>

<listitem
><para
>Над &Qt; надбудовано бібліотеки, які потрібні для роботи програмного забезпечення &kde;. Частина з цих бібліотек не є частиною самого &kde; через свою загальну спрямованість, але вони є потрібними для роботи платформи &kde;. Ці бібліотеки зібрано у єдиний модуль <literal
>kdesupport</literal
>, вони не вважаються частиною бібліотек <quote
>Frameworks</quote
>.</para>
</listitem>

<listitem
><para
>Над цими основними бібліотеками надбудовано <ulink url="https://community.kde.org/Frameworks"
>&kde; Frameworks</ulink
>, які іноді позначають абревіатурою KF5. Це основні бібліотеки стільниці Плазми &kde;, програм &kde; та іншого стороннього програмного забезпечення. </para
> </listitem>

<listitem
><para
>На основі Frameworks побудовано декілька інших частин:</para>
    <itemizedlist>
        <listitem
><para
>«Сторонні» програми. Ці програми використовують &kde; Frameworks або створені для запуску у середовищі Плазми &kde;, але вони не є частиною або взагалі не пов’язані з проєктом &kde;.</para
></listitem>

        <listitem
><para
>Плазма, яка є «робочим простором» стільничного середовища. Це те, що користувачі зазвичай бачать після «входу до &kde;».</para
></listitem>

        <listitem
><para
>Комплект програм &kde;. Це збірка корисного програмного забезпечення разом із платформою для розробки та стільницею Плазми, згрупована за окремими модулями, включно з допоміжними програмами, зокрема &dolphin;, іграми, зокрема <application
>KSudoku</application
>, та офісним програмним забезпеченням &kde; зокрема &kontact;.</para
></listitem>

        <listitem
><para
>Нарешті, існує збірка програмного забезпечення (також розподілена на модулі), підтримку розробки якого здійснює команда &kde; (зокрема забезпечує переклад, обслуговування сховища коду, надання системи стеження за вадами тощо). Випуски цього програмного забезпечення не збігаються у часі з випусками &kde;, воно не є частиною Плазми або основного комплекту програм. Ці модулі називають <quote
>Extragear</quote
>. </para
></listitem>
    </itemizedlist>
</listitem>
</orderedlist>
</sect2>

<sect2 id="selecting-modules">
<title
>Вибір модулів для збирання</title>

<para
>Вибором переліку модулів, які ви бажаєте зібрати, можна керувати за допомогою <link linkend="kdesrc-buildrc"
>файла налаштування</link
>. Після розділу <literal
>global</literal
> у цьому файлі можна вказати список модулів, які слід зібрати, між рядком module та рядком end module. Приклад запису модуля наведено у розділі <xref linkend="conf-module-example"/>.</para>

<example id="conf-module-example">
<title
>Приклад запису модуля у файлі налаштувань:</title>
<programlisting
>module <replaceable
>kdesrc-build-git</replaceable>
    # Тут слід вказати параметри цього модуля. Приклад:
    <link linkend="conf-repository"
>repository</link
> kde:kdesrc-build
    <link linkend="conf-make-options"
>make-options</link
> -j4 # Запускати компіляцію у 4 потоки
end module
</programlisting>
</example>

<note
><para
>На практиці, така конструкція модуля зазвичай не використовується безпосередньо. Замість цього, більшість модулів визначаються наборами модулів, як це описано нижче.</para
></note>

<para
>Якщо використано лише записи <literal
>module</literal
>, &kdesrc-build; збиратиме модулі у вказаному у списку порядку і не намагатиметься отримати дані будь-яких інших сховищ, які не було вказано явним чином. </para>

</sect2>

<sect2 id="module-sets">
<title
>Набори модулів</title>

<para
>Початковий код &kde; розділено між багатьма відносно малими сховищами на основі Git. Щоб цією великою кількістю сховищ, які є частиною будь-якого хоч трохи корисного комплекту програмного забезпечення &kde;, було простіше керувати, у &kdesrc-build; передбачено підтримку групування декількох модулів і обробки групи як «набору модулів». </para>

<sect3 id="module-set-concept">
<title
>Концепція наборів базових модулів</title>

<para
>За допомогою набору модулів ви можете оголосити декілька модулів Git, дані яких слід отримати і зібрати, подібно до окремих оголошень модулів. Для визначення кожної з адрес отримання даних модуля використовується параметр <link linkend="conf-repository"
>repository</link
>, визначену за його допомогою адресу буде скопійовано до адрес всіх модулів з набору.</para>

<example id="example-using-module-sets">
<title
>Використання наборів модулів</title>
<programlisting
>global
    <option
><link linkend="conf-git-repository-base"
>git-repository-base</link
></option
> <replaceable
>kde-git</replaceable
> <replaceable
>kde:</replaceable>
end global

module <replaceable
>qt</replaceable>
    #  Параметри вилучено для спрощення
end module

module-set <replaceable
>kde-support-libs</replaceable>
    <option
><link linkend="conf-repository"
>repository</link
></option
> <replaceable
>kde-git</replaceable>
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>automoc</replaceable
> <replaceable
>attica</replaceable
> <replaceable
>akonadi</replaceable>
end module-set

# Інші модулі, якщо потрібно...
module <replaceable
>kdesupport</replaceable>
end module
</programlisting>
</example>

<para
>У розділі <xref linkend="example-using-module-sets"/> наведено короткий набір модулів. &kdesrc-build; обробляє цей набір модулів подібно до того, як виконується обробка кожного з модулів у <option
>use-modules</option
>, якщо кожен з модулів було оголошено окремо. Значення параметра <option
>repository</option
> буде визначено на основі значення параметра набору модулів <option
>repository</option
>, до якого буде додано вказану назву модуля.</para>

<para
>Крім того, набору модулів можна передавати і інші параметри, які буде скопійовано до кожного з нових модулів, створених за його допомогою. За допомогою набору модулів можна скоротити роботу з оголошення багатьох модулів Git, які зберігаються за однією адресою. Також можна надавати наборам модулів назви (як це показано у прикладі). Назви можна використовувати для посилання на цілу групу модулів у командному рядку.</para>

</sect3>
<sect3 id="module-sets-kde">
<title
>Особлива підтримка для наборів модулів KDE</title>

<para
>Описана вище підтримка наборів модулів є загальною для будь-яких модулів на основі Git. Для сховищ git &kde; у &kdesrc-build; передбачено додаткові можливості, якщо спрощують життя користувачів і розробників. Підтримка цих можливостей вмикається визначенням <literal
>kde-projects</literal
> як <option
>repository</option
> для набору модулів. </para>

<para
>Зазвичай, &kdesrc-build; збирає лише модулі, які ви вказали у вашому файлі налаштувань, за порядком, у якому їх було вказано. Якщо ж визначено набір модулів <literal
>kde-projects</literal
>, &kdesrc-build; може виконувати розв'язування залежностей специфічних для &kde; модулів і додатково автоматично включати модулі до збирання, навіть якщо їх не було безпосередньо вказано.</para>

<example id="example-using-kde-module-sets">
<title
>Використання наборів модулів kde-projects</title>
<programlisting
># Додає лише модуль для juk (сховище kde/kdemultimedia/juk)
module-set <replaceable
>juk-set</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>juk</replaceable>
end module-set

# Додає усі модулі у kde/multimedia/*, зокрема juk,
# але без інших залежностей
module-set <replaceable
>multimedia-set</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>kde/multimedia</replaceable>
end module-set

# Додає усі модулі у kde/multimedia/* та усі залежності kde-projects
# поза kde/kdemultimedia
module-set <replaceable
>multimedia-deps-set</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>kde/multimedia</replaceable>
    <option
>include-dependencies</option
> <replaceable
>true</replaceable>
end module-set

# Усі модулі, створені поза цими трьома наборами модулів буде
# автоматично упорядковано, незалежно від встановлення include-dependencies
</programlisting>
</example>

<tip
><para
>Ця конструкція набору модулів <literal
>kde-projects</literal
> є основним способом оголошення про те, які модулі ви хочете зібрати.</para
></tip>

<para
>В усіх наборах модулів використовуються параметри <link linkend="conf-repository"
>repository</link
> та <link linkend="conf-use-modules"
>use-modules</link
>. Набори модулів <link linkend="kde-projects-module-sets"
><literal
>kde-projects</literal
></link
> мають попередньо визначенен значення <option
>repository</option
>, але інші типи наборів модулів також використовують параметр <link linkend="conf-git-repository-base"
>git-repository-base</link
>. </para>
</sect3>

</sect2>

<sect2 id="kde-projects-module-sets">
<title
>Офіційна база даних модулів &kde;</title>

<para
>Сховища git &kde; забезпечують групування пов'язаних модулів git у збірки пов'язаних модулів (наприклад kdegraphics). Git не розпізнає цього групування, але &kdesrc-build; може визначати такі групи, використовуючи <link linkend="module-sets"
>набори модулів</link
>, у яких значенням <option
>repository</option
> є <quote
><literal
>kde-projects</literal
></quote
>.</para>

<para
>&kdesrc-build; визначить, що сховище <literal
>kde-projects</literal
> потребує особливої обробки і скоригує процес збирання відповідним чином. Окрім виконання інших дій, &kdesrc-build; буде:</para>

<itemizedlist>

<listitem
><para
>Отримувати найсвіжішу базу даних модулів з <ulink url=" https://commits.kde.org/"
>архіву git &kde;</ulink
>.</para
></listitem>

<listitem
><para
>Намагатиметься знайти модуль з вказаною назвою у списку параметра набору модулів <option
>use-modules</option
> з цієї бази даних.</para
></listitem>

<listitem
><para
>Для кожного виявленого модуля &kdesrc-build; шукатиму відповідне сховище у базі даних із врахуванням параметра <link linkend="conf-branch-group"
>branch-group</link
>. Якщо сховище існує і є активним для групи гілок, &kdesrc-build; автоматично скористається ним для отримання і оновлення початкового коду. </para
></listitem>

</itemizedlist>

<note
><para
>У поточній базі даних деякі з записів груп модулів містять не лише збірки модулів, але і дані щодо власного сховища. У таких випадках поточна версія &kdesrc-build; намагатиметься скористатися сховищем &git; групи, а не дочірніми сховищами записів групи. </para
></note>

<para
>Наведений нижче приклад демонструє використання бази даних модулів &kde; для встановлення мультимедійної бібліотеки Phonon.</para>

<informalexample>
<programlisting
>module-set <replaceable
>media-support</replaceable>
    # Значенням цього параметра має бути kde-projects, щоб використати базу даних модулів.
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # За допомогою цього параметра можна визначити модулі, які слід шукати у базі даних.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>phonon/phonon</replaceable
> <replaceable
>phonon-gstreamer</replaceable
> <replaceable
>phonon-vlc</replaceable>
end module-set
</programlisting>
</informalexample>

<tip
><para
><literal
>phonon/phonon</literal
> використовується, оскільки інакше, у разі використання поточної бази даних проєкту, &kdesrc-build; доведеться визначатися між групою проєктів з назвою «phonon» і окремим проєктом з назвою «phonon». У поточній версії &kdesrc-build; вибере перший, що призведе до збирання багатьох модулів, які можуть виявитися непотрібними.</para
></tip>

<para
>Наступний приклад є, можливо, реалістичнішим. Він демонструє можливість, доступну лише у разі використання бази даних модулів &kde;: збирання всіх програм &kde; з графічним інтерфейсом за допомогою єдиної команд.</para>

<informalexample>
<programlisting
>module-set <replaceable
>kdegraphics</replaceable>
    # Значенням цього параметра має бути kde-projects, щоб можна було скористатися базою даних модулів.
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # За допомогою цього параметра можна вказати модулі, які слід шукати у базі даних.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>extragear</replaceable>
end module-set
</programlisting>
</informalexample>

<para
>Тут продемонстровано дві важливі можливості:</para>

<orderedlist>

<listitem
><para
>&kdesrc-build; надає вам змогу вказати дочірні модулі вказаного модуля, без збирання батьківського модуля за допомогою синтаксичної конструкції <userinput
><replaceable
>назва-модуля</replaceable
>/*</userinput
>. У цьому випадку таке визначення є необхідним, оскільки основний модуль, kdegraphics, позначено як неактивний, щоб його не було випадково зібрано разом з дочірніми модулями. Визначення дочірніх модулів надає змогу &kdesrc-build; пропустити вимкнений модуль. </para
></listitem>

<listitem
><para
>&kdesrc-build; також не додаватиме вказаний модуль до списку збирання декілька разів. Це надасть змогу нам вручну встановити збирання <literal
>kdegraphics/libs</literal
> першим, до решти <literal
>kdegraphics</literal
>, без спроби збирання <literal
>kdegraphics/libs</literal
> двічі. Так зроблено для належної обробки залежностей. Зараз цей спосіб визначення порядку збирання лишається резервним для випадків, коли у базі даних проєктів &kde; пропущено відповідні метадані щодо залежностей. </para
></listitem>
</orderedlist>
</sect2>

<sect2 id="ignoring-project-modules">
<title
>Відфільтровування модулів проєкту &kde;</title>

<para
>Можливо, у вас виникне потреба у збиранні всіх програм у певному модулі &kde;, <emphasis
>окрім</emphasis
> якоїсь програми.</para>

<para
>Наприклад, у групі <literal
>kdeutils</literal
> міститься програма з назвою <application
>kremotecontrol</application
>. Якщо на вашому комп’ютері не встановлено обладнання для роботи з пристроями дистанційного керування, ви можете вирішити, що отримувати, збирати і встановлювати <application
>kremotecontrol</application
> під час кожного оновлення <literal
>kdeutils</literal
> не варто.</para>

<para
>Досягти цього можна за допомогою параметра налаштувань <link linkend="conf-ignore-modules"
>ignore-modules</link
>. У командному рядку те саме завдання виконує <link linkend="ignoring-modules"
>параметр &cmd-ignore-modules;</link
>, який, втім, є зручнішим для одноразового фільтрування певного модуля. </para>

<example id="example-ignoring-a-module">
<title
>Приклад ігнорування модуля kde-project у групі</title>
<programlisting
>module-set <replaceable
>utils</replaceable>
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # За допомогою цього параметра можна визначити модулі, які слід шукати у базі даних.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>kdeutils</replaceable>

    # За допомогою цього параметра можна «вилучити» модулі зі списку використаних модулів, визначеного вище.
    <option
><link linkend="conf-ignore-modules"
>ignore-modules</link
></option
> <replaceable
>kremotecontrol</replaceable>

module-set <replaceable
>graphics</replaceable>
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # За допомогою цього параметра визначаються модулі, які слід шукати у базі даних.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>extragear/graphics</replaceable>

    # За допомогою цього параметра «вилучаються» модулі, вибрані вище за допомогою use-modules.
    # У нашому прикладі ігноруються одразу extragear/graphics/kipi-plugins і
    # extragear/graphics/kipi-plugins/kipi-plugins-docs
    <option
><link linkend="conf-ignore-modules"
>ignore-modules</link
></option
> <replaceable
>extragear/graphics/kipi-plugins</replaceable>
end module-set
</programlisting>
</example>

</sect2>

</sect1>

<sect1 id="quick-start-conclusion">
<title
>Початкові висновки</title>
<para
>Це основні відомості та поняття, потрібні для того, щоб розпочати роботу з &kdesrc-build;</para>

<para
>Додаткові відомості можна знайти у цьому підручнику. Зокрема, корисними будуть <link linkend="supported-cmdline-params"
>список параметрів командного рядка</link
> та <link linkend="conf-options-table"
>таблиця параметрів файла налаштувань</link
>.</para>

<para
>Також спільнота &kde; постійно оновлює <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source"
>інтернет-довідник щодо збирання з початкового коду</ulink
>, у якому використовується &kdesrc-build; і наводяться підказки та інші настанови щодо використання цього скрипту.</para>

</sect1>

</chapter>

<chapter id="features">
<title
>Можливості скрипту</title>

<sect1 id="features-overview">
<title
>Огляд можливостей</title>

<para
>Серед можливостей &kdesrc-build;: </para>

<itemizedlist>

<listitem
><para
>Ви можете вказати програмі, що слід виконати фальшиву послідовність операцій. Якщо ви передасте параметр <option
>--pretend</option
> або <option
>-p</option
> до рядка команди, скрипт надасть вам докладний опис команд, які потрібно виконати скрипту, без справжнього виконання команд. Втім, якщо ви ще ніколи не запускали &kdesrc-build;, вам варто спочатку віддати команду <command
>kdesrc-build <option
><link linkend="cmdline-metadata-only"
>--metadata-only</link
></option
></command
>, інакше <option
>--pretend</option
> не працюватиме як слід. <tip
><para
>Якщо вам потрібні ще докладніші пояснення щодо дій &kdesrc-build;, спробуйте скористатися параметром <option
>--debug</option
>. </para
></tip>

</para
></listitem>

<listitem
><para
>&kdesrc-build; може (за допомогою сервера FTP &kde;) забезпечити пришвидшення отримання певних модулів Subversion. Якщо модуль, який ви отримуєте, вже було запаковано на вебсайті, &kdesrc-build; жить знімок і підготує його до використання на вашому комп’ютері. </para>

<tip
><para
>Загалом, для початкового отримання модуля Git не потрібно виконувати ніяких попередніх дій, оскільки за будь-яких умов доведеться отримувати весь вміст сховища Git. Тому серверу доволі просто визначити, що саме ви бажаєте отримати.</para
></tip>

<para
>Це пришвидшить роботу і полегшить вам отримання з анонімних серверів &subversion; kde.org.</para>
</listitem>

<listitem
><para
>Додаткове пришвидшення можна отримати, якщо почати процес збирання модуля одразу після того, як вихідні коди цього модуля буде отримано. (Ця можливість доступна починаючи з версії 1.6) </para
></listitem>

<listitem
><para
>Чудова підтримка збирання бібліотеки &Qt; (якщо програмне забезпечення &kde;, яке ви намагаєтеся зібрати, залежить від найсвіжішої версії &Qt;, доступу до пакунків якої у вашому дистрибутиві ще не передбачено). </para
></listitem>

<listitem
><para
>&kdesrc-build; не потребує наявності графічного інтерфейсу для роботи. Отже, ви можете збирати програмне забезпечення &kde; без потреби у переходу до графічного середовища. </para
></listitem>

<listitem
><para
>Підтримка встановлення типових параметрів для всіх модулів (зокрема параметрів компіляції і налаштування). Крім того, такі параметри, зазвичай, можна змінити для окремих модулів.</para>

<para
>Крім того, &kdesrc-build; <link linkend="kdesrc-build-std-flags"
>додасть стандартні прапорці</link
>, потрібні для зберігання повідомлень про труднощі і помилки: вам не доведеться копіювати їх для пошуку у мережі власноруч. Варто зауважити, що це не стосується (нетипових) наборів інструментів, якщо вказано, наприклад, за допомогою <link linkend="conf-cmake-toolchain"
>cmake-toolchain</link
> </para
></listitem>

<listitem
><para
>&kdesrc-build; може отримувати певні <link linkend="using-branches"
>гілки або версії</link
> модуля. Ви можете вказати для отримання навіть окрему <link linkend="conf-revision"
>версію</link
> певного модуля. </para
></listitem>

<listitem
><para
>&kdesrc-build; може автоматично перемикати каталог вихідних кодів для отримання з іншого сховища, гілки або випуску. Цю дію буде виконано автоматично, якщо ви зміните параметр, який вказує якою має бути адреса &url; сховища, але вам доведеться скористатися параметром <link linkend="cmdline-src-only"
>--src-only</link
>, щоб надати змогу &kdesrc-build; дізнатися про те, що скрипту можна виконувати таке перемикання. </para
></listitem>

<listitem
><para
>&kdesrc-build; може <link linkend="partial-builds"
>отримувати лише частини модуля</link
> у тих випадках, коли вам потрібна лише одна програма з великого модуля. </para
></listitem>

<listitem
><para
>Для розробників: &kdesrc-build; <link linkend="ssh-agent-reminder"
>нагадає вам</link
> про те, що ви використовуєте svn+ssh://, але <application
>ssh-agent</application
> не запущено, оскільки таке використання призведе до повторних запитів на пароль від &ssh;. </para
></listitem>

<listitem
><para
>Можливість <link linkend="deleting-build-dir"
>вилучення каталогу збирання</link
> модуля після його встановлення для економії місця за рахунок збільшення наступного часу збирання. </para
></listitem>

<listitem
><para
>Адреси каталогів, які використовуються &kdesrc-build; можна налаштувати (навіть для окремих модулів). </para
></listitem>

<listitem
><para
>Можливість використання &sudo;, або іншої вказаної користувачем команди для <link linkend="root-installation"
>встановлення модулів</link
>, призначеної для того, щоб &kdesrc-build; не потрібно було запускати від імені привілейованого користувача. </para
></listitem>

<listitem
><para
>&kdesrc-build; типово запускається зі <link linkend="build-priority"
>зниженими правами доступу</link
>, це надає вам змогу використовувати &kdesrc-build; під час роботи з іншими програмами. </para
></listitem>

<listitem
><para
>Підтримка використання <link linkend="using-branches"
>випусків і гілок</link
> &kde;. </para
></listitem>

<listitem
><para
>Передбачено підтримку <link linkend="resuming"
>поновлення збирання</link
> з вказаного модуля. Ви навіть можете <link linkend="ignoring-modules"
>ігнорувати певні модулі</link
> тимчасово для вказаного сеансу збирання. </para
></listitem>

<listitem
><para
>&kdesrc-build; покаже <link linkend="build-progress"
>поступ збирання</link
> за використання &cmake;, і завжди стежитиме за часом процесу збирання, отже ви знатимете про тривалість збирання. </para
></listitem>

<listitem
><para
>Постачається з вбудованим набором типових параметрів, щоб відповідають збиранню базового середовища &kde; для одного користувача з анонімного сховища коду. </para
></listitem>

<listitem
><para
>Використання тильди у параметрах налаштування. Наприклад, ви можете вказати: <programlisting
>qtdir ~/kdesrc/build/qt</programlisting>
</para
></listitem>

<listitem
><para
>Автоматичне встановлення системи збирання з каталогом вихідних кодів, який відрізняється від каталогу збирання, що забезпечить чистоту каталогу вихідних кодів. </para
></listitem>

<listitem
><para
>Ви можете вказати загальні параметри, які буде застосовано до всіх отриманих модулів, крім того, ви можете визначити параметри для окремих модулів. </para
></listitem>

<listitem
><para
>Примусове повне повторне збирання: для цього слід запустити &kdesrc-build; з параметром <option
>--refresh-build</option
>. </para
></listitem>

<listitem
><para
>Ви можете вказати значення різноманітних змінних середовища, які буде використано під час збирання, зокрема <envar
>KDEDIR</envar
>, <envar
>QTDIR</envar
>, <envar
>DO_NOT_COMPILE</envar
> і <envar
>CXXFLAGS</envar
>. </para
></listitem>

<listitem
><para
>Запис команд до журналу. Журнали датуватимуться і нумеруватимуться так, що у вас завжди буде журнал запуску скрипту. Крім того, буде створено символічне посилання з назвою latest, яке завжди вказуватиме на найсвіжіший запис журналу у каталозі журналу. </para
></listitem>

<listitem
><para
>Ви можете отримати лише частину модуля &subversion; &kde;. Наприклад, ви можете отримати лише <application
>taglib</application
> з <application
>kdesupport</application
>. </para
></listitem>

</itemizedlist>

</sect1>

<sect1 id="kdesrc-build-logging">
<title
>Запис журналів збирання &kdesrc-build;</title>

<sect2 id="logging-overview">
<title
>Огляд ведення журналу</title>

<para
>Ведення журналу — це можливість &kdesrc-build;, за використання якої дані, виведені будь-якої командою, яку запускає &kdesrc-build;, буде збережено до файла для наступного вивчення, якщо це буде потрібно. Так зроблено, тому що ці дані часто потрібні для визначення причин помилки під час збирання, оскільки існує багато причин, через які збирання може бути невдалим.</para>

<sect3 id="log-directory-layout">
<title
>Компонування каталогів журналу</title>

<para
>Журнали завжди зберігаються у каталозі журналів. Адреса каталогу журналів визначається параметром <link linkend="conf-log-dir"
>log-dir</link
>, типовим значенням якого є <filename class="directory"
><symbol
>${source-dir}</symbol
>/log</filename
> (де <symbol
>${source-dir}</symbol
> є значенням параметра <link linkend="conf-source-dir"
>source-dir</link
>. Надалі у цьому розділі ми посилатимемося на значення відповідного параметра як <symbol
>${log-dir}</symbol
>).</para>

<para
>У каталозі <symbol
>${log-dir}</symbol
> буде створено набір каталогів, по одному на кожен запуск &kdesrc-build;. Кожен з каталогів матиме назву, що відбиватиме дату запуску скрипту і номер запуску. Наприклад, для другого запуску &kdesrc-build; 26 травня 2009 року буде створено каталог з назвою <filename
>2009-05-26-02</filename
>, де 2009-05-26 позначатиме дату а -02 порядковий номер запуску.</para>

<para
>Крім того, для зручності, &kdesrc-build; створить посилання на журнали останнього запуску з назвою <filename class="directory"
>latest</filename
>. Отже, журнали для найостаннішого запуску &kdesrc-build; мають завжди зберігатися у теці <filename class="directory"
><symbol
>${log-dir}</symbol
>/latest</filename
>. </para>

<para
>Крім того, кожен з каталогів запусків &kdesrc-build; сам містить набір каталогів, по одному на кожен модуль &kde;, який &kdesrc-build; намагається зібрати. У цьому каталозі також міститиметься файл <filename
>build-status</filename
>, за допомогою якого ви зможете визначити, які модулі було зібрано, а які зібрати не вдалося.</para>

<note
><para
>Якщо у самому модулі міститься підмодуль (наприклад extragear/multimedia, playground/utils, або KDE/kdelibs), йому відповідатиме власний підкаталог у каталозі журналу. Наприклад, журнали KDE/kdelibs після останнього запуску &kdesrc-build; можна буде знайти у <filename class="directory"
><symbol
>${log-dir}</symbol
>/latest/KDE/kdelibs</filename
>, а не у каталозі <filename class="directory"
><symbol
>${log-dir}</symbol
>/latest/kdelibs</filename
>. </para
></note>

<para
>У кожному з каталогів модулів ви знайдете набір файлів для кожної з дій, які виконуватиме &kdesrc-build;. Якщо &kdesrc-build; оновлює модуль, ви побачите файли з назвами на зразок <filename
>svn-co.log</filename
> (отримання модуля) або <filename
>svn-up.log</filename
> (якщо відбувалося оновлення модуля, який вже було отримано). Якщо було запущено скрипт <command
>configure</command
>, слід очікувати появи журналу <filename
>configure.log</filename
> у цьому каталозі.</para>

<para
>Якщо сталася помилка, ви побачите пояснення її причину у одному з файлів. Щоб вам легше було знайти файл, у якому міститься помилка, &kdesrc-build; створить посилання з файла, що містить помилку (на зразок <filename
>build-1.log</filename
> на файл з назвою <filename
>error.log</filename
>).</para>

<para
>Результатом всього цього буде те, що ви знатимете чому не вдалося зібрати модуль після останнього запуску &kdesrc-build;, для цього вам слід для початку знайти файл з назвою <filename
><symbol
>${log-dir}</symbol
>/latest/<replaceable
>назва модуля</replaceable
>/error.log</filename
>. </para>

<tip
><para
>Якщо файл <filename
>error.log</filename
> є порожнім (особливо після встановлення), ймовірно, жодних помилок не сталося. Деякі з інструментів, які використовуються системою збирання &kde;, іноді помилково повідомляють про помилку, коли насправді помилок не сталося.</para>

<para
>Крім того, деякі з команд уникатимуть переспрямування виведення даних &kdesrc-build; і за певних обставин обходять файл журналу (зазвичай, під час виконання першого отримання &subversion;), в такому випадку помилки не можна буде знайти файл журналу, — всі помилки буде виведено до &konsole; або програми термінала, з якої ви запустили &kdesrc-build;.</para>
</tip>

</sect3>
</sect2>
</sect1>

</chapter>

<chapter id="kdesrc-buildrc">
<title
>Налаштування &kdesrc-build;</title>

<sect1 id="kdesrc-buildrc-overview">
<title
>Огляд налаштування &kdesrc-build;</title>

<para
>Щоб скористатися цим скриптом, вам потрібен файл з назвою <filename
>.kdesrc-buildrc</filename
>, розташований у вашому домашньому каталозі, у цьому файлі описано модулі, які ви бажаєте отримати і зібрати, та усі параметри використання цих модулів. </para>

<sect2 id="kdesrc-buildrc-layout">
<title
>Компонування файла налаштувань</title>

<sect3 id="kdesrc-buildrc-layout-global">
<title
>Загальні налаштування</title>

<para
>Файл налаштувань буде запущено з загальними параметрами, вказаними у такий спосіб: </para>

<programlisting
>global
<replaceable
>назва_параметра значення_параметра</replaceable>
<replaceable
>[...]</replaceable>
end global
</programlisting>

</sect3>
<sect3 id="kdesrc-buildrc-layout-modules">
<title
>Налаштування модулів</title>

<para
>Після цього повинні йти один або декілька розділів модулів, вказаних у одному з двох форматів: </para>

<itemizedlist>
<listitem>
<programlisting
>module <replaceable
>назва_модуля</replaceable>
<replaceable
>назва_параметра значення_параметра</replaceable>
<replaceable
>[...]</replaceable>
end module
</programlisting>
</listitem>

<listitem>
<programlisting
>module-set <replaceable
>назва-набору-модулів</replaceable>
  repository <userinput
>kde-projects</userinput
> або <userinput
><replaceable
>git://host.org/path/to/repo.git</replaceable
></userinput>
  use-modules <replaceable
>назви-модулів</replaceable>

# Можна встановити також інші параметри
<replaceable
>назва-параметра значення-параметра</replaceable>
<replaceable
>[...]</replaceable>
end module-set
</programlisting>
</listitem>
</itemizedlist>

<important
><para
>Зауважте, що другий формат, набори модулів, <emphasis
>працює лише для модулів, код яких зберігається у Git</emphasis
>.</para
></important>

<para
>Для модулів Subversion параметр <replaceable
>назва_модуля</replaceable
> має бути назвою модуля зі сховища &subversion; &kde; (наприклад kdeartwork або kde-wallpapers). Крім того, можна змінити значення вручну <link linkend="conf-override-url"
>визначенням адреси &subversion;</link
>. </para>

<para
>Для модулів Git назвою може бути будь-який рядок, якщо цей рядок не дублює інших назв модулів у налаштуваннях. Пам’ятайте, що розташування каталогів коду і збирання буде визначено на основі назви модуля, якщо ви не використаєте параметра <link linkend="conf-dest-dir"
>dest-dir</link
>. </para>

<para
>Але для <emphasis
>наборів модулів</emphasis
> Git <replaceable
>назви-модулів</replaceable
> мають відповідати справжнім модулям git modules у вибраному сховищі (параметр <option
>repository</option
>). Щоб дізнатися більше, ознайомтеся з довідкою щодо <link linkend="conf-git-repository-base"
>git-repository-base</link
> і <link linkend="conf-use-modules"
>use-modules</link
>. </para>

</sect3>

<sect3 id="kdesrc-buildrc-option-values">
<title
>Обробка значень параметрів</title>

<para
>Загалом, увесь вміст рядка після запису <replaceable
>назва-параметра</replaceable
> буде використано як <replaceable
>значення-параметра</replaceable
>.</para>

<para
>Однією зі змін, які виконує &kdesrc-build;, є те, що послідовність <userinput
>${<replaceable
>назва-параметра</replaceable
>}</userinput
> замінюється на значення цього параметра із загальних налаштувань. Це надає вам змогу посилатися на значення наявних параметрів, зокрема параметрів, значення яких вже встановлено &kdesrc-build;.</para>

<para
>Із прикладом використання цього параметра можна ознайомитися у розділі <xref linkend="make-options-example"/>.</para>

</sect3>

<sect3 id="kdesrc-buildrc-options-groups">
<title
>Модулі «options»</title>

<para
>Цей останній тип записів файла налаштувань, групи <literal
>options</literal
>, яким можна скористатися для записів <literal
>module</literal
> або <literal
>module-set</literal
>.</para>

<programlisting
>options <replaceable
>назва_модуля</replaceable>
<replaceable
>назва_параметра значення_параметра</replaceable>
<replaceable
>[...]</replaceable>
end options
</programlisting>

<para
>У групі <literal
>options</literal
> можна встановлювати значення параметрів так само, як у оголошенні модуля. Цю групу має бути пов’язано з наявним модулем. Усі параметри, встановлені за допомогою цієї групи, буде використано для <emphasis
>перевизначення</emphasis
> набору параметрів пов’язаного модуля.</para>

<important
><para
>Пов’язана назва модуля <emphasis
>має</emphasis
> збігатися з назвою, даною у оголошенні <literal
>options</literal
>. Тому слід не уважно стежити за тим, щоб у назві не було друкарських помилок.</para
></important>

<para
>Це корисно, якщо треба оголосити повний набір <literal
>module-set</literal
> для модулів з використанням однакових параметрів, а потім скористатися групами <literal
>options</literal
> для внесення окремих змін.</para>

<para
>Групи <literal
>options</literal
> можна також застосовувати до іменованих наборів модулів. Ця можливість надає змогу досвідченим користувачам використовувати загальний файл налаштувань (який включено до оголошення <literal
>module-set</literal
>) як основу і вносити зміни до параметрів, використовуваних наборами модулів, у файлах налаштувань, використовуючи команду <literal
><link linkend="kdesrc-buildrc-including"
>include</link
></literal
> для посилання на основні налаштування.</para>

<example id="ex-options-group">
<title
>Приклад використання options</title>

<para
>У нашому прикладі визначено збирання усіх модулів з групи мультимедійного програмного забезпечення &kde;. Крім того, визначено використання іншої версії для програми &kmix; (наприклад, щоб перевірити, чи виправлено певну ваду). Це працює так:</para>

<programlisting
>module-set <replaceable
>kde-multimedia-set</replaceable>
  repository <userinput
>kde-projects</userinput>
  use-modules <replaceable
>kde/kdemultimedia</replaceable>
  branch <replaceable
>master</replaceable>
end module-set

# kmix є частиною групи kde/kdemultimedia, навіть якщо kmix раніше у файлі
# не згадувався, &kdesrc-build; врахує зміну.
options <replaceable
>kmix</replaceable>
  branch <replaceable
>KDE/4.12</replaceable>
end options
</programlisting>

<para
>Тепер, якщо ви запустите &kdesrc-build;, усі мультимедійні програми &kde; буде зібрано на основі коду з гілки «master» сховища з кодом, &kmix; буде зібрано зі старішої гілки «KDE/4.12». Оскільки використано <literal
>options</literal
>, нам не довелося створювати окремий список усіх <emphasis
>інших</emphasis
> мультимедійних програм &kde;, щоб визначити для них правильне значення параметра гілки коду.</para>

</example>

<note>
<para
>Зауважте, що цю можливість реалізовано лише з версії &kdesrc-build; 1.16, а також у тестовій версії &kdesrc-build; для розробників з 12 січня 2014 року.</para
></note>

</sect3>

</sect2>

<sect2 id="kdesrc-buildrc-including">
<title
>Включенні інших файлів налаштувань</title>

<para
>У межах файла налаштувань ви можете посилатися на інші файли за допомогою ключового слова <literal
>include</literal
> з файлом. Все працюватиме так, наче вміст відповідного файла вставлено у місці включення. </para>

<informalexample
><para
>Наприклад, ви можете вказати щось таке:</para>
<programlisting
>global
    include <replaceable
>~/common-kdesrc-build-options</replaceable>

    # Тут вкажіть специфічні параметри.

end global
</programlisting>
</informalexample>

<note
><para
>Якщо вами не буде вказано шлях до файла, який слід включити, повністю, програма шукатиме цей файл, починаючи з каталогу, щоб містить початковий файл. Пошук буде виконано рекурсивно.</para
></note>

</sect2>

<sect2 id="kdesrc-buildrc-common">
<title
>Типові параметри налаштування</title>

<para
>Далі наведено список параметрів, якими ви можете скористатися. Натисніть позначку параметра, щоб дізнатися про нього більше. Повний список параметрів наведено у розділі <xref linkend="conf-options-table"/>. </para>

<itemizedlist>
<listitem
><para
><link linkend="conf-cmake-options"
>cmake-options</link
>, щоб визначити параметри налаштування модуля за допомогою &cmake;.</para
></listitem>
<listitem
><para
><link linkend="conf-branch"
>branch</link
>, щоб отримати код для стабільної версії, а не версії, що розробляється (/trunk для &subversion; або <literal
>master</literal
> для Git).</para
></listitem>
<listitem
><para
><link linkend="conf-configure-flags"
>configure-flags</link
>, щоб визначити параметри, згідно яких буде налаштовано модуль &Qt;.</para
></listitem>
<listitem
><para
><link linkend="conf-kdedir"
>kdedir</link
>, щоб вказати каталог, куди буде встановлено &kde;.</para
></listitem>
<listitem
><para
><link linkend="conf-make-options"
>make-options</link
>, щоб передати параметри програмі &make; (зокрема кількість процесорів, які слід використовувати).</para
></listitem>
<listitem
><para
><link linkend="conf-qtdir"
>qtdir</link
>, щоб вказати шлях до бібліотек &Qt;.</para
></listitem>
<listitem
><para
><link linkend="conf-source-dir"
>source-dir</link
>, щоб змінити каталог призначення для отримання початкових кодів.</para
></listitem>
</itemizedlist>

</sect2>
</sect1>
<sect1 id="conf-options-table">
<title
>Таблиця параметрів налаштування</title>

<para
>Нижче наведено таблицю параметрів програми, у якій ви знайдете такі дані:</para>

<itemizedlist>

<listitem
><para
>Назву параметра</para
></listitem>

<listitem
><para
>Опис реакції &kdesrc-build; під час збирання модуля на встановлення значення параметра у загальному розділі та розділі модуля <link linkend="configure-data"
>файла налаштувань</link
>.</para
></listitem>

<listitem
><para
>Коментарі щодо призначення та способів використання параметра.</para
></listitem>

</itemizedlist>

<table id="option-table">
<title
>Таблиця параметрів</title>
<tgroup cols="3">

<thead>
<row>
<entry
>Назва параметра</entry>
<entry
>Модуль -&gt; Загальна поведінка</entry>
<entry
>Нотатки</entry>
</row>
</thead>

<tbody>

<row>
<entry
>apidox</entry>
<entry
></entry>
<entry
><para
>Цей параметр використовувався для вмикання збирання документації модуля програмного інтерфейсу KDE. Його було вилучено у версії &kdesrc-build; 1.6.3 через брак підтримки. Ви можете знайти мережеву документацію з програмного інтерфейсу за адресою <ulink url="https://api.kde.org/"
>kde.org</ulink
>. Крім того, можна зібрати документацію з програмного інтерфейсу KDE за допомогою скрипту <command
>kdedoxygen.sh</command
>, включеного до модуля kde-dev-scripts. Докладніше про це можна дізнатися на сайті <ulink url="https://techbase.kde.org/Development/Tools/apidox"
>KDE TechBase</ulink
>.</para>
</entry>
</row>

<row>
<entry
>apply-qt-patches</entry>
<entry
></entry>
<entry
>Цей параметр було вилучено з версії kdesrc-build 1.10. Щоб отримати відповідний йому результат, зверніться до <xref linkend="using-qt"/> та параметра <link linkend="conf-repository"
>repository</link
>.</entry>
</row>

<row id="conf-async">
<entry
>async</entry>
<entry
>Неможливо перевизначити</entry>
<entry
><para
>За допомогою цього параметра можна увімкнути асинхронний режим роботи, за якого оновлення кодів програм і процес збирання виконуватимуться паралельно, — програма не чекатиме на завершення оновлення всіх кодів програм перед запуском процесу збирання. Типовим значенням цього параметра є значення, що вмикає асинхронний режим. Щоб вимкнути асинхронний режим, встановіть значення параметра <userinput
>false</userinput
>.</para>
<para
>Цей параметр додано починаючи з версії 1.6 програми.</para
></entry>
</row>

<row id="conf-binpath">
<entry
>binpath</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Встановіть для цього параметра значення, щоб визначити значення змінної середовища PATH на час збирання. Ви не зможете перевизначити значення цього параметра для окремого модуля. Типовим значенням параметра є $<envar
>PATH</envar
>, змінна, значення якої встановлюється під час запуску. Значенням цієї змінної середовища має бути відокремлений двокрапками список шляхів до ваших каталогів для збирання. Шляхи <filename class="directory"
>$<envar
>KDEDIR</envar
>/bin</filename
> і <filename class="directory"
>$<envar
>QTDIR</envar
>/bin</filename
> буде додано автоматично. Ви можете додати тильду (~) для всіх шляхів, які ви додаєте за допомогою цього параметра.</para>
</entry>
</row>

<row id="conf-branch">
<entry
>branch</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Встановіть значення для цього параметра, щоб програма отримала певну версію &kde;, а не типову гілку <replaceable
>master</replaceable
> (для &git;) або <replaceable
>trunk</replaceable
> (для &subversion;), у якій розробляється &kde;.</para>

<para
>Наприклад, щоб отримати версію &kde; 4.6, вам слід встановити значення цього параметра <replaceable
>4.6</replaceable
>.аметра <replaceable
>3.4</replaceable
>.</para>

<para
>Якщо &kdesrc-build; не вдається належним чином отримати версію з цим параметром, ймовірно, вам доведеться вручну вказати адресу &url;, з якої слід виконати отримання за допомогою параметра <link linkend="conf-module-base-path"
>module-base-path</link
> або <link linkend="conf-override-url"
>override-url</link
>.</para>

<note
><para
>Для більшості модулів &kde;, ймовірно, варто користуватися замість цього параметра параметром <link linkend="conf-branch-group"
>branch-group</link
>, а цей параметр використовувати лише для створення виключень з правил.</para
></note>

</entry>
</row>

<row id="conf-branch-group">
<entry
>branch-group</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry>

<para
>Для цього параметра слід встановити значення загальної групи, з якої слід вибирати модулі.</para>

<para
>Для підтримуваних типів модулів &git; &kdesrc-build; визначити справжню гілку, яку слід автоматично використовувати на основі створених розробниками &kde; правил (ці правила можна переглянути у підкаталозі <literal
>kde-build-metadata</literal
> каталогу початкового коду &kdesrc-build;). Після визначення гілки цю гілку буде використано так, наче ви вказали усі гілки власноруч за допомогою параметра <link linkend="conf-branch"
>branch</link
>. </para>

<para
>Цей параметр корисний, якщо ви просто хочете підтримувати актуальність певної гілки розробки, не бажаючи приділяти надмірну увагу усім змінам у назвах гілок.</para>

<para
>У поточній версії (станом на 11 серпня 2013 року) групами гілок є:</para>

<itemizedlist>

<listitem
><para
><literal
>stable-qt4</literal
> — група для стеження за виправленнями вад у заснованих на &Qt; 4 бібліотеках та програмах &kde;.</para
></listitem>

<listitem
><para
><literal
>latest-qt4</literal
> — група для стеження за розробкою і новими можливостями у заснованих на &Qt; 4 бібліотеках і програмах &kde;.</para
></listitem>

<listitem
><para
><literal
>kf5-qt5</literal
> — група для стеження за найсвіжішими течіями у розробці ще не випущених бібліотек &kde; Frameworks 5, заснованих на &Qt; 5, робочими просторами Плазми 2 тощо.</para
></listitem>

</itemizedlist>

<para
>Зауважте, що якщо ви <emphasis
>виберете</emphasis
> значення <literal
>branch</literal
> власноруч, воно матиме вищий пріоритет за значення цього параметра. Те саме стосується і інших параметрів вибору гілки для окремого пакунка, зокрема параметра <link linkend="conf-tag"
>tag</link
>.</para>

<para
>Цей параметр було додано у &kdesrc-build; 1.16-pre2.</para>

<note
><para
>Цим параметром можна скористатися (у типовому випадку) лише для модулів &git; <literal
>kde-projects</literal
>. Див. також <xref linkend="kde-projects-module-sets"/>. </para
></note>

</entry>
</row>

<row id="conf-build-dir">
<entry
>build-dir</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Скористайтеся цим параметром, щоб змінити каталог, у якому міститимуться вихідні коди для збирання. Існує три різних способи скористатися ним: <orderedlist
> <listitem
><para
>Шлях відносно каталогу вихідних кодів з &subversion; &kde; (див. <link linkend="conf-source-dir"
>параметр source-dir</link
>). Це типовий спосіб. Цей режим буде вибрано, якщо ви введете назву каталогу, яка не починається з тильди (~) або похилої риски (/).</para
> <para
>Типовим значенням є <filename class="directory"
>build</filename
>.</para
></listitem
> <listitem
><para
>Абсолютний шлях. Якщо ви вкажете шлях, назва якого починається з /, цей шлях буде використано безпосередньо. Наприклад, <filename class="directory"
>/tmp/kde-obj-dir/</filename
>.</para
></listitem
> <listitem
><para
>Шлях відносно вашого домашнього каталогу. Якщо ви вкажете шлях, назва якого починатиметься з ~, буде використано шлях відносно вашого домашнього каталогу, подібно до використання тильди у командній оболонці. Наприклад, <filename class="directory"
>~/builddir</filename
> визначить каталог збирання <filename class="directory"
>/home/user-name/builddir</filename
>.</para
></listitem
> </orderedlist
> Як це не дивно, ви можете змінити значення цього параметра для кожного з модулів окремо. </entry>
</row>

<row id="conf-build-when-unchanged">
<entry
>build-when-unchanged</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>За допомогою цього параметра можна керувати тим, чи буде &kdesrc-build; завжди намагатися зібрати модуль, у якому не було оновлення початкових кодів.</para>

<para
>Якщо для <option
>build-when-unchanged</option
> буде встановлено значення <userinput
>true</userinput
>, &kdesrc-build; завжди виконуватиме збирання модуля, навіть якщо ніякого оновлення коду модуля не відбулося. Така поведінка є типовою, оскільки у разі її використання збільшується ймовірність належного збирання.</para>

<para
>Якщо ви встановите для <option
>build-when-unchanged</option
> значення <userinput
>false</userinput
>, &kdesrc-build; виконуватиме спроби збирання модуля, лише якщо у коді модуля відбулися зміни, або у інших випадках, коли повторне збирання є насправді необхідним. Подібна поведінка може зекономити вам час, особливо якщо ви запускаєте &kdesrc-build; щоденно або навіть частіше.</para>

<important
><para
>Цей параметр призначено лише для оптимізації збирання. Подібно до значної частини оптимізацій, його використання може позначитися на коректності збирання. Наприклад, зміни, внесені до модулів qt або kdelibs, можуть призвести до необхідності повторного збирання інших модулів, навіть якщо їх початкові коди не зазнали змін взагалі.</para
></important>
</entry>
</row>

<row id="conf-checkout-only">
<entry
>checkout-only</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Цей параметр було вилучено у січні 2022 року. Його використовували для керування можливістю отримання частин модуля зі сховища Subversion.</para>
</entry>
</row>

<row id="conf-cmake-generator">
<entry
>cmake-generator</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>За допомогою цього параметра можна визначити, який засіб створення даних буде використано у поєднанні із &cmake;. У поточній версії передбачено підтримку як <literal
>Ninja</literal
>, так і <literal
>файлів Make Unix</literal
>, а також додаткових генераторів на їхній основі, зокрема <literal
>Eclipse CDT4 - Ninja</literal
>. Некоректні (непідтримувані) значення буде проігноровано — значення вважатиметься невстановленим. Якщо не встановлено, типово буде використано  <literal
>файли Make Unix</literal
>. </para>

<para
>Зауважте, що якщо коректний засіб обробки також вказано за допомогою <link linkend="conf-cmake-options"
>cmake-options</link
>, він матиме пріоритет над цим значенням для <literal
>cmake-generator</literal
>.</para
></entry>
</row>

<row id="conf-cmake-toolchain">
<entry
>cmake-toolchain</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Скористайтеся цим параметром, щоб вказати файл набору інструментів, яким слід скористатися у &cmake;. </para>
<para
>Якщо налаштовано коректний набір інструментів, &kdesrc-build; <emphasis
>не встановлюватиме змінні середовища автоматично</emphasis
>. Для виправлення середовища вручну ви можете скористатися &set-env;, &binpath; та &libpath;, якщо файл набору інструментів не працює у &kdesrc-build; без вашого втручання. Щоб дізнатися про це більше, зверніться до <link linkend="kdesrc-build-std-flags"
>огляду стандартних прапорців, які додаються &kdesrc-build;</link
>. </para>
<para
>Зауважте, що якщо коректний набір інструментів також вказано за допомогою <link linkend="conf-cmake-options"
>cmake-options</link
>, він матиме пріоритет над цим значенням для <literal
>cmake-toolchain</literal
>.</para
></entry>
</row>

<row id="conf-cmake-options">
<entry
>cmake-options</entry>
<entry
>Дописує дані до загальних параметрів для типової системи збирання і перевизначає загальні параметри для інших систем збирання.</entry>
<entry
><para
>Скористайтеся цим параметром для того, щоб визначити, які параметри слід передати &cmake; під час створення системи збирання модуля. Якщо цей параметр використано як загальний, його буде застосовано до всіх модулів, які збирає цей скрипт. Якщо параметр визначено на рівні модуля, його буде додано в кінець загальний параметрів. За допомогою цього параметра можна вказати загальні параметри &cmake; у загальному розділі (global).</para>

<para
>Значення цього параметра не стосується qt (&cmake; там не використовується). Скористайтеся для збирання qt <link linkend="conf-configure-flags"
>configure-flags</link
>.</para>

<para
>Якщо серед параметрів цього списку буде вказано коректний засіб створення даних, він матиме пріоритет над значенням <link linkend="conf-cmake-generator"
>cmake-generator</link
>. Некоректні (або непідтримувані) значення запису засобу створення даних буде проігноровано — їх не буде передано &cmake;. </para>

<para
>Якщо серед параметрів цього списку буде вказано коректний файл набору інструментів, він матиме пріоритет над значенням <link linkend="conf-cmake-toolchain"
>cmake-toolchain</link
>. Некоректні (або непідтримувані) значення запису набору інструментів буде проігноровано — їх не буде передано &cmake;. </para>

<para
>Оскільки ці параметри передаються безпосередньо до командного рядка &cmake;, їх слід вказувати у тому самому вигляді, у якому їх буде передано &cmake;. Приклад:</para>

<screen
>cmake-options -DCMAKE_BUILD_TYPE=RelWithDebInfo
</screen>

<para
>Оскільки встановлення цього параметра потребує певних знань, якщо всі інші параметри &kdesrc-build; вказано правильно, ви можете просто залишити значення цього параметра порожнім. (Іншими словами, <emphasis
>потрібні</emphasis
> параметри &cmake; буде встановлено автоматично)</para
></entry>
</row>

<row id="conf-colorful-output">
<entry
>colorful-output</entry>
<entry
>Неможливо перевизначити</entry>
<entry
>Встановіть для цього параметра значення <userinput
>false</userinput
>, щоб вимкнути розфарбування даних, які виводитиме &kdesrc-build;. Типовим значенням цього параметра є <replaceable
>true</replaceable
>. Зауважте, що &kdesrc-build; не виводитиме розфарбовані дані до інших, відмінних від термінала (на зразок xterm, &konsole; або звичайної консолі &Linux;), виводів. </entry>
</row>

<row id="conf-compile-commands-export">
<entry
>compile-commands-export</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry>
<para
>Вмикає створення <literal
>compile_commands.json</literal
> у каталозі збирання за допомогою CMake. Типовим значенням цього параметра є <replaceable
>true</replaceable
>. Встановіть значення <userinput
>false</userinput
>, щоб вимкнути створення цього файла. </para>
</entry>
</row>

<row id="conf-compile-commands-linking">
<entry
>compile-commands-linking</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry>
<para
>Вмикає створення символічних посилань з <literal
>compile_commands.json</literal
>, створеного у каталозі збирання за допомогою, на відповідний каталог початкового коду. Типовим значенням цього параметра є <replaceable
>false</replaceable
>. Встановіть значення <userinput
>true</userinput
>, щоб увімкнути автоматичне створення символічних посилань. </para>
</entry>
</row>

<row id="conf-configure-flags">
<entry
>configure-flags</entry>
<entry
>Дописує дані до загальних параметрів для типової системи збирання і перевизначає загальні параметри для інших систем збирання.</entry>
<entry
><para
>Скористайтеся цим параметром, щоб вказати параметри, які слід передати ./configure під час створення системи збирання модуля. Якщо цей параметр використовується на загальному рівні, його буде застосовано до всіх модулів, які збиратимуться цим скриптом. <emphasis
>Цей параметри потрібен лише для qt-copy.</emphasis
>.</para>

<para
>Щоб змінити параметри налаштування модулів KDE, ознайомтеся з розділом щодо <link linkend="conf-cmake-options"
>cmake-options</link
>. </para>
</entry>
</row>

<row id="conf-custom-build-command">
<entry
>custom-build-command</entry>
<entry
>Параметр модуля перевизначає загальний параметр (параметри системи збирання)</entry>
<entry>
    <para
>За допомогою цієї команди можна наказати системі виконати іншу команду (відмінну від, наприклад, <command
>make</command
>) з метою збирання. Зазвичай, програма &kdesrc-build; здатна сама вибрати команду для збирання, отже немає потреби у визначенні цього параметра. Втім, він може бути корисним у разі використання альтернативних систем збирання. </para>

    <para
>Значення цього параметра використовується як команда, яку слід виконати. Зміни до команди вносяться за допомогою параметра <link linkend="conf-make-options"
>make-options</link
> у звичайному режимі. </para>
</entry>
</row>

<row id="conf-cxxflags">
<entry
>cxxflags</entry>
<entry
>Дописує дані до загальних параметрів для типової системи збирання і перевизначає загальні параметри для інших систем збирання.</entry>
<entry
><para
>Скористайтеся цим параметром, щоб вказати, які параметри слід використовувати для збирання модуля. Цей параметр визначається саме тут, а не у параметрах <link linkend="conf-configure-flags"
>configure-flags</link
> і <link linkend="conf-cmake-options"
>cmake-options</link
>, оскільки цей параметр також встановлює змінну середовища <envar
>CXXFLAGS</envar
> під час процесу збирання.</para>

<para
>Зауважте, що у &kde; 4 і всіх інших модулів, які використовують &cmake;, потрібно встановити значення параметра CMAKE_BUILD_TYPE рівним <userinput
>none</userinput
> під час налаштування модуля. Зробити це можна за допомогою параметра <link linkend="conf-cmake-options"
>cmake-options</link
>. </para>
</entry>
</row>

<row id="conf-dest-dir">
<entry
>dest-dir</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Скористайтеся цим параметром, щоб змінити назву, яку буде дано модулю на диску. Наприклад, якщо вам потрібен модуль extragear/network, за допомогою цього параметра ви можете перейменувати його на extragear-network. Зауважте, що не варто включати до назви модуля каталоги роздільники каталогів, оскільки такі назви можуть призвести до конфлікту з одним з параметрів <link linkend="conf-build-dir"
>build-dir</link
> або <link linkend="conf-source-dir"
>source-dir</link
>. </entry>
</row>

<row id="conf-disable-agent-check">
<entry
>disable-agent-check</entry>
<entry
>Неможливо перевизначити</entry>
<entry
>Зазвичай, якщо ви використовуєте &ssh; для отримання вихідних кодів &subversion; (наприклад, якщо ви використовуєте протокол svn+ssh), &kdesrc-build; намагатиметься перевірити і зробити так, щоб, якщо ви використовуєте агент ssh, цей агент справді керував певними профілями &ssh;. Так зроблено, щоб &ssh; не надсилав, за можливості, запитів на пароль для кожного з ваших модулів. Ви можете вимкнути таку перевірку встановленням параметра <option
>disable-agent-check</option
> у значення <userinput
>true</userinput
>. </entry>
</row>

<row id="conf-do-not-compile">
<entry
>do-not-compile</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Скористайтеся цим параметром, щоб вибрати певний набір каталогів, які не буде зібрано у модулі (замість збирання всіх каталогів). Відокремлювати каталоги у списку слід за допомогою пробілів.</para>

<para
>Зауважте, що вихідні коди програм все ж буде отримано.</para>

<para
>Наприклад, щоб вимкнути збирання у каталогах <literal
>codeeditor</literal
> і <literal
>minimaltest</literal
> бібліотеки <literal
>syntaxhighlighting</literal
>, вам слід додати компіляцію <userinput
>do-not-compile codeeditor minimaltest</userinput
>, вам слід додати «do-not-compile juk kscd» до ваших параметрів syntaxhighlighting.</para>

<para
>Приклад можна знайти у розділі <xref linkend="not-compiling"/>.</para>
</entry>
</row>

<row id="conf-email-address">
<entry
>email-address</entry>
<entry
>Неможливо перевизначити</entry>
<entry>
<para
>Цей параметр було вилучено у версії &kdesrc-build; 1.14. </para>
</entry>
</row>

<row id="conf-email-on-compile-error">
<entry
>email-on-compile-error</entry>
<entry
>Неможливо перевизначити</entry>
<entry>
<para
>Цей параметр було вилучено у версії &kdesrc-build; 1.14. </para>
</entry>
</row>

<row>
<entry
>inst-apps</entry>
<entry
></entry>
<entry
>Цей параметр було вилучено у версії 1.10 </entry>
</row>

<row id="conf-git-desired-protocol">
<entry
>git-desired-protocol</entry>
<entry
>Неможливо перевизначити</entry>
<entry
><para
>Цей параметр стосується модулів зі сховища <link linkend="kde-projects-module-sets"
>проєкту &kde;</link
>.</para>

<para
>Насправді, за допомогою цього параметрам можна вказати, якому з протоколів роботи у мережі слід надавати перевагу під час оновлення початкових кодів відповідних модулів. Зазвичай, використовується дуже ефективний протокол <literal
>git</literal
>, але його може бути заблоковано у деяких мережах (наприклад у корпоративних мережах, відкритих мережах Wi-Fi). Альтернативним протоколом з ширшою підтримкою є <literal
>https</literal
>, який використовується для доступу до сайтів інтернету.</para>

<para
>Якщо ви користуєтеся якоюсь з мереж з обмеженнями, ви можете встановити для цього параметра значення <userinput
>http</userinput
>, щоб наказати програмі надавати перевагу передаванню даних за допомогою <literal
>https</literal
>.</para>

<tip
><para
>Крім того, у вас може виникнути потреба у встановленні значення для параметра <link linkend="conf-http-proxy"
>http-proxy</link
>, якщо для роботи з даним використовується проксі-сервер HTTP.</para
></tip>

<para
>У всіх інших випадках не варто встановлювати цей параметр, оскільки типовий протокол є найефективнішим.</para>

<para
>Цей параметр було додано у &kdesrc-build; 1.16. До версії 20.06 цей параметр використовувався для налаштовування адреси отримання даних, а не адреси надсилання даних. З версії 20.06 для оновлення проєктів KDE завжди використовується <literal
>https</literal
>.</para>
</entry>
</row>

<row id="conf-git-repository-base">
<entry
>git-repository-base</entry>
<entry
>Неможливо перевизначити</entry>
<entry
><para
>Цей параметр, доданий у версії 1.12.1, використовується для скорочення посилань на базову адресу певного сховища Git у наступних оголошеннях <link linkend="module-sets"
>наборів модулів</link
>. Параметр корисний для оголошення збирання декількох модулів Git.</para>

<para
>Вам слід вказати два значення (відокремлених пробілами): назву, яку буде пов’язано з базовою адресою, та саму базову адресу. Приклад:</para>

<para>
<informalexample>
<programlisting
>global
   # інші параметри

   # Загальна адреса всіх модулів сервера Git з анонімним доступом.
   git-repository-base <replaceable
>kde-git</replaceable
> <replaceable
>kde:</replaceable>
end global

# Оголошення модулів

module-set
   # Тепер можна скористатися раніше визначеним псевдонімом, але <emphasis
>лише</emphasis>
   # у межах module-set.
   repository <replaceable
>kde-git</replaceable>

   <link linkend="conf-use-modules"
>use-modules</link
> <replaceable
>модуль1.git</replaceable
> <replaceable
>модуль2.git</replaceable>
end module-set
</programlisting>
</informalexample>
</para>

<para
>Параметр <literal
>use-modules</literal
> набору модулів створив два записи модулів. &kdesrc-build; поводитиметься так, наче було вказано:</para>

<programlisting
>module модуль1
    repository kde:<replaceable
>модуль1.git</replaceable>
end module

module модуль2
    repository kde:<replaceable
>модуль2.git</replaceable>
end module
</programlisting>

<para
>Префікс сховища &git; <literal
>kde:</literal
>, використаний вище, є скороченням, яке буде автоматично встановлено &kdesrc-build;. Щоб дізнатися більше, ознайомтеся зі статтею TechBase щодо <ulink url="https://techbase.kde.org/Development/Git/Configuration#URL_Renaming"
>перейменування адрес</ulink
>. Зауважте, що на відміну від більшості інших параметрів, цей параметр може бути вказано декілька разів з метою визначення потрібних вам замінників адрес.</para>

<tip
><para
>Для того, щоб скористатися перевагами наборів модулів, не обов’язково використовувати цей параметр. Цей параметр призначено лише для спрощення використання одного сховища у декількох наборах модулів.</para
></tip>
</entry>
</row>

<row id="conf-git-user">
<entry
>git-user</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry>
<para
>Цей параметр призначено для розробників &kde;. Якщо його встановлено, значення буде використано для автоматичного налаштовування даних профілю системи керування версіями &git; для <emphasis
>нових отриманих</emphasis
> модулів &git; (більшості модулів &kde;).</para>

<para
>Зокрема, вказаними за допомогою цього параметра значеннями буде заповнено поля імені користувача та адреси електронної пошти для кожного нового сховища &git;.</para>

<para
>Значення має бути вказано у форматі <option
><replaceable
>Ім’я користувача</replaceable
> &lt;<replaceable
>адреса@електронної.пошти</replaceable
>&gt;</option
>.</para>

<para>
<informalexample>
<para
>Наприклад, якщо розробника звати «Bozna Khto», а адресою є «bozna@abc.xyz», слід вказати таке:</para>

<screen
><symbol
>git-user</symbol
> <replaceable
>Bozna Khto</replaceable
> &lt;<replaceable
>bozna@abc.xyz</replaceable
>&gt;
</screen>
</informalexample>
</para>

<para
>Цей параметр було додано у &kdesrc-build; 15.09. </para>
</entry>
</row>

<row id="conf-http-proxy">
<entry
>http-proxy</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>

<entry
><para
>Цей параметр, якщо його встановлено, використовується для визначення адреси проксі-сервера, яким слід користуватися для обміну даними у мережі за допомогою HTTP (наприклад під час отримання знімків нових модулів або <link linkend="kde-projects-module-sets"
>бази даних проєктів KDE</link
>).</para>

<para
>Крім того, &kdesrc-build; намагатиметься використати проксі-сервер для роботи інших програм, від дій яких залежить працездатність програми. Отже, для змінної середовища <envar
>http_proxy</envar
> буде встановлене значення позначеного сервера, <emphasis
>якщо для цієї змінної ще не встановлено жодного значення</emphasis
>.</para>

<para
>Цей параметр було додано у &kdesrc-build; 1.16.</para>
</entry>
</row>

<row id="conf-ignore-kde-structure">
<entry
>ignore-kde-structure</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry>
<para
>Цей параметр є застарілим і його буде вилучено (знову) у наступному випуску програми.</para>

<para
>Будь ласка, користуйтеся замість цього параметра параметром <option
><link linkend="conf-directory-layout"
>directory-layout</link
></option
>, який надає доступ до ширшого спектра дій.</para>
</entry>
</row>

<row id="conf-directory-layout">
<entry
>directory-layout</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>За допомогою цього параметра можна налаштувати компонування, яким &kdesrc-build; користуватиметься при створенні каталогів із початковим кодом та каталогів для збирання.</para>
<para
>У поточній версії передбачено три можливих значення: <userinput
>flat</userinput
>, <userinput
>invent</userinput
> та <userinput
>metadata</userinput
>.</para>
<para
>Якщо буде використано компонування <userinput
>flat</userinput
>, типове значення, програма згрупує усі модулі безпосередньо у каталогах початкового коду та збирання. Наприклад, <literal
>source/extragear/network/telepathy/ktp-text-ui</literal
> у компонуванні <userinput
>metadata</userinput
> буде просто <literal
>source/ktp-text-ui</literal
>, якщо ви скористаєтеся замість нього компонуванням <userinput
>flat</userinput
>. </para>
<para
>Якщо буде використано компонування <userinput
>invent</userinput
>, програма створить ієрархію каталогів, яка точно збігатиметься із відносними шляхами сховищ на <ulink url="https://invent.kde.org/"
>invent.kde.org</ulink
>. Наприклад, <literal
>source/kde/applications/kate</literal
> у компонуванні <userinput
>metadata</userinput
> буде <literal
>source/utilities/kate</literal
>, якщо ви скористаєтеся замість нього компонуванням <userinput
>invent</userinput
>. Це компонування стосується лише проєктів KDE. Це непоганий варіант для тих, хто лише розпочинає роботу з &kdesrc-build;. </para>
<para
>Нарешті, компонування <userinput
>metadata</userinput
> відтворює типову поведінку попередніх версій програми. У цьому компонуванні проєкти KDE упорядковуються відповідно до шляхів проєктів, які вказано у метаданих проєктів для цих модулів. Це непоганий варіант, якщо вам потрібне компонування каталогів, яке відтворюватиме певні процеси розробки KDE. Це, втім, означатиме, що відповідні шляхи не лишатимуться сталими. У результаті цього, &kdesrc-build; може «забути» про стару копію сховища і клонувати сховище для проєкту знову через зміни у метаданих проєкту.</para>
</entry>
</row>

<row id="conf-ignore-modules">
<entry
>ignore-modules</entry>
<entry
>Неможливо перевизначити</entry>
<entry
><para
>Модулі, названі у цьому параметрі, які мало б бути вибрано &kdesrc-build; через визначення параметра <link linkend="conf-use-modules"
>use-modules</link
>, буде повністю пропущено. Цим параметром можна скористатися, якщо ви хочете зібрати всі групи у проєкті <link linkend="kde-projects-module-sets"
>kde-projects</link
>, <emphasis
>окрім</emphasis
> певних модулів.</para>

<para
>Значення параметра не повинне обов’язково вказувати безпосередньо на назву модуля. Будь-який з модулів, повна частина <link linkend="kde-projects-module-sets"
>шляху до модуля у проєктах &kde;</link
> якого збігається з одним зі значень параметра, буде проігноровано. Отже, таким чином можна ігнорувати одразу декілька модулів.</para>

<para
>Наприклад, значення параметра <replaceable
>libs</replaceable
> призведе до того, що буде виключено <symbol
>kde/kdegraphics/libs</symbol
> і <symbol
>playground/libs</symbol
> (але не <symbol
>kde/kdelibs</symbol
>, оскільки «kdelibs» не збігається повністю зі значенням параметра).</para>

<tip
><para
>Див. також розділ <xref linkend="example-ignoring-a-module"/>.</para
></tip>

<para
>Цей параметр було додано у &kdesrc-build; 1.16.</para>
</entry>
</row>

<row id="conf-include-dependencies">
<entry
>include-dependencies</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry>
<para
>За допомогою цього параметра, якщо встановлено значення <userinput
>true</userinput
>, можна наказати &kdesrc-build; включити відомі залежності модуля до його налаштувань збирання, без потреби у явному визначенні цих залежностей (навіть опосередковано).</para>

<note
><para
>Цей параметр працюватиме лише для <link linkend="kde-projects-module-sets"
>модулів на основі <literal
>kde-project</literal
></link
> і потребує від розробників &kde; точного визначення метаданих для вибраної вами <link linkend="conf-branch-group"
>групи гілок</link
>.</para
></note>

<para
>Типово, цей параметр увімкнено для забезпечення підтримки збирання програм, які потребують версій &Qt; або Плазми, які є новішими за ті, підтримку яких передбачено у типових операційних системах.</para>
</entry>
</row>

<row id="conf-install-after-build">
<entry
>install-after-build</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Цей параметр використовується для встановлення пакунка після його успішного збирання. Типово, цей параметр увімкнено. Якщо ви бажаєте вимкнути його, вам слід встановити для нього значення <userinput
>false</userinput
> у <link linkend="configure-data"
>файлі налаштувань</link
>. Крім того, ви можете скористатися параметром командного рядка <link linkend="cmdline-no-install"
><option
>--no-install</option
></link
>. </entry>
</row>

<row id="conf-install-environment-driver">
<entry
>install-environment-driver</entry>
<entry
>Неможливо перевизначити</entry>
<entry
><para
>Типово, &kdesrc-build; встановити скрипт оболонки, яким можна скористатися у скриптах налаштовування профілю користувача для спрощення визначення бажаних змінних середовища для запуску стільниці Плазми, зібраної за допомогою &kdesrc-build;.</para>

<para
>Цим драйвером буде внесено зміни до таких файлів:</para>

<itemizedlist>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-master.sh</filename
> (зазвичай зберігається за адресою <filename
>~/.config/kde-env-master.sh</filename
>).</para
></listitem>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-user.sh</filename
> (зазвичай зберігається за адресою <filename
>~/.config/kde-env-user.sh</filename
>).</para
></listitem>
</itemizedlist>

<para
>Скрипт <filename
>kde-env-user.sh</filename
> є необов'язковим. Його призначено для налаштовування користувачем (див. розділ <ulink url="https://userbase.kde.org/KDE_System_Administration/Environment_Variables#Troubleshooting_and_Debugging"
>Troubleshooting and Debugging</ulink
> сторінки UserBase &kde;, де наведено приклади параметрів налаштовування), але ці параметри можна встановити у інший спосіб користувачем у скриптах налаштовування наявного профілю.</para>

<para
>Ви можете вимкнути драйвер встановленням для цього параметра значення <replaceable
>false</replaceable
> і та вимиканням параметра <link linkend="conf-install-session-driver"
>install-session-driver</link
>.</para>

<para
>Цей параметр було додано у &kdesrc-build; 17.08.</para>

<tip
><para
>&kdesrc-build; не перезаписуватиме вже створених файлів (якщо такі існують), якщо ви не передасте програмі параметр командного рядка <option
><link linkend="cmdline-delete-my-settings"
>--delete-my-settings</link
></option
>.</para
></tip>
</entry>
</row>

<row id="conf-install-session-driver">
<entry
>install-session-driver</entry>
<entry
>Неможливо перевизначити</entry>
<entry
><para
>Якщо увімкнено, &kdesrc-build; намагається встановити драйвер до графічної програми для керування сеансами для того, щоб уможливити ваш вхід до зібраного за допомогою &kdesrc-build; стільничного середовища &kde;.</para>

<para
>Цим драйвером буде внесено зміни до таких файлів:</para>

<itemizedlist>
<listitem
><para
><filename
>~/.xsession</filename
></para
></listitem>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-master.sh</filename
> (зазвичай зберігається за адресою <filename
>~/.config/kde-env-master.sh</filename
>).</para
></listitem>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-user.sh</filename
> (зазвичай зберігається за адресою <filename
>~/.config/kde-env-user.sh</filename
>).</para
></listitem>
</itemizedlist>

<para
>Якщо ви користуєтеся власним драйвером для входу до середовища, ви можете вимкнути драйвер встановленням для цього параметра значення <replaceable
>false</replaceable
>. Якщо її увімкнено, ця можливість також вмикає можливість <link linkend="conf-install-environment-driver"
>install-environment-driver</link
>.</para>

<para
>Цей параметр було додано у &kdesrc-build; 1.16.</para>

<tip
><para
>&kdesrc-build; не перезаписуватиме вже створених файлів (якщо такі існують), якщо ви не передасте програмі параметр командного рядка <option
><link linkend="cmdline-delete-my-settings"
>--delete-my-settings</link
></option
>.</para
></tip>
</entry>
</row>

<row id="conf-kdedir">
<entry
>kdedir</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>За допомогою цього параметра можна вказати каталог, до якого буде встановлено &kde; після збирання. Типовим значення параметра є <filename class="directory"
>~/kde</filename
>. Якщо ви зміните значення так, що воно вказуватиме на каталог, для доступу до якого потрібні права користувача root, ймовірно, вам слід прочитати і про параметр <link linkend="conf-make-install-prefix"
>make-install-prefix</link
>.</entry>
</row>

<row id="conf-kde-languages">
<entry
>kde-languages</entry>
<entry
>Неможливо перевизначити</entry>
<entry
><para
>За допомогою цього параметра ви можете вказати скрипту, що слід отримати і встановити пакунки локалізації разом з &kde;. Це слід зробити, якщо ви не є мешканцем США і бажаєте, щоб скористатися &kde; вашою рідною мовою.</para>

<para
>Щоб скористатися цим параметром, вам слід вказати для нього значення-список мов, які слід встановити, коди мов слід відокремлювати пробілами. З кожною з мов пов’язано певний код, знайти потрібний код можна на сторінці <ulink url="http://l10n.kde.org/teams-list.php"
>http://l10n.kde.org/teams-list.php</ulink
>. </para>

<para
>Можна вибрати і лише одну мову. Типово, не буде отримано жодної мови, що означає, що інтерфейс і довідку &kde; буде показано лише американською англійською.</para>

<para
>Наприклад, якщо вам потрібно встановити пакунок української мови, вам слід встановити значення цього параметра десь так: <userinput
><option
>kde-languages</option
> <replaceable
>uk</replaceable
></userinput
>. Крім того, ймовірно, для того, щоб середовище використовувало українську, вам слід належним чином налаштувати його за допомогою Центру керування (KDE 3) або Системних параметрів (KDE 4).</para>
</entry>
</row>

<row id="conf-libpath">
<entry
>libpath</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Встановіть значення для цього параметра значення, щоб змінити значення змінної середовища <envar
>LD_LIBRARY_PATH</envar
> на час збирання. Ви не зможете перевизначити цей параметр на рівні модулів. Типовим є порожнє значення, але шляхи <filename class="directory"
>$<envar
>KDEDIR</envar
>/lib</filename
> і <filename class="directory"
>$<envar
>QTDIR</envar
>/lib</filename
> буде додано автоматично. Ви можете скористатися тильдою (~) у будь-якому зі шляхів, які ви додасте за допомогою цього параметра. </entry>
</row>

<row id="conf-log-dir">
<entry
>log-dir</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Скористайтеся цим параметром, щоб змінити каталог, у якому зберігатимуться файли журналу, створені скриптом. </entry>
</row>

<row id="conf-make-install-prefix">
<entry
>make-install-prefix</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Встановіть для цієї змінної значення відокремленого пробілами списку, який скрипт вважатиме командою і її параметрами, які передують команді <userinput
><command
>make</command
> <option
>install</option
></userinput
>, призначеній для встановлення модулів. Наприклад, цей параметр буде корисним для встановлення пакунків за допомогою &sudo;, але, будь ласка, будьте обережними з використанням прав доступу адміністративного користувача.</entry>
</row>

<row id="conf-make-options">
<entry
>make-options</entry>
<entry
>Параметр модуля перевизначає загальний параметр (параметри системи збирання)</entry>
<entry
><para
>Встановіть значення для цієї змінної, щоб передати параметри командного рядка команді <command
>make</command
>. Подібні параметри будуть корисним для програм на зразок <ulink url="https://github.com/distcc/distcc"
><application
>distcc</application
></ulink
> або у системах з декількома процесорними ядрами.</para>
<para
>Зауважте, що <command
>make</command
> використовується не в усіх системах збирання. Якщо для збирання використовується <command
>ninja</command
> (так, зокрема, побудовано <link linkend="conf-override-build-system"
>систему збирання <application
>Meson</application
></link
>), скористайтеся параметром <link linkend="conf-ninja-options"
>ninja-options</link
>.</para>
</entry>
</row>

<row id="conf-manual-build">
<entry
>manual-build</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Встановіть для цього параметра значення <userinput
>true</userinput
>, щоб під час процесу збирання скрипт не намагався зібрати цей модуль. Модуль все ж буде оновлено під час оновлення зі сховища &subversion;. Цей параметр у точності збігається з параметром командного рядка <link linkend="cmdline-no-build"
><option
>--no-build</option
></link
>. </entry>
</row>

<row id="conf-manual-update">
<entry
>manual-update</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Встановіть для цього параметра значення <userinput
>true</userinput
>, щоб процес збирання не намагався оновити (і отже зібрати і встановити) цей модуль. Якщо ви встановите цей параметр для певного модуля, вам варто закоментувати його. </entry>
</row>

<row id="conf-module-base-path">
<entry
>module-base-path</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Встановіть цей параметр, щоб перевизначити шлях до типової теки &kdesrc-build; для потрібного модуля. Цим параметром можна, наприклад, скористатися, якщо потрібно використати певні гілки або стабільні версії бібліотек. У визначення правильного шляху неоціненну поміч вам може надати <ulink url="https://websvn.kde.org/"
>Переглядач кодів &kde;</ulink
>.</para>

<para
>Зауважте, що &kdesrc-build; конструює остаточний шлях відповідно до такого шаблону: <filename class="directory"
><varname
>$svn-server</varname
>/home/kde/<varname
>$module-base-path</varname
></filename
>. </para>

<para
>Типовим значенням є або <filename class="directory"
>trunk/<varname
>$module</varname
></filename
>, або <filename class="directory"
>trunk/KDE/<varname
>$module</varname
></filename
>, залежно від назви модуля.</para>

<tip
><para
>Ви можете скористатися варіантами <link linkend="conf-branch"
>branch</link
> або <link linkend="conf-tag"
>tag</link
>, якщо їх можна застосовувати. </para
></tip>
</entry>
</row>

<row id="conf-niceness">
<entry
>niceness</entry>
<entry
>Неможливо перевизначити</entry>
<entry
>Значенням цього параметра є ціле число у діапазоні від 20 до 0. Чим вищим буде це число, тим нижчим встановлюватиметься пріоритет процесу &kdesrc-build;, тобто, чим вищим є число, тим вищим є «пріоритет» програми. Типовим значенням є 10. </entry>
</row>

<row id="conf-ninja-options">
<entry
>ninja-options</entry>
<entry
>Параметр модуля перевизначає загальний параметр (параметри системи збирання)</entry>
<entry
><para
>Встановіть значення для цієї змінної, щоб передати параметри командного рядка для команди збирання <command
>ninja</command
>. За допомогою цього значення можна увімкнути «докладний» режим виведення даних або вручну зменшити кількість паралельних завдань зі збирання для <command
>ninja</command
>.</para>

<note
><para
>Зауважте, що значення цього параметра використовується для керування ninja лише у &kdesrc-build;. Модуль <quote
>webengine</quote
> &Qt; використовує <command
>ninja</command
> опосередковано, а офіційно збирається лише за допомогою <command
>make</command
>. У таких випадках ви можете, скориставшись <link linkend="conf-make-options"
>make-options</link
>, встановити значення змінної <literal
>NINJAFLAGS</literal
>, щоб <command
>make</command
> передала відповідні прапорці під час наступного виклику <command
>ninja</command
>.</para>

<informalexample>
<programlisting
>options <replaceable
>qtwebengine</replaceable>
    # Обмежуємо make і ninja використання не більше 6 окремих завдань зі збирання,
    # навіть якщо доступними є багато процесорів, щоб уникнути вичерпання пам'яті
    <option
><link linkend="conf-make-options"
>make-options</link
></option
> -j<replaceable
>6</replaceable
> NINJAFLAGS=-j<replaceable
>6</replaceable>
end options
</programlisting>
</informalexample>
</note>
</entry>
</row>

<row id="conf-no-svn">
<entry
>no-svn</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Якщо для цього параметра встановлення значення «true», &kdesrc-build; не оновлюватиме код модуля автоматично. Скрипт все ж намагатиметься зібрати цей модуль, якщо згідно налаштувань його слід спробувати зібрати.</entry>
</row>

<row>
<entry
>no-rebuild-on-fail</entry>
<entry
></entry>
<entry
>Цей параметр було вилучено у версії 1.10, оскільки подібна поведінка вже не допомагає, оскільки виправлено основну систему збирання.</entry>
</row>

<row id="conf-num-cores">
<entry
>num-cores</entry>
<entry
>Неможливо перевизначити</entry>
<entry>
<para
>Цей параметр визначається &kdesrc-build; (при використанні kdesrc-build-setup або <command
>kdesrc-build --initial-setup</command
>). Його значенням є кількість доступних процесорів (яку буде встановлено за допомогою зовнішньої програми <application
>nproc</application
>). Якщо &kdesrc-build; не вдасться визначити кількість процесорів, для цього параметра буде встановлено значення 4.</para>

<para
>Див. <xref linkend="make-options-example"/>, де наведено приклад використання цього параметра. Цей параметр було додано у версії 20.07.</para>
</entry>
</row>

<row id="conf-num-cores-low-mem">
<entry
>num-cores-low-mem</entry>
<entry
>Неможливо перевизначити</entry>
<entry>
<para
>Цей параметр визначається &kdesrc-build; (при використанні kdesrc-build-setup або <command
>kdesrc-build --initial-setup</command
>). Його значенням кількість процесорів, яку безпечно використовувати для великих або інтенсивних з точки зору обробки модулів, зокрема <literal
>qtwebengine</literal
>, щоб уникнути надмірного споживання пам'яті під час збирання.</para>

<para
>Типовою формулою є одне ядро процесора на кожні 2 гігабайти (ГіБ) загальної пам'яті. Буде визначено принаймні 1 ядро і не більше, ніж <option
><link linkend="conf-num-cores"
>num-cores</link
></option
> ядер.</para>

<para
>Хоча цей параметр було реалізовано для підтримки модулів &Qt;, ви можете скористатися ним для будь-якого модуля у той самий спосіб, у який використовується <option
>num-cores</option
>.</para>

<para
>Якщо &kdesrc-build; не може визначити доступний обсяг пам'яті, для цього параметра буде встановлено значення 2.</para>

<para
>Цей параметр було додано у версії 20.07.</para>
</entry>
</row>

<row id="conf-override-build-system">
<entry
>override-build-system</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Цей параметр для досвідчених користувачів було додано у &kdesrc-build; 1.16.</para>

<para
>Зазвичай, &kdesrc-build; автоматично визначає систему збирання, яку слід використати для модуля, після отримання його коду. Визначення виконується за допомогою пошуку специфічних файлів у каталозі з кодами модуля.</para>

<para
>Деякі модулі можуть містити більше за один набір файлів, що може призвести до помилок під час автоматичного визначення. У таких випадках слід вказати тип системи збирання вручну.</para>

<para
>Серед типів систем збирання, передбачених у поточній версії, слід відзначити такі:</para>

<variablelist>
    <varlistentry>
        <term
>KDE</term>
        <listitem
><para
>Використовується для збирання модулів &kde;. Насправді, можна використовувати для збирання майже будь-яких модулів, де використовується &cmake;, але краще на це не покладатися.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>Qt</term>
        <listitem
><para
>Призначено для збирання самої бібліотеки &Qt;.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>qmake</term>
        <listitem
><para
>Використовується для збирання модулів &Qt;, у яких використано файли <application
>qmake</application
>, <literal
>.pro</literal
>.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>generic</term>
        <listitem
><para
>Використовується для збирання модулів, у яких використовуються звичайні файли Makefile і які не потребують додаткового налаштовування.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>autotools</term>
        <listitem
><para
>Стандартний інструмент налаштування для більшості вільних проєктів з розробки програмного забезпечення з відкритим кодом, які не належать до інших категорій.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>meson</term>
        <listitem
><para
>Це <ulink url="https://mesonbuild.com"
>відносно новий інструмент</ulink
>, який набуває популярності як замінник autotools і який може знадобитися для збирання деяких з модулів, які не є частиною &kde;.</para
></listitem>
    </varlistentry>
</variablelist>

</entry>
</row>

<row id="conf-override-url">
<entry
>override-url</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Якщо вистановите цей параметр, &kdesrc-build; використовуватиме його значення як адресу &url;, яку слід передати &subversion; <emphasis
>повністю незмінною</emphasis
>. Загалом, вам слід використовувати цей параметр, якщо ви бажаєте отримати певний випуск, але &kdesrc-build; не може визначити, який випуск ви мали на увазі у параметрі <link linkend="conf-branch"
>branch</link
>. </entry>
</row>

<row id="conf-persistent-data-file">
<entry
>persistent-data-file</entry>
<entry
>Неможливо перевизначити</entry>
<entry
><para
>За допомогою цього параметра можна змінити місце, у якому зберігатимуться постійні дані &kdesrc-build;. Типово, ці дані зберігатимуться у файлі з назвою <filename
>.kdesrc-build-data</filename
>, який зберігатимуться у тому самому каталозі, що і файл налаштувань, який використовує програма. Якщо використано загальний файл налаштувань, його буде збережено до <filename
>~/.local/state/kdesrc-build-data</filename
> (<filename
>$XDG_STATE_HOME/kdesrc-build-data</filename
>, якщо встановлено значення <envar
>$XDG_STATE_HOME</envar
>). Якщо ви користуєтеся декількома наборами налаштувань, вам варто встановити значення цього параметра вручну, щоб різні набори налаштувань не призводили до конфлікту між наборами постійних даних. </para>

<para
>Цей параметр було додано у &kdesrc-build; 1.15.</para>
</entry>
</row>

<row id="conf-prefix">
<entry
>prefix</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>За допомогою цього параметра можна вказати місце, куди слід встановити модуль (зазвичай, буде використано значення параметра <option
><link linkend="conf-kdedir"
>kdedir</link
></option
>). Цей параметр надає вам змогу встановити модуль у каталог, що не збігається з каталогом бібліотек Платформи KDE, якщо ви, наприклад, використовуєте &kdesrc-build; лише для збирання певних програм.</para>
<para
>Ви можете замінити назву модуля у шляхах за допомогою синтаксичної конструкції <varname
>${MODULE}</varname
> або <varname
>$MODULE</varname
>.</para>
</entry>
</row>

<row id="conf-purge-old-logs">
<entry
>purge-old-logs</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>За допомогою цього параметра можна наказати скрипту автоматично вилучати старі каталоги журналів або не робити цього. Типовим значенням є <replaceable
>true</replaceable
> (вилучати).</para>
</entry>
</row>

<row id="conf-qmake-options">
<entry
>qmake-options</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>

<entry
><para
>Усі вказані тут параметри буде передано програмі <command
>qmake</command
> для модулів, у яких використовується система збирання <symbol
>qmake</symbol
>. Наприклад, ви можете скористатися параметром qmake <userinput
>PREFIX=/шлях/до/qt</userinput
>, для перевизначення місця, куди буде встановлено модуль. </para>
<para
>Цей параметр було додано у версії &kdesrc-build; 1.16.</para>
</entry>
</row>

<row id="conf-qtdir">
<entry
>qtdir</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Вкажіть значення для цього параметра, щоб визначити змінну середовища <envar
>QTDIR</envar
> на час збирання. Якщо ви не вкажете значення для параметра, &kdesrc-build; вважатиме, що слід використовувати бібліотеки &Qt; з операційної системи. </entry>
</row>

<row id="conf-remove-after-install">
<entry
>remove-after-install</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Якщо на жорсткому диску вашого комп’ютера мало місця, ймовірно, вам слід скористатися цим параметром для того, щоб автоматично вилучити каталог збирання (або одночасно каталоги кодів зі збирання для одноразового встановлення) після того, як модуль буде успішно встановлено. </para>
<para
>Можливими значення цього параметра є: <itemizedlist>
<listitem
><para
>none — Нічого не вилучати (Типове значення).</para
></listitem>
<listitem
><para
>builddir — Вилучити каталог збирання, але не початкових кодів.</para
></listitem>
<listitem
><para
>all — Вилучити каталоги початкових кодів і збирання.</para
></listitem>
</itemizedlist>
</para>

<para
>Зауважте, що використання цього параметра призведе до збільшення використання вашого каналу з’єднання (якщо ви використовуєте <replaceable
>all</replaceable
>) і часу, який буде використано для збирання програмного забезпечення &kde;, оскільки &kdesrc-build; не зможе виконувати покрокове збирання.</para>
</entry>
</row>

<row id="conf-repository">
<entry
>repository</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Цей параметр було додано у версії 1.10. За його допомогою можна вказати сховище &git;, звідки слід отримувати коди модуля. Цей параметр потрібен для &Qt; (і отже qt), а також різноманітних модулів &kde;, які перебувають у стані переходу на використання &git;.</para
></entry>
</row>

<row id="conf-revision">
<entry
>revision</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Якщо встановити для цього параметра значення, відмінне від 0 (нуля), &kdesrc-build; примусово виконає оновлення початкового коду до точно вказаної версії модуля, навіть якщо діють параметри на зразок <link linkend="conf-branch"
>branch</link
>. Якщо ви вже маєте модуль вказаної версії, його не буде оновлено до того часу, доки цей параметр налаштування не буде змінено або вилучено.</para>

<note
><para
>Цей параметр не працював для модулів з кодом у git (зокрема модулів <link linkend="kde-projects-module-sets"
>kde-projects</link
>) до версії &kdesrc-build; 1.16.</para
></note>

</entry>
</row>

<row id="conf-run-tests">
<entry
>run-tests</entry>
<entry
>Параметр модуля перевизначає загальний параметр (параметри системи збирання)</entry>
<entry
>Якщо значенням цього параметра буде <userinput
>true</userinput
>, модуль буде зібрано з підтримкою запуску комплексу тестів, комплекс тестів буде виконано у процесі збирання. &kdesrc-build; покаже вам спрощений звіт щодо результатів тестування. Цей параметр буде корисним для розробників або тих, хто бажає переконатися, що систему налаштовано належним чином.</entry>
</row>

<row id="conf-set-env">
<entry
>set-env</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Цей параметр приймає розділений пробілами набір значень, де перше значення є змінною середовища, яку слід встановити, а решта значень вважатиметься значенням змінної. Наприклад, щоб встановити для змінної <envar
>RONALD</envar
> значення McDonald, вам слід вказати у відповідному розділі таку команду:</para>
<screen
><command
>set-env</command
> <envar
>RONALD</envar
> <userinput
>McDonald</userinput
></screen>
<para
>Цей параметр має особливість: його можна повторювати без перевизначення раніше встановлених параметрів set-env у одному і тому ж розділі <link linkend="configure-data"
>файла налаштувань</link
>. Таким чином, ви можете встановити декілька змінних середовища у одному модулі (або загальних змінних).</para>
</entry>
</row>

<row id="conf-source-dir">
<entry
>source-dir</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Цей параметр використовується для встановлення каталогу, у якому &subversion; слід зберігати коди &kde;. Якщо ви не вкажете це значення, його типовим значенням буде <filename class="directory"
>~/kdesrc</filename
>. Ви можете скористатися тильдою (~) для позначення домашнього каталогу. </entry>
</row>

<row id="conf-ssh-identity-file">
<entry
>ssh-identity-file</entry>
<entry
>Неможливо перевизначити</entry>
<entry>
<para
>Встановіть значення цього параметра, якщо потрібно вказати, який саме файл ключа SSH слід передати програмі <command
>ssh-add</command
> під час отримання за допомогою &kdesrc-build; коду зі сховищ, для доступу до яких потрібно пройти розпізнавання. Також варто ознайомитися з розділом <xref linkend="ssh-agent-reminder"/>.</para>

<para
>Цей параметр було додано у версії 1.14.2.</para>
</entry>
</row>

<row id="conf-stop-on-failure">
<entry
>stop-on-failure</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Встановіть для цього параметра значення <userinput
>true</userinput
>, щоб зупинити виконання скрипту, якщо під час збирання або встановлення трапляться помилки. Типово, цей параметр вимкнено. </entry>
</row>

<row id="conf-svn-server">
<entry
>svn-server</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Цей параметр використовується для того, щоб вказати сервер, який слід використати для отримання з &subversion;. Типовим є анонімне сховище &subversion;, <filename
>svn://anonsvn.kde.org/</filename
></para>
<note
><para
>Якщо ви є розробником KDE, ви можете скористатися власним обліковим записом &subversion;, який ви отримали разом з обліковим записом розробника, замість анонімного запису.</para
></note>
</entry>
</row>

<row id="conf-tag">
<entry
>tag</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
><para
>Використовуйте цей параметр для отримання певної версії модуля.</para>
<para
><emphasis
>Зауваження:</emphasis
> ймовірно, вам <emphasis
>не доведеться використовувати</emphasis
> цей параметр. Випуски &kde; можна отримати у форматі архівів з <ulink url="https://download.kde.org/"
>сайта отримання пакунків &kde;</ulink
>.</para>

<note
><para
>Підтримку цього параметра передбачено лише для модулів з кодом у git з версії &kdesrc-build; 1.16.</para
></note>
</entry>
</row>

<row id="conf-use-clean-install">
<entry
>use-clean-install</entry>
<entry
>Параметр модуля перевизначає загальний параметр (параметри системи збирання)</entry>
<entry
><para
>Встановіть для цього параметра значення <userinput
>true</userinput
>, якщо &kdesrc-build; слід виконати <command
>make uninstall</command
> безпосередньо перед виконанням команди <command
>make install</command
>.</para>

<para
>Цей параметр може бути корисним для забезпечення вилучення застарілих файлів бібліотек, метаданих &cmake; тощо, які можуть призвести до проблем у екземплярах &kde;, які мають довгу історію. Втім, цей параметр допоможе позбутися зайвих даних лише у системах збирання, у яких передбачено підтримку виконання команди <command
>make uninstall</command
>.</para>

<para
>Цей параметр було додано у &kdesrc-build; 1.12, але не було задокументовано до версії &kdesrc-build; 1.16.</para>
</entry>
</row>

<row>
<entry
>use-cmake</entry>
<entry
></entry>
<entry
>Цей параметр було вилучено у &kdesrc-build; 1.4, оскільки для збирання всіх модулів &kde; 4 потрібен &cmake;, а використання &cmake; не дозволене для будь-яких інших модулів. </entry>
</row>

<row id="conf-use-idle-io-priority">
<entry
>use-idle-io-priority</entry>
<entry
>Неможливо перевизначити</entry>
<entry
>За допомогою цього параметра, доданого у &kdesrc-build; 1.12, може зменшити пріоритет використання скриптом диска та інших інструментів вводу-виводу, це може значно покращити швидкодію решти системи під час роботи скрипту за рахунок збільшення часу роботи &kdesrc-build;. Типово таку поведінку вимкнено, щоб зменшити пріоритет використання диска, встановіть значення <userinput
>true</userinput
>. </entry>
</row>

<row id="conf-use-inactive-modules">
<entry
>use-inactive-modules</entry>
<entry
>Неможливо перевизначити</entry>
<entry
>Якщо увімкнено, цей параметр дозволяє kdesrc-build клонувати сховища, які позначено як неактивні, і отримувати з них дані. Типово, вимкнено, щоб уможливити встановлення для цього параметра значення <userinput
>true</userinput
> у неактивних модулях. </entry>
</row>

<row id="conf-use-modules">
<entry
>use-modules</entry>
<entry
>Можна використовувати лише у <link linkend="module-sets"
>module-set</link
></entry>
<entry
><para
>За допомогою цього параметра, доданого у &kdesrc-build; 1.12.1, вам буде простіше вказати набір модулів, які збиратимуться на певному етапі, у <link linkend="kdesrc-buildrc"
>файлі налаштування</link
>.</para>

<para
>Використовувати цей параметр можна <emphasis
>лише</emphasis
> у межах визначення <literal
>module-set</literal
>. Всі ідентифікатори, передані цьому параметру, перетворюються у розгорнуту форму у модулі &kdesrc-build;. Значення параметра <link linkend="conf-repository"
><option
>repository</option
></link
> буде встановлено на основі даних щодо сховища набору модулів і назви-ідентифікатора модуля. Всі інші параметри, визначені у наборі модулів також буде скопійовано до створених записів модулів без змін.</para>

<para
>Порядок, у якому модулі визначено у цьому параметрі, є важливим, оскільки це саме той порядок, у якому &kdesrc-build; оброблятиме створені записи модулів під час оновлення, збирання і встановлення. Всі модулі, визначені у певному наборі модулів, буде оброблено до переходу &kdesrc-build; до наступного після набору модулів модуля.</para>

<para
>Якщо вам потрібно змінити параметри створеного модуля, просто оголосіть модуль ще раз після його визначення у наборі модулів і вкажіть нові параметри. Хоча таким чином ви внесете зміни до параметри модуля, модуль все одно буде оновлено і зібрано у порядку, вказаному у наборі модулів (тобто ви не зможете таким чином змінити порядок збирання).</para>

<important
><para
>Якщо ви вирішите змінити параметри саме таким чином, назва модуля має збігатися з назвою, переданою <option
>use-modules</option
>, але частину <literal
>.git</literal
> слід прибрати.</para
></important>

<para
>Опис використання параметра і приклад можна знайти у розділах <xref linkend="module-sets"/> та <link linkend="conf-git-repository-base"
>git-repository-base</link
>.</para>
</entry>
</row>

<row id="conf-use-qt-builddir-hack">
<entry
>use-qt-builddir-hack</entry>
<entry
>Параметр модуля перевизначає загальний параметр</entry>
<entry
>Цей параметр було вилучено через покращення у системі збирання &Qt;. </entry>
</row>

<row id="conf-use-stable-kde">
<entry
>use-stable-kde</entry>
<entry
>Неможливо перевизначити</entry>
<entry>
<para
>Цей параметр є застарілим і його буде вилучено (знову) у наступному випуску програми.</para>

<para
>Будь ласка, користуйтеся замість цього параметра параметром <link linkend="conf-branch-group"
>branch-group</link
>, який надає ширші можливості вибору.</para>
</entry>
</row>

</tbody>

</tgroup>
</table>

</sect1>
</chapter>

<chapter id="cmdline">
<title
>Параметри командного рядка і змінні середовища</title>

<sect1 id="cmdline-usage">
<title
>Користування за допомогою командного рядка</title>

<para
>&kdesrc-build; має бути запущено так:</para>

<cmdsynopsis
><command
>kdesrc-build</command
> <arg rep="repeat"
><replaceable
>--параметри</replaceable
></arg
> <arg rep="repeat"
><replaceable
>модулі, які слід зібрати</replaceable
></arg
> </cmdsynopsis>

<para
>Якщо у командному рядку не буде вказано жодних модулів, kdesrc-build збиратиме всі модулі, визначені у файлі налаштувань, за вказаним у файлі порядком (таку поведінку можна змінити за допомогою різних параметрів файла налаштувань).</para>

<sect2 id="cmdline-usage-options">
<title
>Типові параметри командного рядка</title>

<para
>Повний список параметрів командного рядка наведено у <xref linkend="supported-cmdline-params"/>. Ось найпоширеніші параметри:</para>

<variablelist>
  <varlistentry>
    <term
><option
>--pretend</option
> (або <option
>-p</option
>)</term>
    <listitem
><para
>За допомогою цього параметра &kdesrc-build; можна вказати, які дії слід виконати, без їхнього виконання. Це може бути корисним, якщо вам потрібно переконатися, що модулі, які вам потрібно зібрати, буде насправді зібрано.</para
></listitem>
  </varlistentry>

  <varlistentry>
    <term
><option
>--refresh-build</option
></term>
    <listitem
><para
>За допомогою цього параметра можна наказати &kdesrc-build; зібрати вказані модулі від початку. Всі вже створені каталоги збирання модуля буде вилучено, після чого його збирання буде повторено. Цей параметр корисний, якщо під час збирання модуля сталися помилки. Іноді ним доведеться користуватися у разі зміни бібліотек &Qt; або &kde;.</para
></listitem>
  </varlistentry>

  <varlistentry>
    <term
><option
>--no-src</option
></term>
    <listitem
><para
>За допомогою цього параметра можна пропустити процедуру оновлення коду. Ви можете скористатися ним, якщо у вас є нещодавно оновлений початковий код (ви могли зробити це вручну або під час нещодавнього запуску &kdesrc-build;), але вам перезібрати певні модулі.</para
></listitem>
  </varlistentry>

  <varlistentry>
    <term
><option
>--no-build</option
></term>
    <listitem
><para
>Цей параметр подібний до наведеного вище параметра <option
>--no-src</option
>, але у разі його використання процес збирання буде пропущено.</para
></listitem>
  </varlistentry>
</variablelist>

</sect2>

<sect2 id="cmdline-usage-modules">
<title
>Визначення модулів для збирання</title>

<para
>Загалом, визначення модулів для збирання доволі просте: достатньо передати назву модуля, яку визначено у файлі налаштувань. Ви також можете передати модулі, які є частиною набору модулів у форматі назв <link linkend="conf-use-modules"
>use-modules</link
> або назви всього набору модулів, якщо ви дали йому назву.</para>

<para
>У окремому випадку наборів модулів, заснованих на <link linkend="kde-projects-module-sets"
>базі даних проєктів KDE</link
>, &kdesrc-build; розгорне компоненти назв модулів для визначення потрібного вам модуля. Наприклад, запис проєкту KDE &kdesrc-build; відповідає проєкту у <literal
>extragear/utils/kdesrc-build</literal
>. Ви можете вказати будь-що з вказаного нижче для збирання &kdesrc-build;:</para>

<informalexample>
<screen
><prompt
>&percnt;</prompt
> <command
>kdesrc-build</command
> <option
><replaceable
>+extragear/utils/kdesrc-build</replaceable
></option>
<prompt
>&percnt;</prompt
> <command
>kdesrc-build</command
> <option
><replaceable
>+utils/kdesrc-build</replaceable
></option>
<prompt
>&percnt;</prompt
> <command
>kdesrc-build</command
> <option
><replaceable
>+kdesrc-build</replaceable
></option
>
</screen>
</informalexample>

<note
><para
>Команди у наведеному вище прикладі вказано перед назвою модуля з префіксом <symbol
>+</symbol
>. Це наказує програмі вважати назву модуля назвою з бази даних проєктів KDE, навіть якщо цей модуль не було визначено у вашому файлі налаштувань. </para
></note>

<para
>Будьте обережні з визначенням дуже загальних проєктів (наприклад <literal
>extragear/utils</literal
>), оскільки це може призвести до збирання надмірної кількості модулів. Вам слід скористатися параметром <option
>--pretend</option
> перед збиранням нового набору модулів, щоб було зібрано лише потрібні вам модулі.</para>

</sect2>
</sect1>

<sect1 id="supported-envvars">
<title
>Підтримувані змінні середовища</title>

<para
>&kdesrc-build; не використовує змінних середовища. Якщо у вас виникне потреба у встановленні змінних середовища для процесів збирання або встановлення, будь ласка, скористайтеся параметром <link linkend="conf-set-env"
>set-env</link
>. </para>

</sect1>

<sect1 id="supported-cmdline-params">
<title
>Параметри командного рядка</title>

<para
>Цей скрипт сприймає такі параметри командного рядка: </para>

<variablelist>

<varlistentry id="cmdline-async">
<term
><parameter
>--async</parameter
></term>
<listitem
><para
>Вмикає <link linkend="conf-async"
>асинхронний режим</link
>, за якого можливе одночасне виконання оновлення кодів та збирання модулів. Така поведінка є типовою, вам слід вказувати значення цього параметра, лише якщо ви вимкнули асинхронний режим у налаштуваннях. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-help">
<term
><parameter
>--help</parameter
></term>
<listitem
><para
>Показати лише короткі довідкові відомості про скрипт. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-version">
<term
><parameter
>--version</parameter
> (або <parameter
>-v</parameter
>)</term>
<listitem
><para
>Показує версію програми. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-show-info">
<term
><parameter
>--show-info</parameter
></term>
<listitem
><para
>Показати відомості щодо &kdesrc-build; та операційної системи. Ці відомості можуть бути корисними для звітів щодо вад або запитань на форумах чи у списках листування. </para>
<para
>Доступний з версії 18.11.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-initial-setup">
<term
><parameter
>--initial-setup</parameter
></term>
<listitem
><para
>Наказує &kdesrc-build; виконати одноразове початкове налаштовування, яке потрібне для приготування системи до роботи з &kdesrc-build; та забезпечення можливості запуску нововстановленого програмного забезпечення &kde;. </para>
<para
>Це зокрема:</para>
<itemizedlist>
<listitem
><para
>Встановлення відомих залежностей (для підтримуваних дистрибутивів &Linux;)</para
></listitem>
<listitem
><para
>Додавання потрібних змінних середовища до <literal
>~/.bashrc</literal
></para
></listitem>
<listitem
><para
>Визначення параметрів <link linkend="setup-rcfile"
>файла налаштувань</link
></para
></listitem>
</itemizedlist>

<para
>Доступний з версії 18.11.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-author">
<term
><parameter
>--author</parameter
></term>
<listitem
><para
>Показує інформацію для контактів з автором. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-color">
<term
><parameter
>--color</parameter
></term>
<listitem
><para
>Вмикає виведення інформації у кольорі. (Типова поведінка для інтерактивних терміналів). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-nice">
<term
><parameter
>--nice=<replaceable
>значення</replaceable
></parameter
></term>
<listitem
><para
>За допомогою цього параметра можна скоригувати пріоритет використання процесора &kdesrc-build;. Значенням має бути число у діапазоні 0-20. 0 відповідає найвищому пріоритету, 20 — найнижчому. Типовим значенням для &kdesrc-build; є 10. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-async">
<term
><parameter
>--no-async</parameter
></term>
<listitem
><para
>Вимикає <link linkend="conf-async"
>асинхронний режим</link
> оновлення. Натомість оновлення перед початком збирання відбуватиметься повне оновлення вихідних кодів. Використання цього параметри уповільнить процес збирання, але, якщо ви бачите помилки щодо IPC під час виконання скрипту &kdesrc-build;, спробуйте скористатися цим параметром, а також надішліть <ulink url="https://bugs.kde.org/"
>звіт про ваду</ulink
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-color">
<term
><parameter
>--no-color</parameter
></term>
<listitem
><para
>Вимикає виведення інформації у кольорі. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-pretend">
<term
><parameter
>--pretend</parameter
> (або <parameter
>-p</parameter
>)</term>
<listitem
><para
>&kdesrc-build; почне процес оновлення і збирання, але замість виконання будь-яких дій з оновлення чи збирання, скрипт виведе перелік дій, які мав би виконати (наприклад, які команди буде виконано, загальні кроки процесу тощо).</para>

<note
><para
>Скрипт виконає прості команди читання (зокрема читання даних щодо файлів), щоб виведені дані відповідали поточній конфігурації (наприклад, щоб правильно імітувати дію: повне отримання чи просте оновлення коду). </para
></note>

<important
><para
>Для забезпечення працездатності цього параметра потрібні деякі метадані, які зазвичай отримуються у автоматичному режимі, але у режимі фіктивної обробки отримання даних вимкнено. Якщо ви до цього ще ніколи не запускали &kdesrc-build; (а тому не маєте відповідних метаданих), вам слід віддати команду <command
>kdesrc-build <option
>--metadata-only</option
></command
>, щоб програма спочатку отримала потрібні їй метадані. </para
></important>
</listitem>
</varlistentry>

<varlistentry id="cmdline-quiet">
<term
><parameter
>--quiet</parameter
> (або <parameter
>-q</parameter
>)</term>
<listitem
><para
>Виводити лише скорочену інформацію. За використання цього параметра буде виведено лише базові відомості. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-really-quiet">
<term
><parameter
>--really-quiet</parameter
></term>
<listitem
><para
>Повідомляти лише про попередження і помилки. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-verbose">
<term
><parameter
>--verbose</parameter
></term>
<listitem
><para
>Виводити докладну інформацію про те, що відбувається, і про дії, які виконує &kdesrc-build;. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-src-only">
<term
><parameter
>--src-only</parameter
> (або <parameter
>--svn-only</parameter
>)</term>
<listitem
><para
>Виконати лише оновлення коду (параметр <parameter
>--svn-only</parameter
> підтримується лише з міркувань сумісності зі старішими версіями). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-build-only">
<term
><parameter
>--build-only</parameter
></term>
<listitem
><para
>Виконати лише процес збирання. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-install-only">
<term
><parameter
>--install-only</parameter
></term>
<listitem
><para
>Виконати лише процес встановлення. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-metadata-only">
<term
><parameter
>--metadata-only</parameter
></term>
<listitem
><para
>Виконали лише дії з отримання метаданих. Зазвичай, &kdesrc-build; виконує отримання метаданих у автоматичному режимі, тому цей параметр потрібен, лише якщо вам хочеться уможливити виконання команди з параметром <option
><link linkend="cmdline-pretend"
>--pretend</link
></option
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-rebuild-failures">
<term
><parameter
>--rebuild-failures</parameter
></term>
<listitem
><para
>Цим параметром можна скористатися для збирання лише тих модулів, які не вдалося зібрати під час попереднього запуску &kdesrc-build;. Це корисно, якщо одночасно із успішним збиранням декількох модулів не вдалося зібрати значну кількість інших модулів. Після виправлення помилки, що спричинила неможливість збирання, ви можете зібрати усі ті модулі, які не вдалося зібрати раніше.</para>

<note
><para
>Зауважте, що список модулів, які не вдалося зібрати раніше, переписується кожного разу, коли запуск &kdesrc-build; завершується із помилками під час збирання модулів. Втім, такий список не змінюється, якщо збирання було повністю успішним, тому ви можете успішно повторно зібрати один або два модулі, а цей параметр все одно працюватиме.</para
></note>

<para
>Цей параметр було додано у версії &kdesrc-build; 15.09.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-include-dependencies">
<term
><parameter
>--include-dependencies</parameter
></term>
<term
><parameter
>--no-include-dependencies</parameter
></term>
<listitem
><para
>Використання цього параметра призводить до того, що &kdesrc-build; автоматично включає інші модулі &kde; та &Qt; до процедури збирання, якщо вони потрібні для модулів, збирання яких було вказано за допомогою параметрів командного рядка або вашого <link linkend="configure-data"
>файла налаштувань</link
>.</para>

<para
>Перелік доданих модулів визначатиметься записами у системі керування початковими кодами програм &kde;. Див. <xref linkend="kde-projects-module-sets"/>.</para>

<para
>Відповідним параметром у файлі налаштувань є параметр <link linkend="conf-include-dependencies"
>include-dependencies</link
>.</para>

<para
>Ви також можете скористатися параметром <parameter
>--no-include-dependencies</parameter
>, який вимикає автоматичне включення додаткових модулів-залежностей.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-ignore-modules">
<term
><parameter
>--ignore-modules</parameter
></term>
<listitem
><para
>Не включати модулі, передані як аргумент параметра командного рядка, у процес оновлення або збирання (корисно, якщо ви бажаєте зібрати більшість модулів у вашому <link linkend="configure-data"
>файлі налаштування</link
> і просто пропустити збирання малої частини списку модулів). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-src">
<term
><parameter
>--no-src</parameter
> (або <parameter
>--no-svn</parameter
>)</term>
<listitem
><para
>Пропустити встановлення зв’язку з сервером &subversion; (параметр <parameter
>--no-svn</parameter
> підтримується лише з міркувань сумісності зі старішими версіями скрипту). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-build">
<term
><parameter
>--no-build</parameter
></term>
<listitem
><para
>Пропустити процес збирання. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-metadata">
<term
><parameter
>--no-metadata</parameter
></term>
<listitem
><para
>Не отримувати автоматично додаткових метаданих для модулів git &kde;. Оновлення самого коду модулів все одно відбуватиметься, якщо ви не додасте параметр <link linkend="cmdline-no-src"
>--no-src</link
>. </para
><para
>Цей параметр корисний, якщо ви часто перезапускаєте &kdesrc-build;, оскільки метадані змінюються доволі нечасто. Втім, слід пам’ятати, що метадані потрібні для роботи багатьох інших можливостей програми. Ви можете просто запустити &kdesrc-build; з параметром <link linkend="cmdline-metadata-only"
>--metadata-only</link
> один раз, а потім користуватися цим параметром під час наступних запусків. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-install">
<term
><parameter
>--no-install</parameter
></term>
<listitem
><para
>Не встановлювати автоматично пакунки після збирання. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-build-when-unchanged">
<term
><parameter
>--no-build-when-unchanged</parameter
></term>
<term
><parameter
>--force-build</parameter
></term>
<listitem
><para
>За допомогою цього параметра можна явним чином вимкнути пропуски у процесі збирання (оптимізацію, якою керує <link linkend="conf-build-when-unchanged"
>build-when-unchanged</link
> параметр). Параметр буде корисним для запуску збирання за допомогою &kdesrc-build; у разі внесення вами змін, які не може бути автоматично виявлено &kdesrc-build;.</para>

<para
><parameter
>--force-build</parameter
> призначено для виконання того ж завдання, крім того, можливо, цей параметр легше запам’ятати.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-debug">
<term
><parameter
>--debug</parameter
></term>
<listitem
><para
>Вмикає режим усування вад для скрипту. У поточній версії це означає, що всі виведені скриптом дані буде спрямовано у стандартний вивід оболонки на додачу до їх запису до каталогу журналу у звичайному режимі. Крім того, у такому режимі багато з функціональних можливостей скрипту надають у цьому режимі значно докладніші відомості про свою роботу. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-query">
<term
><parameter
>--query</parameter
>=<userinput
><replaceable
>режим</replaceable
></userinput
></term>
<listitem
><para
>За допомогою цієї команди можна наказати &kdesrc-build; визначити значення параметра модулів у списку збирання (з командного рядка або з файла налаштувань) і вивести результат на екран (один рядок для кожного з модулів).</para>

<para
>Разом із цим параметром слід вказати «режим запиту», одне з таких значень:</para>
    <itemizedlist>
    <listitem
><para
><option
>source-dir</option
> — наказує &kdesrc-build; вивести повний шлях до каталогу, де зберігається код модуля. </para
></listitem>
    <listitem
><para
><option
>build-dir</option
> — наказує &kdesrc-build; вивести повний шлях до каталогу, де відбуватиметься процес збирання. </para
></listitem>
    <listitem
><para
><option
>install-dir</option
> — наказує &kdesrc-build; вивести повний шлях до каталогу, куди буде встановлено модуль. </para
></listitem>
    <listitem
><para
><option
>project-path</option
> — наказує &kdesrc-build; вивести розташування модуля у ієрархії сховищ із початковим кодом програм KDE. Докладний опис цієї ієрархії наведено у розділі <xref linkend="kde-projects-module-sets"/>. </para
></listitem>
    <listitem
><para
><option
>branch</option
> — наказує &kdesrc-build; вивести назву визначеної гілки git, яку буде використано для кожного з модулів на основі поточних значень параметрів <link linkend="conf-tag"
>tag</link
>, <link linkend="conf-branch"
>branch</link
> та <link linkend="conf-branch-group"
>branch-group</link
>. </para
></listitem>
    <listitem
><para
>Крім того, можна використовувати коректні варіанти параметрів для модулів з <link linkend="conf-options-table"
>файла налаштувань</link
>, де наведено виявлені значення для кожного з модулів. </para
></listitem>
    </itemizedlist>

<para
>Якщо за допомогою командного рядка передано назву одного модуля, виведено буде лише значення вказаного параметра. Якщо ж у командному рядку вказано декілька модулів (або не вказано жодного модуля), до кожного рядка буде додано префікс із назвою модуля. У обох випадках &kdesrc-build; завершити роботу одразу після виведення вказаних значень. </para>

<para
>Цей параметр було додано у версії &kdesrc-build; 16.05.</para>

<informalexample>
<para
>Наприклад, команда <quote
><command
>kdesrc-build</command
> <parameter
>--query</parameter
> <parameter
><replaceable
>branch</replaceable
></parameter
> <parameter
><replaceable
>kactivities</replaceable
></parameter
> <parameter
><replaceable
>kdepim</replaceable
></parameter
></quote
> призведе до виведення даних, подібних до цих:</para>
<screen
>kactivities: master
kdepim: master
</screen>
</informalexample>
</listitem>
</varlistentry>

<varlistentry id="cmdline-no-rebuild-on-fail">
<term
><parameter
>--no-rebuild-on-fail</parameter
></term>
<listitem
><para
>Не намагатися перебудовувати модулі, які не вдалося зібрати спочатку. &kdesrc-build; ніколи не намагатиметься виконувати збирання модуля, який скрипт вже намагався зібрати. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-refresh-build">
<term
><parameter
>--refresh-build</parameter
></term>
<listitem
><para
>Повторно створити систему збирання і виконати збирання з початку. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-reconfigure">
<term
><parameter
>--reconfigure</parameter
></term>
<listitem
><para
>Виконати <command
>cmake</command
> (для модулів &kde;) або <command
>configure</command
> (для &Qt;) знову, без спорожнення каталогу збирання. Зазвичай, потреби у такій поведінці немає, оскільки &kdesrc-build; сам може виявити зміни у відповідних параметрах і автоматично перезапустити налаштування збирання. Цей параметр буде використано, якщо ви скористаєтеся параметром <parameter
><link linkend="cmdline-refresh-build"
>--refresh-build</link
></parameter
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-resume-from">
<term
><parameter
>--resume-from</parameter
></term>
<listitem
><para
>Цей параметр використовується для поновлення збирання, починаючи з вказаного модуля, назва якого має бути наступним параметром командного рядка. Крім того, вам не слід вказувати інших модулів у командному рядку. </para>

<note
><para
>У попередніх версія використання цього параметра автоматично додавало параметр <link linkend="cmdline-no-src"
><parameter
>--no-src</parameter
></link
>, але тепер програма цього не робить (з версії &kdesrc-build; 1.13). Якщо ви бажаєте уникнути оновлення кодів програма під час поновлення збирання, просто додайте до інших параметрів <option
><userinput
>--no-src</userinput
></option
>. </para
></note>

<para
>Див. також <xref linkend="cmdline-resume-after"/> and <xref linkend="resuming-failed"/>. Вам слід надавати перевагу використанню цього параметра командного рядка, якщо ви виправили помилку збирання і бажаєте, щоб скрипт &kdesrc-build; завершив збирання.</para
></listitem>
</varlistentry>

<varlistentry id="cmdline-resume-after">
<term
><parameter
>--resume-after</parameter
></term>
<listitem
><para
>Цей параметр використовується для поновлення збирання після вказаного модуля, назва якого має бути наступним параметром командного рядка. Крім того, вам не слід вказувати інших модулів у командному рядку. </para>

<note
><para
>У попередніх версія використання цього параметра автоматично додавало параметр <link linkend="cmdline-no-src"
><parameter
>--no-src</parameter
></link
>, але тепер програма цього не робить (з версії &kdesrc-build; 1.13). Якщо ви бажаєте уникнути оновлення кодів програма під час поновлення збирання, просто додайте до інших параметрів <option
><userinput
>--no-src</userinput
></option
>. </para
></note>

<para
>Див. також <xref linkend="cmdline-resume-from"/> and <xref linkend="resuming-failed"/>. Вам слід надавати перевагу використанню цього параметра командного рядка, якщо ви виправили помилку збирання, а також зібрали і встановили модуль власноруч, і бажаєте, щоб скрипт &kdesrc-build; розпочав з обробки наступного модуля.</para
></listitem>
</varlistentry>

<varlistentry id="cmdline-resume">
<term
><parameter
>--resume</parameter
></term>
<listitem
><para
>Цим параметром можна скористатися для запуску &kdesrc-build; після аварійного завершення роботи програми під час збирання. </para
><para
>За допомогою цього параметра можна відновити збирання з модуля, під час збирання якого сталася критична помилка, на основі попереднього списку модулів, які очікують на збирання. Оновлення коду та метаданих буде вимкнено. Цей параметр призначено для випадків, коли проста помилка або невстановлена залежність призводить до неможливості зібрати модуль. Щойно помилку буде виправлено, а залежність встановлено, ви можете швидко повернутися до збирання модулів без додаткових вправ зі встановлення належних аргументів для параметрів <option
><link linkend="cmdline-resume-from"
>--resume-from</link
></option
> та <option
><link linkend="cmdline-stop-before"
>--stop-before</link
></option
>. </para
><para
>Цей параметр зручно використовувати разом з параметром <option
><link linkend="cmdline-stop-on-failure"
>--stop-on-failure</link
></option
>, особливо, якщо це відбувається на початковому кроці налаштовування середовища для розробки. </para
><para
>Цей параметр було додано у версії &kdesrc-build; 1.16. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-stop-before">
<term
><parameter
>--stop-before</parameter
></term>
<listitem
><para
>Цим параметром командного рядка можна скористатися для того, щоб зупинити звичайне збирання <emphasis
>до того</emphasis
>, як розпочнеться збирання вказаного модуля. </para
><para
>Наприклад, якщо порядок у звичайному списку збирання був таким: <simplelist type="inline"
><member
>модульA</member
><member
>модульB</member
><member
>модульC</member
></simplelist
>, і вказано <option
>--stop-before=<replaceable
>модульB</replaceable
></option
>, &kdesrc-build; виконає збирання лише модуля <literal
>модульA</literal
>. </para
><para
>Цей параметр було додано у &kdesrc-build; 1.16. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-stop-after">
<term
><parameter
>--stop-after</parameter
></term>
<listitem
><para
>Цим параметром командного рядка можна скористатися для того, щоб зупинити звичайне збирання <emphasis
>після того</emphasis
>, як розпочнеться збирання вказаного модуля. </para
><para
>Наприклад, якщо порядок у звичайному списку збирання був таким: <simplelist type="inline"
> <member
>модульA</member
><member
>модульB</member
><member
>модульC</member
></simplelist
>, і вказано <option
>--stop-after=<replaceable
>модульB</replaceable
></option
>, &kdesrc-build; виконає збирання модулів <literal
>модульA</literal
> та <literal
>модульB</literal
>. </para
><para
>Цей параметр було додано у &kdesrc-build; 1.16. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-stop-on-failure">
<term
><parameter
>--stop-on-failure</parameter
></term>
<listitem
><para
>За допомогою цього параметра можна наказати програмі припинити збирання за першої з критичної помилки. Корисний, якщо виконується початкове налаштовування середовища для розробки. Без цього параметра &kdesrc-build; намагатиметься продовжити збирання решти модулів у наборі, щоб уникнути втрати часу, якщо проблема виникла лише з одним з цих модулів. </para
><para
>Цей параметр було додано у версії &kdesrc-build; 1.16. Див. також параметр <link linkend="conf-stop-on-failure"
>stop-on-failure</link
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-rc-file">
<term
><parameter
>--rc-file</parameter
></term>
<listitem
><para
>Інтерпретує наступний параметр командного рядка, як файл, з якого слід читати параметри налаштування. Типовим значенням цього параметра є <filename
>kdesrc-buildrc</filename
> (скрипт шукатиме його у поточному робочому каталозі). Якщо цього файла не існуватиме, замість нього буде використано <filename
>~/.config/kdesrc-buildrc</filename
> (<filename
>$XDG_CONFIG_HOME/kdesrc-buildrc</filename
>, якщо встановлено значення <envar
>$XDG_CONFIG_HOME</envar
>). Див. також <xref linkend="kdesrc-buildrc"/>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-print-modules">
<term
><parameter
>--print-modules</parameter
></term>
<listitem>
<para
>Виконує усі дії, вказані до цього параметра, зокрема перевпорядковування залежностей модулів, вказане у командному рядку (або файлі налаштувань), виводить список модулів, обробку яких буде виконано, по одному на рядок, потім завершує роботу без виконання подальших дій. </para>
<para
>Спочатку буде отримано метадані <literal
>kde-project</literal
> (втім, див. <link linkend="cmdline-pretend"
><option
>--pretend</option
></link
> або <link linkend="cmdline-no-src"
><option
>--no-src</option
></link
>). </para>
<para
>Виведені дані не повністю сумісні з тими, які використовуються скриптами, оскільки до списку модулів може бути виведено додаткові повідомлення. </para>
<para
>Параметр корисний для пришвидшення визначення того, що &kdesrc-build; вважає залежностями модуля, тобто найкорисніший для модулів <link linkend="kde-projects-module-sets"
><literal
>kde-projects</literal
></link
>. Цей параметр сумісний з параметрами <link linkend="cmdline-resume-from"
><option
>--resume-from</option
></link
>, <link linkend="cmdline-resume-after"
><option
>--resume-after</option
></link
>, <link linkend="cmdline-stop-before"
><option
>--stop-before</option
></link
>, <link linkend="cmdline-stop-after"
><option
>--stop-after</option
></link
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-list-build">
<term
><parameter
>--list-build</parameter
></term>
<listitem>
<para
>Виводить список модулів, які має бути зібрано. Порядок модулів у списку відповідатиме порядку, у якому ці модулі буде зібрано. Якщо такі дані є застосовними, у виведеному списку буде також вказано внесок, гілку і мітку, які буде вибрано для отримання даних модулів. </para>
<para
>Цей параметр є подібним до <link linkend="cmdline-print-modules"
><option
>--print-modules</option
></link
>. Докладний опис зв'язку модулів один з одним можна знайти у розділі щодо <link linkend="cmdline-dependency-tree"
><option
>--dependency-tree</option
></link
>. </para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-dependency-tree">
<term
><parameter
>--dependency-tree</parameter
></term>
<listitem>
<para
>Виводить дані щодо залежностей модулів, які має бути зібрано, з використанням рекурсивного ієрархічного формату. У виведених даних буде зазначено внесок, гілку і мітку залежностей та те, чи має бути зібрано залежність. Зауваження: виведені дані можуть бути доволі об'ємними для програм із багатьма залежностями. </para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-run">
<term
><parameter
>--run</parameter
></term>
<listitem
><para
>Цей параметр інтерпретує наступний елемент командного рядка як назву програми, яку слід запустити. &kdesrc-build; завершить читання файла налаштувань, відновить попередні налаштування середовища, а потім виконає вказану програму.</para>

<para
>Але цим параметром здебільшого не можна користуватися для запуску оболонки за допомогою середовища &kdesrc-build;, оскільки інтерактивні оболонки типово змінюють принаймні частину змінних середовища (зокрема <envar
>PATH</envar
> і <envar
>KDEDIRS</envar
>) під час процедури свого запуску. </para>

<tip
><para
>Якщо ви бажаєте переглянути всі параметри середовища, які буде використано &kdesrc-build;, ви можете скористатися командою <command
>printenv</command
>:</para>
<informalexample>
<screen
>$ <command
>kdesrc-build</command
> <parameter
>--run</parameter
> <parameter
>printenv</parameter>
KDE_SESSION_VERSION=4
SDL_AUDIODRIVER=alsa
LANGUAGE=
XCURSOR_THEME=Oxygen_Blue
LESS=-R -M --shift 5
QMAIL_CONTROLDIR=/var/qmail/control
... тощо.
</screen>
</informalexample
></tip>
</listitem>
</varlistentry>

<varlistentry id="cmdline-prefix">
<term
><parameter
>--prefix=&lt;/шлях/до/kde&gt;</parameter
></term>
<listitem
><para
>За допомогою цього параметра можна змінити каталог, куди &kde; буде встановлено з командного рядка. За використання цього параметра автоматично використовується параметр <link linkend="cmdline-reconfigure"
><parameter
>--reconfigure</parameter
></link
>, але можливо доведеться окремо скористатися параметром <link linkend="cmdline-refresh-build"
><parameter
>--refresh-build</parameter
></link
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-revision">
<term
><parameter
>--revision</parameter
></term>
<listitem
><para
>За допомогою цього параметра можна наказати &kdesrc-build; отримати певну версію кожного з модулів &subversion;, незалежно від параметрів <link linkend="conf-branch"
>branch</link
>, <link linkend="conf-tag"
>tag</link
> та <link linkend="conf-revision"
>revision</link
> вже встановлених для цих модулів.</para>

<para
>Вам не варто користуватися цим параметром, він підтримується лише з міркувань сумісності зі старішими версіями скрипту. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-build-system-only">
<term
><parameter
>--build-system-only</parameter
></term>
<listitem
><para
>За допомогою цього параметра можна наказати &kdesrc-build; перервати збирання модуля безпосередньо перед виконанням команди <command
>make</command
>. Параметр підтримується лише з міркувань сумісності зі старішими версіями скрипту, у ньому немає користі за поточної системи збирання &kde;. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-install"
><term
><parameter
>--install</parameter
></term>
<listitem
><para
>Якщо цей параметр буде єдиним, скрипт намагатиметься встановити всі модулі, вказані у <filename
>log/latest/build-status</filename
>. Якщо після <option
>--install</option
> буде вказано інші параметри командного рядка, всі ці параметри вважатимуться назвами модулів, які слід встановити (навіть якщо їх не вдалося зібрати під час попереднього запуску). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-snapshots"
><term
><parameter
>--no-snapshots</parameter
></term>
<listitem
><para
>Використання цього параметра призведе до того, що &kdesrc-build; завжди виконуватиме звичайне початкове отримання коду модуля замість використання початкового архіву зі знімком (можна використовувати лише для модулів Git зі сховища <literal
>kde-projects</literal
>). Зауважте, що цим параметром варто користуватися, лише якщо вам не вдається скористатися знімком з кодом, оскільки такі знімки зменшуються навантаження на сховища з кодом KDE. </para>

<note
><para
>Знімки модулів <emphasis
>є</emphasis
> самі версіями каталогів. Вам не варто використовувати цей параметр, його використання виправдане лише з метою усування вад.</para
></note>
</listitem>
</varlistentry>

<varlistentry id="cmdline-delete-my-patches">
<term
><parameter
>--delete-my-patches</parameter
></term>
<listitem
><para
>Цей параметр призначено для того, щоб дозволити &kdesrc-build; вилучати каталоги початкового коду, у яких можуть міститися записані користувачем дані, щоб модуль можна було повністю переотримати. Зазвичай, така можливість буде корисною лише для розробників &kde;, тобто тих, хто вносить до коду зміни локально і хоче, щоб ці зміни було згодом вилучено.</para>

<para
>У поточній версії цей параметр використовується лише для отримання коду модулів, які було перенесено з &subversion; до &git;. Зазвичай, потреби у використанні цього параметра немає. Якщо у параметрі виникне потреба, &kdesrc-build; попросить вас перезапустити програму з ним.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-delete-my-settings">
<term
><parameter
>--delete-my-settings</parameter
></term>
<listitem
><para
>Цим параметром можна скористатися для того, щоб дозволити &kdesrc-build; перезаписувати вже створені файли, у яких можуть міститися дані, записані туди користувачем.</para>

<para
>У поточній версії цей параметр використовується лише для налаштовування xsession у програмі для керування сеансами. Зазвичай, потреби у використанні цього параметра немає. Якщо у параметрі виникне потреба, &kdesrc-build; попросить вас перезапустити програму з ним.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-global-option">
<term
><parameter
>--<replaceable
>&lt;назва параметра&gt;</replaceable
>=</parameter
></term>
<listitem
><para
>Ви можете скористатися цим параметром, щоб перевизначити відповідний параметр у вашому <link linkend="configure-data"
>файлі налаштувань</link
> для кожного з модулів. Наприклад, щоб перевизначити значення параметра <link linkend="conf-log-dir"
>log-dir</link
>, вам слід вказати: <userinput
><parameter
>--log-dir=<filename class="directory"
><replaceable
>шлях/до/каталогу</replaceable
></filename
></parameter
></userinput
>. </para>

<note
><para
>Цією можливістю можна скористатися лише для тих назв параметрів, які вже розпізнаються &kdesrc-build; і ще не підтримуються відповідними параметрами командного рядка. Наприклад, параметр файла налаштувань <link linkend="conf-async"
>async</link
> має специфічні параметри командного рядка, <link linkend="cmdline-async"
>--async</link
> та <link linkend="cmdline-no-async"
>--no-async</link
>, яким надається перевага у &kdesrc-build;. </para
></note>

</listitem>
</varlistentry>

<varlistentry id="cmdline-module-option">
<term
><parameter
>---set-module-option-value=<replaceable
>&lt;назва модуля&gt;</replaceable
>,<replaceable
>&lt;назва параметра&gt;</replaceable
>,<replaceable
>&lt;значення параметра&gt;</replaceable
></parameter
></term>
<listitem
><para
>Скористайтеся цим параметром, щоб перевизначити параметр з вашого <link linkend="configure-data"
>файл налаштувань</link
> для окремого модуля. </para
></listitem>
</varlistentry>

</variablelist>

<para
>Всі інші параметри командного рядка вважатимуться назвами модулів, які слід оновити і зібрати. Будь ласка, не плутайте збирання зі встановленням. </para>

</sect1>

</chapter>

<chapter id="using-kdesrc-build">
<title
>Користування &kdesrc-build;</title>

<sect1 id="using-kdesrc-build-preface">
<title
>Передмова</title>

<para
>Зазвичай, використання &kdesrc-build; після виконання кроків розділу <xref linkend="getting-started"/> зводиться до виконання такої команди у терміналі:</para>

<screen
><prompt
>&percnt;</prompt
> <command
><userinput
>kdesrc-build</userinput
></command
>
</screen>

<para
>Після цього &kdesrc-build; отримає коди програм &kde;, спробує налаштувати (configure) і зібрати їх, а потім встановити програми.</para>

<para
>Далі ми поговоримо про те, як &kdesrc-build; робить це, а також про те, які дії ви можете виконати за допомогою цього інструменту.</para>

</sect1>

<sect1 id="basic-features">
<title
>Основні можливості &kdesrc-build;</title>

<sect2 id="using-qt">
<title
>Підтримка qt</title>
<para
>&kdesrc-build; підтримує зручне для користувачів збирання набору інструментів &Qt;, який використовується у програмному забезпеченні &kde;. Підтримку забезпечує обробка особливого модуля з назвою qt.</para>

<note
><para
>&Qt; розробляється у окремому сховищі, не пов’язаному з програмним забезпеченням &kde;. Це сховище розташоване за адресою <ulink url="http://code.qt.io/cgit/qt/"
>http://code.qt.io/cgit/qt/</ulink
>.</para
></note>

<para
>Щоб зібрати &Qt;, вам слід переконатися, що параметр <link linkend="conf-qtdir"
>qtdir</link
> вказує на каталог, куди б ви бажали встановити &Qt;, як це описано у розділі <xref linkend="configure-data"/>.</para>

<para
>Після цього вам слід переконатися, що модуль qt додано до вашого файла <filename
>.kdesrc-buildrc</filename
> перед будь-якими іншими модулями у цьому файлі. Якщо ви користуєтеся зразком файла налаштувань, ви можете просто зняти позначку коментаря з запису модуля qt.</para>

<para
>Тепер вам слід перевірити, чи встановлено належним чином параметри <link linkend="conf-repository"
>repository</link
> і <link linkend="conf-branch"
>branch</link
>:</para>

<orderedlist>
<listitem
><para
>Перший варіант полягає у збиранні &Qt; на основі коду з дзеркала зі сховищ коду &kde; (ніяких змін до коду не внесено, це просто клон офіційного сховища). Ми рекомендуємо цей варіант через можливі проблеми з клонуванням модуля &Qt; з офіційного сховища повністю.</para>

<para
>Ви можете встановити параметр <option
>repository</option
> для модуля qt у значення <userinput
>kde:qt</userinput
>, щоб скористатися цим параметром.</para>
</listitem>

<listitem
><para
>Іншим варіантом буде збирання стандартного &Qt;. У такому разі слід встановити значення параметра <option
>repository</option
> рівним <userinput
>git://gitorious.org/qt/qt.git</userinput
>. Зауважте, що у вас можуть виникнути проблеми з початковим клонуванням &Qt; зі цього сховища.</para
></listitem>
</orderedlist>

<para
>У обох випадках параметр branch слід встановити у значення <userinput
>master</userinput
> (якщо ви не маєте наміру спеціально зібрати якусь іншу гілку).</para>

</sect2>

<sect2 id="kdesrc-build-std-flags">
<title
>Стандартні прапорці, які додаються &kdesrc-build;</title>
<para
>Варто зауважити, що цей розділ не стосується модулів, для яких налаштовано нетиповий набір інструментів, наприклад, за допомогою <link linkend="conf-cmake-toolchain"
>cmake-toolchain</link
>.</para>

<para
>Щоб зекономити вам час, &kdesrc-build; додасть деякі з стандартних шляхів до вашого середовища: </para>

<itemizedlist>
<listitem
><para
>Шлях до бібліотек &kde; і &Qt; автоматично додається до змінної середовища <envar
>LD_LIBRARY_PATH</envar
>. Отже, вам не потрібно змінювати &libpath;, щоб включити відповідні каталоги. </para
></listitem>

<listitem
><para
>Шлях до програм підтримки розробки &kde; і &Qt; буде автоматично додано до змінної середовища <envar
>PATH</envar
>. Отже, вам не потрібно змінювати &binpath;, щоб включити відповідна каталоги. </para
></listitem>

<listitem
><para
>Шлях до програми <application
>pkg-config</application
> &kde; буде автоматично додано до <envar
>PKG_CONFIG_PATH</envar
>. Отже, вам не потрібно використовувати &set-env; для додавання відповідних каталогів. </para
></listitem>

<listitem
><para
>Це значення &kdedir; буде автоматично передано змінній середовища <envar
>KDEDIR</envar
> на час збирання. (Змінна <envar
>KDEDIRS</envar
> залишатиметься незмінною.) </para
></listitem>

<listitem
><para
>Це значення для &qtdir; буде автоматично передано змінній середовища <envar
>QTDIR</envar
> на час збирання. </para
></listitem>

</itemizedlist>

</sect2>

<sect2 id="build-priority">
<title
>Зміна пріоритету збирання &kdesrc-build;</title>
<para
>У сучасних операційних системах ви можете запускати програми з різним рівнем пріоритетності, це зокрема можна робити у &Linux; і &BSD;. Система розподілятиме час процесора між різними програмами відповідно до того, наскільки пріоритетними є ці програми. </para>

<para
>Зазвичай, &kdesrc-build; надає собі низький пріоритет так, щоб решта програм вашої системи не відчули змін і могли виконуватися у звичному режимі. Таким чином, &kdesrc-build; використовуватиме лише залишковий час процесора. </para>

<para
>Але &kdesrc-build; підтримуватиме достатньо великий рівень пріоритету, а отже скрипт виконуватиметься з вищим пріоритетом, ніж пакетні процеси і програми з надання процесорного часу, на зразок <ulink url="http://setiathome.ssl.berkeley.edu/"
>Seti@Home</ulink
>. </para>

<para
>Ви можете змінити рівень пріоритетності &kdesrc-build; на вищий (або нижчий), — для цього вам достатньо змінити значення параметр &niceness; у <link linkend="configure-data"
>файлі налаштувань</link
>. Значення параметра &niceness; керує тим, наскільки <quote
>поблажливим</quote
> &kdesrc-build; буде до інших програм. Іншими словами, встановлення більшого значення параметра &niceness; надасть &kdesrc-build; менший пріоритет. Отже, щоб надати &kdesrc-build; вищий пріоритет, зменшіть значення &niceness; (і навпаки). Значеннями параметра &niceness; можуть бути цілі числа від 0 (ніяких компромісів, — найвищий пріоритет) до 20 (найкомпромісніше виконання, — найнижчий пріоритет).і числа від 0 (ніяких компромісів, — найвищий пріоритет) до 20 (найкомпромісніше виконання, — найнижчий пріоритет).</para>

<para
>Крім того, ви можете тимчасово змінити пріоритет &kdesrc-build; за допомогою <link linkend="cmdline"
>параметра командного рядка</link
> &cmd-nice;. Значення цього параметра таке саме, як і значення &niceness;.</para>

<note
><para
>Деякі з програм, які виконуються від імені адміністративного користувача, можна виконувати з від’ємним рівнем nice, такі програми матимуть ще вищий рівень пріоритетності. Встановлювати від’ємного (або навіть нульового) значення &niceness; для &kdesrc-build; не варто, подібні значення не зможуть значно пришвидшити роботу програми, але значно сповільнять виконання інших завдань системи, які будуть вам потрібні. </para
></note>

<informalexample>
<para
>Щоб запустити &kdesrc-build; з пріоритетом nice 15 (пріоритетом, нижчим за звичайний), виконайте команду:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--nice=<replaceable
>15</replaceable
></option
></userinput
>
</screen>

<para
>Крім того, ви можете змінити <link linkend="configure-data"
>файл налаштувань</link
>, щоб зробити зміни сталими:</para>

<screen
>&niceness; <replaceable
>15</replaceable
>
</screen>
</informalexample>

<tip>
<para
>За допомогою параметра <link linkend="conf-niceness"
>niceness</link
> можна керувати лише використанням процесорів комп’ютера. Іншим важливим фактором, який впливає на швидкодію системи, є степінь використання програмою каналів вводу і виводу даних (<acronym
>I/O</acronym
>). З метою керування використанням <acronym
>I/O</acronym
> програмою у сучасних операційних системах &Linux; передбачено підтримку подібного до nice інструменту з назвою <application
>ionice</application
>. &kdesrc-build; підтримує роботу з <application
>ionice</application
> (але лише у режимі «увімкнути-вимкнути») за допомогою параметра <link linkend="conf-use-idle-io-priority"
>use-idle-io-priority</link
>, починаючи з версії &kdesrc-build; 1.12. </para>
</tip>

</sect2>

<sect2 id="root-installation">
<title
>Встановлення від імені суперкористувача</title>
<para
>Ймовірно, у вас може виникнути потреба у запуску &kdesrc-build; встановлення з правами доступу адміністративного користувача. Така потреба може виникнути під час загальносистемного встановлення, яке, втім, не рекомендується авторами програми. Ця можливість також корисна і під час рекомендованого збирання для окремого користувача &kde;. Причиною цього є те, що деякі у деяких модулях (особливо у модулі kdebase) програми мають встановлюватися з підвищеними правами доступу до ресурсів системи. Ці програми не зможуть отримати потрібних дозволів, якщо ви не встановите їх з підвищеними правами. </para>

<para
>Ви можете просто запустити &kdesrc-build; від імені адміністративного користувача, але ми не рекомендуємо вам цього робити, оскільки скрипт не було достатньо випробувано запуском у такому режимі. Хоча запуск програми у такий спосіб і не повинен призвести до шкідливих наслідків, вам краще за можливості уникати запуску скрипту від імені адміністративного користувача.</para>

<para
>Для надання скрипту додаткових прав доступу у &kdesrc-build; передбачено параметр &make-install-prefix;. Ви можете скористатися цим параметром для того, щоб вказати команду, яка використовується для встановлення від імені іншого користувача. Рекомендуємо вам скористатися для цього програмою &sudo;, ця програма надає змогу виконувати команди від імені адміністративного користувача. </para>

<informalexample>
<para
>Наприклад, щоб встановити всі модулі за допомогою &sudo;, ви можете вказати щось таке:</para>

<screen
>global
  &make-install-prefix; <replaceable
>sudo</replaceable>
  # Інші параметри
end global
</screen>

<para
>Для того, щоб скористатися &make-install-prefix; для окремого модуля, вкажіть у файлі налаштувань рядки на зразок: </para>

<screen
>module <replaceable
>назва-svn-модуля</replaceable>
  &make-install-prefix; <replaceable
>sudo</replaceable>
end module
</screen>
</informalexample>

</sect2>

<sect2 id="build-progress">
<title
>Показ поступу збирання модуля</title>
<para
>Ця можливість завжди доступна, за можливості скрипт автоматично вмикає її. Вона надає вам змогу слідкувати за поступом збирання модуля, а отже ви знатимете скільки часу залишилося до завершення збирання модуля. </para>

</sect2>

</sect1>

<sect1 id="advanced-features">
<title
>Додаткові можливості</title>

<sect2 id="partial-builds">
<title
>Часткове збирання модуля</title>
<para
>Існує також можливість збирання окремих фрагментів окремого модуля &kde;. Наприклад, ви можете зібрати лише одну з програм модуля. У &kdesrc-build; передбачено засоби для полегшення такого збирання. Існує декілька шляхів виконати подібне збирання. </para>

<sect3 id="not-compiling">
<title
>Вилучення каталогів з процесу збирання</title>
<para
>Ви можете наказати скрипту отримати усе сховище, але наказати системі збирання не виконувати збирання у деяких каталогах. Щоб цим можна було скористатися, у модулі має бути використано &cmake;, система збирання модуля має уможливлювати виключення певного каталогу. </para>

<para
>Кероване параметром &do-not-compile;.</para>

<important
><para
>Для того, щоб зміни, внесені цим параметром, набули чинності, вам слід запустити скрипт налаштування системи збирання відповідного модуля ще раз. Це можна зробити за допомогою команди <userinput
><command
>kdesrc-build</command
> <option
>&cmd-reconfigure;</option
> <option
><replaceable
>назва_модуля</replaceable
></option
></userinput
>. </para
></important>

<informalexample>
<para
>Щоб вилучити каталог <filename class="directory"
>python</filename
> з процесу збирання kdebindings, додайте такі рядки:</para>

<screen
>module <replaceable
>kdebindings</replaceable>
  &do-not-compile; <replaceable
>python</replaceable>
end module
</screen>

</informalexample>

<note
><para
>Працездатність цієї функції залежить від виконання деяких стандартів, які використовуються у більшості модулів &kde;. Саме тому вона може не працювати для деяких програм.</para
></note>

</sect3>

</sect2>

<sect2 id="using-branches">
<title
>Підтримка версій і випусків у &kdesrc-build;</title>

<sect3 id="branches-and-tags">
<title
>Що таке версія (branch) і випуск (tag)?</title>

<para
>&subversion; підтримує керування журналом змін коду &kde;. &kde; використовує цю підтримку для створення версій, які розробляються, і створення сховищ випусків для зберігання коду випущених версій середовища. </para>

<para
>Наприклад, розробники &kmail; можуть працювати над новою можливістю у іншій версії, щоб уникнути можливої непрацездатності версії, над якою працює більшість інших розробників. У цій версії відбувається розробка, хоча розробка також відбувається і у основному сховищі версій (яке називається /trunk). </para>

<para
>З іншого боку, випуск є моментальним знімком сховища коду у певний момент часу. Таке сховище використовується командою адміністрування &kde; для позначення версії коду, придатної для випуску, а також надає розробниками можливість доопрацьовувати їх код. </para>

<para
>У &subversion; немає ніяких відмінностей між версіями, випусками і експериментальною версією (trunk) коду. Подібне відокремлення є лише наслідком певної домовленості між розробниками. Це ускладнює належну підтримку версій і випусків у &kdesrc-build;. Все ж деякі речі можна робити і за допомогою скрипту. </para>

</sect3>

<sect3 id="branch-support">
<title
>Як користуватися версіями і випусками?</title>

<para
>Підтримка версій і випусків забезпечується набором параметрів, які призначено для виконання дій у діапазоні від загального запису на певну версію, до визначення адреси &url; для отримання досвідченими користувачами. </para>

<para
>Найпростішим способом є використання параметрів &branch; і &tag;. Ви можете просто скористатися параметром з аргументом-назвою бажаної версії або випуску модуля, — &kdesrc-build; спробує визначити належну адресу у сховищі &kde; для отримання коду. Для більшості модулів &kde; таких спосіб працює дуже добре.</para>

<informalexample>
<para
>Щоб отримати kdelibs зі складу &kde; 4.6 (відповідне сховище відоме як версія 4.6): </para>

<screen
>module kdelibs
  branch <replaceable
>4.6</replaceable>
  # інші параметри...
end module
</screen>

<para
>Або, щоб отримати kdemultimedia у вигляді, у якому цей модуль було випущено у &kde; 4.6.1:</para>

<screen
>module kdemultimedia
  tag <replaceable
>4.6.1</replaceable>
  # інші параметри...
end module
</screen>

</informalexample>

<tip
><para
>Ви можете вказати загальне значення версії (branch). Але, якщо ви це зробите, не забудьте вказати іншу версію для модулів, які не використовують загальної нумерації версій! </para
></tip>
</sect3>

<sect3 id="advanced-branches">
<title
>Додаткові параметри підтримки версій</title>

<para
>&kdesrc-build; підтримує два параметри, призначені для обробки ситуацій, коли параметри &branch; і &tag; неправильно визначають шлях до сховища: &module-base-path; і &override-url;. </para>

<itemizedlist>
<listitem
><para
>Параметр &module-base-path; використовується для того, щоб допомогти &kdesrc-build; заповнити відсутню частину шляху до модуля. У сховищі &kde; всіх шляхи виглядають так: <filename class="directory"
>Корінь_svn/базовий_шлях_до_модуля/<replaceable
>назва модуля</replaceable
></filename
>. Зазвичай, &kdesrc-build; може визначити відповідну середню частину самостійно. Якщо програма не може цього зробити, ви можете скористатися &module-base-path;, ось так: </para>

<informalexample>
<screen
>module kdesupport
    # kdesupport підтримує різноманітні мітки, які спрощують
    # впорядкування програмного забезпечення для певного випуску Платформи KDE.
    module-base-path tags/kdesupport-for-4.5
end module
</screen>

<para
>Таким чином ви накажете &kdesrc-build; отримати kdesupport з (у нашому прикладі), <filename
>svn://anonsvn.kde.org/home/kde/<replaceable
>tags/kdesupport-for-4.5</replaceable
></filename
>. </para>
</informalexample>
<tip
><para
>У попередніх випусках &kdesrc-build; обробка &module-base-path; виконувалася у дещо інший спосіб. Якщо у вас виникають труднощі з використанням застарілого визначення module-base-path, ймовірно, вам слід перевірити, чи є адреса саме тією, яка насправді потрібна &kdesrc-build;, за допомогою параметра <link linkend="cmdline-pretend"
>--pretend</link
>. </para
></tip>
</listitem>

<listitem
><para
>З іншого боку, параметр &override-url; вимагає від вас вказати точний шлях для отримання. Але він надає вам змогу взяти шляхи з попередніх версій &kdesrc-build;, звідки вже не можна отримати дані. У поточній версії параметра &module-base-path; має бути достатньо для будь-якої адреси Subversion кодів &kde;. </para>

<important
><para
>&kdesrc-build; не змінюватиме і не виправлятиме значення, яке ви вкажете для &override-url;, отже, якщо ви зміните ваш параметр &svn-server;, може виникнути потреба і у зміні цього параметра. </para
></important>

</listitem>
</itemizedlist>

</sect3>

</sect2>

<sect2 id="stopping-the-build-early">
<title
>Передчасне зупинення збирання</title>

<sect3 id="the-build-continues">
<title
>Якщо станеться помилка, збирання, зазвичай, продовжується</title>

<para
>Зазвичай, &kdesrc-build; оновлюватиме, збиратиме і встановлюватиме усі модулі у вказаному списку модулів для збирання, навіть якщо якийсь модуль не вдасться зібрати. Так зроблено для зручності: це уможливлює оновлення пакунків програмного забезпечення, навіть якщо у якомусь зі сховищ є помилка, якої припустилися при розробці і яка призводить до помилок під час збирання. </para>

<para
>Втім, може виникнути потреба у зупинці дій, які виконує &kdesrc-build;, щойно не вдасться зібрати і встановити якийсь модуль. Це може заощадити час, який могло б бути витрачено на спроби зібрати решту модулів у списку збирання, які також не можна буде успішно зібрати, особливо, якщо ви ще не збирали успішно модулі у списку. </para>

</sect3>

<sect3 id="stop-on-failure-stops-early">
<title
>Передчасне зупинення за допомогою --stop-on-failure</title>

<para
>Основним способом досягнення мети є використання параметра командного рядка <link linkend="cmdline-stop-on-failure"
>--stop-on-failure</link
> при запуску &kdesrc-build;. </para>

<para
>Цей параметр також можна встановити у <link linkend="conf-stop-on-failure"
>файлі налаштувань</link
>, щоб зробити його звичайним режимом роботи. </para>

<para
>Також можна повідомити запущеному екземпляру &kdesrc-build; про те, що слід зупинити збирання <emphasis
>після</emphasis
> завершення збирання поточного модуля, над яким працює програма. Це не те саме, що перервати роботу &kdesrc-build; за допомогою команди, подібної до <keycombo action="simul"
>&Ctrl;<keycap
>C</keycap
></keycombo
>, яка перериває роботу &kdesrc-build; негайно із втратою поступу збирання поточного модуля. </para>

<important
><para
>Переривання роботи &kdesrc-build; під час встановлення, якщо увімкнено параметр <link linkend="conf-use-clean-install"
>use-clean-install</link
>, означатиме, що модуль, збирання якого було перервано, буде недоступним, аж доки &kdesrc-build; не зможе його успішно зібрати!</para>

<para
>Якщо вам потрібно перервати роботу &kdesrc-build; без уможливлення штатного завершення роботи у цій ситуації, принаймні намагайтеся уникнути цього під час встановлення модуля за допомогою &kdesrc-build;.</para>
</important>

</sect3>

<sect3 id="stopping-early-without-stop-on-failure">
<title
>Передчасне зупинення &kdesrc-build; без --stop-on-failure</title>

<para
>Якщо ми вже згадували вище, можна наказати &kdesrc-build; передчасно і штатно завершити роботу після завершення збирання якогось модуля, над яким працюватиме програма. Щоб зробити це, вам слід надіслати &kdesrc-build; сигнал POSIX <literal
>HUP</literal
>. </para>

<para
>Зробити це можна за допомогою команди, подібної до <command
>pkill</command
> (у системах &Linux;), ось так:</para>

<programlisting
><prompt
>$ </prompt
><userinput
><command
>pkill <option
>-HUP</option
> kdesrc-build</command
></userinput
>
</programlisting>

<para
>Якщо завдання виконано успішно, ви побачите у виведених &kdesrc-build; даних повідомлення, подібне до такого:</para>

<programlisting
>[ build ] recv SIGHUP, will end after this module
</programlisting>

<note>
<para
>&kdesrc-build; може виводити це повідомлення декілька разів, залежно від кількості окремих активних процесів &kdesrc-build;. Така поведінка є звичною і не вказує на помилку.</para>
</note>

<para
>Щойно &kdesrc-build; отримає сигнал, програма припинить обробку завдання після збирання і встановлення поточного модуля. Якщо під час отримання сигналу &kdesrc-build; перебуватиме на етапі оновлення початкового коду, при отримання сигналу &kdesrc-build; зупинить обробку, щойно буде завершено отримання початкового коду. Щойно процеси оновлення та збирання передчасно завершать роботу, &kdesrc-build; виведе дані щодо часткових результатів і завершить роботу. </para>

</sect3>

</sect2>

<sect2 id="building-successfully">
<title
>Способи, у які &kdesrc-build; намагається забезпечити успішне збирання</title>

<sect3 id="automatic-rebuilds">
<title
>Автоматичне перезбирання</title>

<para
>У попередніх версіях &kdesrc-build; було передбачено можливості для автоматичного повторення спроби збирання модуля після невдалої спроби (оскільки іноді така повторна спроба буває успішною, причиною можуть бути вади у системі збирання). Завдяки переходу на &cmake;, система збирання вже не страждає на подібні вади, отже &kdesrc-build; не намагатимуться зібрати модуль повторно. Але можливі випадки, коли &kdesrc-build; виконає повторне збирання автоматично:</para>

<itemizedlist>

<listitem
><para
>Якщо ви зміните <link linkend="conf-configure-flags"
>configure-flags</link
> або <link linkend="conf-cmake-options"
>cmake-options</link
> для певного модуля, &kdesrc-build; виявить ці зміни і повторно запустить скрипт configure або cmake для відповідного модуля.</para
></listitem>

<listitem
><para
>Якщо системи збирання не існує (навіть якщо &kdesrc-build; не вилучав її), &kdesrc-build; автоматично створить її повторно. Це буде корисним, якщо ви виконуєте повне повторне збирання (<link linkend="cmdline-refresh-build"
>--refresh-build</link
>) для певного модуля без виконання повторного збирання для інших модулів.</para
></listitem>

</itemizedlist>

</sect3>

<sect3 id="manual-rebuilds">
<title
>Перезбирання модуля вручну</title>
<para
>Якщо ви змінили параметри певного модуля або код модуля змінився таким чином, що &kdesrc-build; не може його розпізнати, у вас може виникнути потреба у повторному збиранні цього модуля вручну.</para>

<para
>Ви можете зробити це простою командою <userinput
><command
>kdesrc-build</command
> <option
>--refresh-build</option
> <option
><replaceable
>назва_модуля</replaceable
></option
></userinput
>. </para>

<para
>Якщо замість цього ви бажаєте, щоб скрипт &kdesrc-build; автоматично перезібрав модуль під час наступного звичайного оновлення збирання, ви можете створити спеціальний файл. Кожен з модулів має власний каталог для збирання. Якщо ви створите у цьому каталозі для збирання файл з назвою <filename
>.refresh-me</filename
>, &kdesrc-build; повторно збере модуль під час наступного сеансу збирання, навіть якщо скрипт виконує швидке нарощувальне збирання.</para>

<tip>
<para
>Типово, каталогом збирання буде <filename class="directory"
>~/kdesrc/build/<replaceable
>назва модуля</replaceable
>/</filename
>. Якщо ви зміните значення параметра &build-dir;, буде замість <filename class="directory"
>~/kdesrc/build</filename
> буде використано значення цього параметра.</para>
</tip>

<informalexample>
<para
>Повторне збирання за допомогою <filename
>.refresh-me</filename
> модуля <replaceable
>kdelibs</replaceable
>:</para>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>touch</command
> <filename
>~/kdesrc/build/<replaceable
>kdelibs</replaceable
>.refresh-me</filename
></userinput>
<prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
></userinput
>
</screen>
</informalexample>
</sect3>

</sect2>

<sect2 id="changing-environment">
<title
>Зміна параметрів змінних середовища</title>
<para
>Зазвичай &kdesrc-build; використовує поточні параметри середовища для запуску програм, призначених для виконання оновлень та збирання. Це корисно, якщо ви запускаєте &kdesrc-build; з командного рядка.</para>

<para
>Крім того, у вас може виникнути потреба у зміні тих змінних середовища, для яких у &kdesrc-build; не передбачено параметрів. (Наприклад, щоб визначити будь-які змінні середовища під час запуску &kdesrc-build; за таймером, наприклад &cron;.) Це можна зробити за допомогою параметра &set-env;.</para>

<para
>На відміну від інших параметрів, цей параметр можна визначати декілька разів, він приймає два записи, відокремлені пробілом. Першим з записів є назва змінної середовища, яку слід встановити, решта рядка вважається значенням цієї змінної.</para>

<informalexample>
<para
>Встановити значення змінної <userinput
><envar
>DISTRO</envar
>=<replaceable
>BSD</replaceable
></userinput
> для всіх модулів:</para>
<screen
>global
  set-env <replaceable
>DISTRO</replaceable
> <replaceable
>BSD</replaceable>
end global
</screen>
</informalexample>

</sect2>

<sect2 id="resuming">
<title
>Поновлення збирання</title>

<sect3 id="resuming-failed">
<title
>Поновлення збирання, яке завершилося помилкою або було скасоване</title>

<para
>Ви можете наказати &kdesrc-build; почати збирання з модуля, відмінного від того, з якого скрипт зазвичай розпочинає збирання. Такі налаштування можуть стати у пригоді, якщо спроба збирання певного набору модулів завершилася невдало або якщо ви перервали попередню спробу збирання. Вказати модуль можна за допомогою параметрів &cmd-resume-from; та &cmd-resume-after;.</para>

<note
><para
>У старіших версіях &kdesrc-build; під час поновлення збирання оновлення кодів програм не відбувалося. Тепер програма типово цього не робить, але ви можете передати їй параметр командного рядка <option
>--no-src</option
>, щоб уникнути оновлення кодів програм.</para
></note>

<informalexample>
<para
>Відновлення збирання з модуля kdebase:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--resume-from=<replaceable
>kdebase</replaceable
></option
></userinput
>
</screen>
</informalexample>

<informalexample>
<para
>Відновлення збирання, починаючи з місця після kdebase (якщо ви вручну виправили ваду і встановили модуль власноруч):</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--resume-after=<replaceable
>kdebase</replaceable
></option
></userinput
>
</screen>
</informalexample>

<para
>Якщо остання спроба збирання за допомогою &kdesrc-build; завершилася критичною помилкою, ви також можете скористатися параметром <link linkend="cmdline-resume"
>--resume</link
>. Використання цього параметра надасть змогу відновити останній сеанс збирання з модуля, під час збирання якого сталася критична помилка. Крім того, буде пропущено кроки оновлення коду та метаданих модулів (якщо ви хочете, щоб програма виконала ці кроки, краще скористатися параметром <link linkend="cmdline-resume-from"
>--resume-from</link
>).</para>


</sect3>

<sect3 id="ignoring-modules">
<title
>Ігнорування модулів під час збирання</title>

<para
>Подібно до способу, у який ви можете <link linkend="resuming-failed"
>поновити збирання, починаючи з певного модуля</link
>, ви можете і оновити зібрати компоненти у звичайному режимі, але без певного набору модулів.</para>

<para
>Виконати це завдання можна за допомогою параметра &cmd-ignore-modules;. За допомогою цього параметра ви можете повідомити скрипту &kdesrc-build; про те, що слід ігнорувати всі передані як аргументи у командному рядку модулі під час виконання оновлення і збирання.</para>

<informalexample>
<para
>Ігнорування extragear/multimedia і kdereview під час повноцінного запуску:</para>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--ignore-modules</option
> <replaceable
>extragear/multimedia kdereview</replaceable
></userinput
>
</screen>
</informalexample>

</sect3>
</sect2>

<sect2 id="changing-env-from-cmd-line">
<title
>Зміна параметрів за допомогою командного рядка</title>

<sect3 id="changing-global-opts">
<title
>Зміна загальних параметрів</title>
<para
>Ви можете змінити набір параметрів з <link linkend="configure-data"
>файла налаштувань</link
> безпосередньо з командного рядка. Ця зміна перевизначить параметри файла налаштувань, але лише тимчасово. Ці параметри працюватимуть лише протягом виконання вказаної у командному рядку команди.</para>

<para
>&kdesrc-build; надає вам змогу змінити параметри з назвою <replaceable
>назва-параметра</replaceable
> передаванням аргументу у командний рядок у формі <userinput
><option
>--<replaceable
>назва-параметра</replaceable
>=значення</option
></userinput
>. &kdesrc-build; визначає чи відомий скрипту параметр і намагається знайти назву у власному списку назв параметр. Якщо програмі не вдається знайти назву, вона попередить вас про це, у іншому випадку скрипт запам’ятає встановлене вами значення і перевизначає значення, встановлення у файлі налаштувань.</para>

<informalexample>
<para
>Встановлення параметра &source-dir; у значення <filename
>/dev/null</filename
> для перевірки:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--pretend</option
> <option
>--<replaceable
>source-dir</replaceable
>=<replaceable
>/dev/null</replaceable
></option
></userinput
>
</screen>

</informalexample>

</sect3>

<sect3 id="changing-module-opts">
<title
>Зміна параметрів для модулів</title>
<para
>Крім того, можна змінити параметри, вказані для окремого модуля. Синтаксис команди, подібний до синтаксису попередньої команди: --<replaceable
>назва_модуля</replaceable
>,<replaceable
>назва-параметра</replaceable
>=<replaceable
>значення</replaceable
>. </para>

<para
>Ця зміна перевизначає параметр відповідного модуля у <link linkend="configure-data"
>файлі налаштувань</link
> і діє лише протягом виконання рядка команди.</para>

<informalexample>
<para
>Використання іншого каталогу збирання для модуля kdeedu:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--<replaceable
>kdeedu</replaceable
>,<replaceable
>build-dir</replaceable
>=<replaceable
>temp-build</replaceable
></option
></userinput
>
</screen>

</informalexample>

</sect3>

</sect2>

</sect1>

<sect1 id="developer-features">
<title
>Можливості, призначені для розробників &kde;</title>

<sect2 id="ssh-agent-reminder">
<title
>Перевірки агента &ssh;</title>
<para
>&kdesrc-build; може забезпечити вимикання інструмента агента &ssh;, якщо розробник &kde;, який використовується &ssh; для доступу до сховища коду &kde;, забуде його вимкнути. Таким чином, &kdesrc-build; може нескінченно очікувати на введення розробником пароля &ssh;, отже, типово, &kdesrc-build; перевіряє, чи запущено агент перед виконанням оновлення коду. </para>

<note
><para
>Ці дії виконуються лише для розробників &kde;, які використовують &ssh;. Причиною цього є те, що для типового анонімного доступу для отримання пароль не потрібен. &subversion; оброблятиме паролі для іншого можливого способу доступу для розробників &kde;, https. </para
></note>

<para
>Ймовірно, ви захочете вимкнути перевірку агента &ssh; у випадку, коли &kdesrc-build; помилково визначає присутність агента. Щоб вимкнути перевірку агента, встановіть для параметра <option
>disable-agent-check</option
> значення <userinput
>true</userinput
>.</para>

<informalexample>
<para
>Вимикання перевірки &ssh;-агента:</para>
<screen
>global
  disable-agent-check true
end global
</screen>
</informalexample>

</sect2>

</sect1>

<sect1 id="other-features">
<title
>Інші можливості &kdesrc-build;</title>

<sect2 id="changing-verbosity">
<title
>Зміна рівня докладності виводу &kdesrc-build;</title>
<para
>У &kdesrc-build; передбачено декілька параметрів для керування об’ємом даних, які виводить скрипт. У будь-якому випадку, помилки завжди виводяться.</para>

<itemizedlist>
<listitem
><para
>Запуск &kdesrc-build; з параметром <option
>--quiet</option
> (скорочена форма <option
>-q</option
>) виводить мінімум даних. Буде показано лише важливі повідомлення, попередження або повідомлення про помилки. Відомості щодо поступу збирання, у разі їх наявності, також буде показано.</para
></listitem>

<listitem
><para
>За використання параметра <option
>--really-quiet</option
> (не має скороченої форми) &kdesrc-build; під час виконання покаже лише важливі повідомлення і повідомлення про помилки.</para
></listitem>

<listitem
><para
>Використання параметра <option
>--verbose</option
> (скорочена форма <option
>-v</option
>) призведе до дуже детального виводу даних &kdesrc-build;.</para
></listitem>

<listitem
><para
>Параметр <option
>--debug</option
> призначено лише для усування вад, за його використання &kdesrc-build; працюватиме так, наче увімкнено <option
>--verbose</option
>, команди виводитимуть дані до термінала, крім того, буде показано відомості, призначені для усування вад для багатьох функціональних можливостей.</para
></listitem>
</itemizedlist>

</sect2>

<sect2 id="kdesrc-build-color">
<title
>Виведення у кольорі</title>
<para
>Якщо ви запустите &kdesrc-build; з &konsole; або іншої програми емуляції термінала, скрипт виводитиме розфарбований текст.</para>

<para
>Ви можете вимкнути це розфарбування за допомогою параметра <option
>--no-color</option
>, доданого до командного рядка або встановленням для параметра &colorful-output; у <link linkend="configure-data"
>файлі налаштувань</link
> у значення <userinput
>false</userinput
>. </para>

<informalexample>
<para
>Вимикання виведення у кольорі у файлі налаштувань:</para>
<screen
>global
  colorful-output false
end global
</screen>
</informalexample>

</sect2>

<sect2 id="deleting-build-dir">
<title
>Вилучення непотрібних каталогів після збирання</title>
<para
>У вас мало місця на диску, але велике бажання працювати у найсвіжішій версії &kde;? &kdesrc-build; може допомогти вам зекономити на просторі на диску під час збирання &kde; з &subversion;.</para>

<note
><para
>Пам’ятайте, що для збирання &kde; потрібно досить багато місця. Ось декілька з компонентів, які використовують багато місця на диску, коли ви користуєтеся &kdesrc-build;:</para
></note>

<orderedlist>
<listitem
><para
>На самі отримані коди може бути витрачено досить багато місця на диску. На збірку типових модулів буде витрачено близько 1,6 гігабайтів місця на диску. Ви можете зменшити це значення, якщо збиратимете лише потрібні вам модулі. &kdesrc-build; не вилучатиме вихідні коди з диску, навіть якщо ви вилучите відповідний запис з <link linkend="configure-data"
>файла налаштувань</link
>, отже не забувайте вилучати непотрібні отримані коди з каталогу початкових кодів. Пам’ятайте про те, що файли кодів отримуються з інтернету, — вам <emphasis
>не слід</emphasis
> вилучати їх, якщо ви ними користуєтеся, принаймні, доки ви не припините користуватися &kdesrc-build;.</para>

<para
>Крім того, якщо у вашій системі вже встановлено &Qt; з вашого дистрибутива (і вас все у ньому влаштовує), ймовірно, вам не потрібно встановлювати модуль qt. Таким чином ви можете зекономити близько 200 мегабайтів місця на диску.</para>

<para
>Ще одна річ, пов’язана зі способом, у який працює &subversion;: для кожного зі отриманих файлів зі сховища зберігається дві копії. &kdesrc-build; не може одразу після отримання намагатися мінімізувати розмір коду, — код ще просто не використано. </para>
</listitem>

<listitem>
<para
>&kdesrc-build; створює окремий каталог для збирання початкового коду. Іноді скрипт &kdesrc-build; має скопіювати каталог кодів для того, щоб створити фіктивний каталог збирання. За такої потреби скрипт створює для економії місця символічні посилання, отже значної витрати місця на диску не буде. Каталог збирання, зазвичай, матиме набагато більші розміри за каталог початкових кодів модуля. Наприклад, каталог збирання kdebase має розміри близько 1050 мегабайтів, а каталог початкових кодів kdebase — лише близько 550 мегабайтів.</para>

<para
>На щастя, після успішного збирання і встановлення модуля потреба у каталозі збирання зникає. &kdesrc-build; може автоматично вилучати каталог збирання після встановлення модуля, докладніше про це можна дізнатися з наведених нижче прикладів. Зауважте, що виконання цього кроку зробить неможливим &kdesrc-build; нарощувальне збирання, яке могло б заощадити ваш час, якщо ви пізніше забажаєте знову зібрати модуль.</para>
</listitem>

<listitem
><para
>Нарешті, для встановлення самого &kde; поза межами каталогу збирання також потрібне місце на диску. Розмір цього місця, зазвичай, значно менший за розмір каталогу збирання, все ж точне співвідношення важко вказати. </para
></listitem>
</orderedlist>

<para
>Як зменшити вимоги щодо місця на диску для &kde;? Одним зі способів зменшення цього місця є використання належних параметрів компіляції, вони нададуть вам змогу зменшити розмір програм за рахунок зменшення швидкості їх виконання. Іншим, набагато ефективнішим, способом є вилучення відомостей, призначених для усування вад, з зібраного вами &kde;. </para>

<warning
><para
>Вам слід добре все зважити, перш ніж вилучати відомості, призначені для усування вад. Робота з експериментальним програмним забезпеченням означає, що ви користуєтеся програмою, яка потенційно має більш ймовірність відмов, ніж програма зі стабільного випуску. Якщо ви користуєтеся програмами без відомостей, призначених для усування вад, вам буде дуже важко створити гарний звіт про помилку, за яким легко буде усунути ваду. Ймовірно вам доведеться знову увімкнути відомості для усування вад для відповідної програми і повторно її зібрати, щоб допомогти розробникові усунути причину відмови. Отже, вирішуйте самі, чи слід вилучати відомості для усування вад! </para
></warning>

<informalexample>
<para
>Вилучення каталогу збирання після встановлення модуля. Каталог початкових кодів не вилучатиметься, до зібраних програм буде додано інформацію для усування вад:</para>

<screen
>global
  configure-flags      --enable-debug
  remove-after-install builddir        # Вилучити каталог збирання після встановлення
end global
</screen>

<para
>Вилучення каталогу збирання після встановлення, без інформації для усунення вад, з оптимізацією за розміром.</para>

<screen
>global
  cxxflags             -Os             # Оптимізувати за розміром
  configure-flags      --disable-debug
  remove-after-install builddir        # Вилучити каталог збирання після встановлення
end global
</screen>
</informalexample>
</sect2>

</sect1>

</chapter>

<chapter id="kde-cmake">
<title
>&cmake;, система збирання &kde;</title>

<sect1 id="kde-cmake-intro">
<title
>Вступ до &cmake;</title>

<para
>У березні 2006 року програма &cmake; виборола серед декількох інших програм право бути вибраною системою збирання для &kde; 4, вона замінила систему, засновану на autotools, яку &kde; використовувало спочатку.</para>

<para
>Сторінку вступних відомостей щодо &cmake; можна знайти у <ulink url="https://community.kde.org/Guidelines_HOWTOs/CMake"
>вікі спільноти &kde;</ulink
>. У загальних рисах, замість запуску <userinput
><command
>make</command
> <option
>-f</option
> <filename
>Makefile.cvs</filename
></userinput
>, з наступним запуском <command
>configure</command
> і &make;, слід просто запустити &cmake;, а потім &make;. </para>

<para
>У &kdesrc-build; передбачено підтримку &cmake;. Деякі з параметрів &kdesrc-build; насправді є параметрами самої системи збирання, зокрема <link linkend="conf-configure-flags"
>configure-flags</link
> і <link linkend="conf-do-not-compile"
>do-not-compile</link
>. Якщо доступні рівнозначні можливості, скрипт надає вам їх у розпорядження. Наприклад, відповідником параметра configure-flags є параметр <link linkend="conf-cmake-options"
>cmake-options</link
>, а параметр <link linkend="conf-do-not-compile"
>do-not-compile</link
> підтримується і для &cmake;, починаючи з версії &kdesrc-build; 1.6.3. </para>

</sect1>
</chapter>

<chapter id="credits-and-license">
<title
>Подяки і ліцензування</title>

<para
>Переклад українською: Юрій Чорноіван <email
>yurchor@ukr.net</email
></para
> &underFDL; </chapter>

<appendix id="appendix-modules">
<title
>Модулі &kde; та структура початкових кодів</title>
<sect1 id="module-concept">
<title
>«Модуль»</title>

<para
>У &kde; програмне забезпечення згруповано за «модулями» різних розмірів. Спочатку таке групування передбачало декілька сховищ великих модулів, але із впровадженням заснованих на <ulink url="https://git-scm.com/"
>Git</ulink
> <ulink url=" https://commits.kde.org/"
>сховищ початкових кодів</ulink
> ці великі модулі було поділено на багато дрібніших модулів. </para>

<para
>У &kdesrc-build; також використовується ця концепція модулів. Загалом кажучи, «модуль» — збірка коду, яку можна отримати, зібрати, перевірити та встановити. </para>

<sect2 id="single-modules">
<title
>Окремі модулі</title>

<para
>Наказати &kdesrc-build; зібрати окремий модуль доволі просто. Нижче наведено код прикладу оголошення модуля, код якого зберігається у Subversion, у <link linkend="kdesrc-buildrc"
>файлі налаштувань</link
>.</para>

<programlisting
>module <replaceable
>kdefoo</replaceable>
    <option
><replaceable
>cmake-options -DCMAKE_BUILD_TYPE=Debug</replaceable
></option>
end module
</programlisting>

<tip
><para
>Цей модуль засновано на Subversion, оскільки тут не використовується параметр <link linkend="conf-repository"
>repository</link
>. Крім того, для прикладу використано параметр <option
>cmake-options</option
>, насправді він не потрібен.</para
></tip>

</sect2>
<sect2 id="module-groups">
<title
>Групи пов’язаних модулів</title>

<para
>Зараз, більшість модулів коду &kde; зберігається у Git проєкту &kde;, і зазвичай поєднуються у групи модулів.</para>

<para
>Через це у &kdesrc-build; передбачено підтримку груп модулів, за допомогою визначень <link linkend="module-sets"
>наборів модулів</link
>. Приклад:</para>

<programlisting
>module-set <replaceable
>base-modules</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>kde-runtime kde-workspace kde-baseapps</replaceable>
end module-set
</programlisting>

<tip
><para
>Ви можете, якщо хочете, вказати порожню назву набору модулів (<replaceable
>base-modules</replaceable
> у нашому прикладі). У такому разі параметр <option
>repository</option
> повідомить &kdesrc-build; про те, звідки слід отримати код, але ви також можете скористатися адресою <symbol
>git://</symbol
>.</para
></tip>

<para
>Однією особливою можливістю використання <quote
><option
>repository</option
> <literal
>kde-projects</literal
></quote
> є те, що &kdesrc-build; автоматично включатиме всі модулі Git, які згруповано у вказаних вами модулях (у базі даних проєктів &kde;).</para>
</sect2>

<sect2 id="module-branch-groups">
<title
>Модуль «групи гілок»</title>

<para
>Працюючи з концепцією <link linkend="module-groups"
>групи модулів</link
>, розробники &kde; зрештою виявили, що синхронізація у &git; великої кількості гілок в усіх сховищах є доволі марудною справою, особливо у процесі розробки нових бібліотек &kde; Frameworks для &Qt; 5. </para>

<para
>Щоб уникнути зайвої роботи, було створено концепцію «груп гілок». Користувачі і розробники можуть вибрати одну певну групу, а скрипт автоматично вибере відповідні гілки у кожному зі сховищ &git;. </para>

<para
>У &kdesrc-build; передбачено підтримку цієї можливості з версії 1.16-pre2. Підтримку реалізовано за допомогою параметра <link linkend="conf-branch-group"
>branch-group</link
>. </para>

<example id="ex-branch-group">
<title
>Приклад використання branch-group</title>

<para
>branch-group можна скористатися у файлі налаштувань так: </para>

<programlisting
>global
    # Вибрати KDE Frameworks 5 та інші програми, засновані на Qt5
    <option
>branch-group</option
> <replaceable
>kf5-qt5</replaceable>

    # Інші загальні параметри ...
end global

module-set
    # branch-group працює лише для kde-projects
    <option
>repository</option
> kde-projects

    # branch-group успадковується з одного набору повсюдно, але
    # його можна вказати і тут.

    <option
>use-modules</option
> <replaceable
>kdelibs kde-workspace</replaceable>
end module-set

# гілкою kdelibs буде "frameworks"
# гілкою kde-workspace буде "master" (станом на серпень 2013 року)
</programlisting>

<para
>У цьому випадку одне значення <literal
>branch-group</literal
> дасть різні назви гілок для кожного з модулів &git;. </para>
</example>

<para
>Для роботи з цією можливістю потрібні певні дані, супровід яких здійснюють розробники &kde; у сховищі &git; з назвою <literal
>kde-build-metadata</literal
>. Втім, цей модуль буде автоматично включено &kdesrc-build; (хоча його і буде показано у даних, виведених скриптом). </para>

<tip
><para
>Для модулів &kde;, для яких не встановлено назви гілки для вибраної вами групи гілок, типово буде вибрано відповідну назву гілки, ту, яку було б вибрано, якщо б ви не вказували параметра <literal
>branch-group</literal
>. </para
></tip>

</sect2>

</sect1>
</appendix>

<appendix id="appendix-profile">
<title
>Процедури налаштовування профілю, які заміщуються програмою</title>

<sect1 id="old-profile-setup">
<title
>Налаштовування профілю входу до системи &kde;</title>

<para
>Нижче наведено настанови щодо налаштовування профілю, потрібного для забезпечення можливості входу до зібраної вами стільниці Плазми &kde;. Зазвичай, &kdesrc-build; намагається зробити це у автоматичному режимі (див. <xref linkend="session-driver"/>). Дані у цьому додатку можуть бути корисним для тих, хто не може скористатися підтримкою налаштовування входу до системи &kdesrc-build;. Втім, можливо, ці настанови застаріли, тому вам також варто ознайомитися з вмістом файла <filename
>kde-env-master.sh</filename
>, який є частиною початкових кодів &kdesrc-build;.</para>

<sect2 id="changing-profile">
<title
>Зміна ваших параметрів профілю запуску</title>

<important
><para
>Файл <filename
>.bash_profile</filename
> є файлом параметрів входу до системи популярної оболонки <application
>bash</application
>, яка використовується у багатьох дистрибутивах &Linux;. Якщо ви використовуєте іншу оболонку, можливо, вам доведеться скоригувати приклади, наведені у цьому розділі, так, щоб вони відповідали оболонці, яку ви використовуєте.</para
></important>

<para
>Відкрийте або створіть файл <filename
>.bash_profile</filename
> у домашньому каталозі за допомогою вашого улюбленого редактора, і додайте в кінець файла наступні рядки. Якщо ви збираєте модуль qt (це типова поведінка), додайте: <programlisting>
QTDIR=(шлях до qtdir)   # Типовим є ~/kdesrc/build/qt.
KDEDIR=(шлях до kdedir) # Типовим є ~/kde.
KDEDIRS=$KDEDIR
PATH=$KDEDIR/bin:$QTDIR/bin:$PATH
MANPATH=$QTDIR/doc/man:$MANPATH

# Дійте у відповідності до того, чи встановлено змінну LD_LIBRARY_PATH.
if [ -z $LD_LIBRARY_PATH ]; then
  LD_LIBRARY_PATH=$KDEDIR/lib:$QTDIR/lib
else
  LD_LIBRARY_PATH=$KDEDIR/lib:$QTDIR/lib:$LD_LIBRARY_PATH
fi

export QTDIR KDEDIRS PATH MANPATH LD_LIBRARY_PATH
</programlisting
> або, якщо ви не збираєте qt (а замість неї використовуєте системну бібліотеку &Qt;), додайте такі рядки: <programlisting
>KDEDIR=(шлях до каталогу kde)  # Наприклад, типово ~/kde.
KDEDIRS=$KDEDIR
PATH=$KDEDIR/bin:$QTDIR/bin:$PATH

# Діяти відповідно, якщо ще не встановлено LD_LIBRARY_PATH.
if [ -z $LD_LIBRARY_PATH ]; then
  LD_LIBRARY_PATH=$KDEDIR/lib
else
  LD_LIBRARY_PATH=$KDEDIR/lib:$LD_LIBRARY_PATH
fi

export KDEDIRS PATH LD_LIBRARY_PATH
</programlisting>
</para>

<para
>Якщо ви не використовуєте призначеного користувача, встановіть іншу змінну середовища $<envar
>KDEHOME</envar
> для вашого нового середовища у вашому <filename
>.bash_profile</filename
>: <programlisting
>export KDEHOME="${HOME}/.kde-svn"

# Створити каталог, якщо це потрібно
[ ! -e ~/.kde-svn ] &amp;&amp; mkdir ~/.kde-svn
</programlisting>
</para>

<note>
<para
>Якщо пізніше ваше меню KDE буде порожнім, або переповненим записами програм з вашого дистрибутива, можливо, вам доведеться встановити змінну середовища <acronym
>XDG</acronym
> у вашому файлі <filename
>.bash_profile</filename
>: <programlisting
>XDG_CONFIG_DIRS="/etc/xdg"
XDG_DATA_DIRS="${KDEDIR}/share:/usr/share"
export XDG_CONFIG_DIRS XDG_DATA_DIRS
</programlisting>

</para>
</note>

</sect2>
<sect2 id="starting-kde">
<title
>Запуск &kde;</title>

<para
>Тепер, коли ви налаштували параметри вашого середовища на використання належної версії &kde;, вам також слід переконатися, що ви використовуєте правильний скрипт <command
>startkde</command
>. </para>

<para
>Відкрийте текстовий файл <filename
>.xinitrc</filename
> з вашого домашнього каталогу або за потреби створіть його. Додайте до файла такий рядок: <programlisting
><command
>exec</command
> <option
>${KDEDIR}/bin/startkde</option
>
</programlisting>
</para>

<important
><para
>У деяких дистрибутивах, ймовірно, вам доведеться виконати певні дії з файлом <filename
>.xsession</filename
>, який також знаходиться у вашому домашньому каталозі. Такі дії знадобляться, якщо ви використовуєте графічні інструменти керування входом до системи, такими як &kdm;, <application
>gdm</application
> або <application
>xdm</application
>.</para>
</important>

<para
>Тепер запустіть вашу свіжу версію &kde;: у системах &BSD; і &Linux; з підтримкою віртуальних терміналів натискання комбінацій клавіш <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F1</keycap
></keycombo
> ... <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F12</keycap
></keycombo
> використовується для перемикання до віртуальних консолей з номерами від 1 до 12. Таким чином, ви можете запускати декілька стільничних середовищ одночасно. Перші шість терміналів є текстовими, а наступні шість — графічними. </para>

<para
>Якщо після запуску вашого комп’ютера ви бачите інструмент графічного входу до системи, ви можете скористатися новим середовищем &kde;, навіть якщо його пункту немає у списку. У більшості інструментів входу до системи, зокрема у &kdm;, є пункт, призначений для <quote
>Нетипового сеансу</quote
>. За використання цього пункту параметри вашого сеансу буде завантажено з файла <filename
>.xsession</filename
> у вашому домашньому каталозі. Якщо ви вже змінили цей файл у спосіб, описаний вище, використання цього пункту завантажить ваш новий встановлений &kde;. </para>

<para
>Якщо це не так, ви можете спробувати інший спосіб, який, зазвичай, працює: натисніть комбінацію клавіш <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F2</keycap
></keycombo
> і ви побачите текстовий термінал. Введіть ваші реєстраційні дані вашого призначеного користувача і введіть команду: </para>

<screen
><command
>startx</command
> <option
>--</option
> <option
>:1</option
>
</screen>

<tip>
<para
>Ви можете запускати &kde;, зібраний з вихідних кодів, і ваш старий &kde; одночасно! Увійдіть до системи за допомогою реєстраційних даних вашого звичайного користувача, запустіть стабільну версію стільниці &kde;. Натисніть комбінацію клавіш <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F2</keycap
></keycombo
> (або <keycap
>F1</keycap
>, <keycap
>F3</keycap
> тощо), — ви побачите текстовий термінал. Увійдіть до системи від імені вашого призначеного користувача &subversion; &kde; і введіть команду:</para>

<screen
><command
>startx</command
> <option
>--</option
> <option
>:1</option
>
</screen>

<para
>Ви можете повернутися до стільниці &kde; вашого звичайного користувача натисканням клавіатурного скорочення у вже запущеній стільниці. Цією комбінацією, зазвичай, є <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F7</keycap
></keycombo
>, можливо, у вашому випадку останньою клавішею буде <keycap
>F6</keycap
> або <keycap
>F8</keycap
>. Щоб повернутися до вашої зібраної &kdesrc-build; версії &kde;, ви можете скористатися подібною є комбінацією клавіш, але у ній останньою буде інша функціональна клавіша. Наприклад, якщо вам потрібно було ввести <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F7</keycap
></keycombo
>, щоб перемкнути на вашу звичайну версію &kde;, вам доведеться ввести <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F8</keycap
></keycombo
>, щоб повернутися до вашого зібраного &kdesrc-build; &kde;.</para>
</tip>

</sect2>
</sect1>

</appendix>
</book>
