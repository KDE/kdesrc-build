<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.5-Based Variant V1.1//EN" "dtd/kdedbx45.dtd" [
  <!--
    Documentation for kdesrc-build.
    Copyright (c) 2005-2008, 2010-2022 Michael Pyne <mpyne@kde.org>

    Copyright (c) 2005 Carlos Leonhard Woelz <carloswoelz@imap-mail.com>
    Copyright (c) 2009 Burkhard Lück <lueck@hube-lueck.de>
    Copyright (c) 2007, 2011 Federico Zenith <federico.zenith@members.fsf.org>
    Copyright (c) 2009-2011 Yuri Chornoivan <yurchor@ukr.net>
    ... and possibly others. Check the git source repository for specifics.

    Permission is granted to copy, distribute and/or modify this document under
    the terms of the GNU Free Documentation License, Version 1.2 or any later
    version published by the Free Software Foundation; with no Invariant
    Sections, no Front-Cover Texts, and no Back-Cover Texts.

    A copy of the license is included in COPYING.DOC. The license will be
    included in the generated documentation as well.
   -->
  <!ENTITY kappname "kdesrc-build">
  <!ENTITY package "kdesdk">
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % Italian "INCLUDE"
> <!-- Change language only here -->
  <!ENTITY kdesrc-build "<application
>kdesrc-build</application
>">
  <!ENTITY BSD '<acronym
>BSD</acronym
>'>
  <!ENTITY git '<application
>Git</application
>'>
  <!ENTITY cmake '<application
>CMake</application
>'>
  <!ENTITY make '<application
>Make</application
>'>
  <!ENTITY ninja '<application
>Ninja</application
>'>
  <!ENTITY ssh '<application
>SSH</application
>'>
  <!ENTITY cron '<application
>Cron</application
>'>
  <!ENTITY subversion '<application
>Subversion</application
>'>
  <!ENTITY sudo '<application
>Sudo</application
>'>
  <!ENTITY url '<acronym
>URL</acronym
>'>

  <!-- These define shortcut entities for some of the configuration options.
       Just add them as necessary.
  -->

  <!ENTITY configure-flags '<link linkend="conf-configure-flags"
>configure-flags</link
>'>
  <!ENTITY kdedir '<link linkend="conf-kdedir"
>kdedir</link
>'>
  <!ENTITY qtdir '<link linkend="conf-qtdir"
>qtdir</link
>'>
  <!ENTITY build-dir '<link linkend="conf-build-dir"
>build-dir</link
>'>
  <!ENTITY module-base-path '<link linkend="conf-module-base-path"
>module-base-path</link
>'>
  <!ENTITY override-url '<link linkend="conf-override-url"
>override-url</link
>'>
  <!ENTITY source-dir '<link linkend="conf-source-dir"
>source-dir</link
>'>
  <!ENTITY email-address '<link linkend="conf-email-address"
>email-address</link
>'>
  <!ENTITY email-on-compile-error '<link linkend="conf-email-on-compile-error"
>email-on-compile-error</link
>'>
  <!ENTITY colorful-output '<link linkend="conf-colorful-output"
>colorful-output</link
>'>
  <!ENTITY tag '<link linkend="conf-tag"
>tag</link
>'>
  <!ENTITY branch '<link linkend="conf-branch"
>branch</link
>'>
  <!ENTITY do-not-compile '<link linkend="conf-do-not-compile"
>do-not-compile</link
>'>
  <!ENTITY checkout-only '<link linkend="conf-checkout-only"
>checkout-only</link
>'>
  <!ENTITY svn-server '<link linkend="conf-svn-server"
>svn-server</link
>'>
  <!ENTITY make-install-prefix '<link linkend="conf-make-install-prefix"
>make-install-prefix</link
>'>
  <!ENTITY niceness '<link linkend="conf-niceness"
>niceness</link
>'>
  <!ENTITY set-env '<link linkend="conf-set-env"
>set-env</link
>'>
  <!ENTITY libpath '<link linkend="conf-libpath"
>libpath</link
>'>
  <!ENTITY binpath '<link linkend="conf-binpath"
>binpath</link
>'>

  <!-- These define shortcut entities for some of the command line options.
       Just add them as necessary.
  -->
  <!ENTITY cmd-nice '<link linkend="cmdline-nice"
>--nice</link
>'>
  <!ENTITY cmd-ignore-modules '<link linkend="cmdline-ignore-modules"
>--ignore-modules</link
>'>
  <!ENTITY cmd-resume-from '<link linkend="cmdline-resume-from"
>--resume-from</link
>'>
  <!ENTITY cmd-resume-after '<link linkend="cmdline-resume-after"
>--resume-after</link
>'>
  <!ENTITY cmd-reconfigure '<link linkend="cmdline-reconfigure"
>--reconfigure</link
>'>
  <!ENTITY cmd-refresh-build '<link linkend="cmdline-refresh-build"
>--refresh-build</link
>'>
]>

<book id="kdesrc-build" lang="&language;">

<bookinfo>
<title
>Manuale dello script &kdesrc-build;</title>

<authorgroup id="authors">
    <author
>&Michael.Pyne; &Michael.Pyne.mail;</author>
    <author
><personname
><firstname
>Carlos</firstname
><surname
>Woelz</surname
></personname
> <email
>carloswoelz@imap-mail.com</email
> </author>

<othercredit role="translator"
><firstname
>Federico</firstname
><surname
>Zenith</surname
><affiliation
><address
><email
>zenith@chemeng.ntnu.no</email
></address
></affiliation
><firstname
>Valter</firstname
><surname
>Mura</surname
><affiliation
><address
><email
>valtermura@gmail.com</email
></address
></affiliation
><contrib
>Traduzione della documentazione in italiano</contrib
></othercredit
> 

</authorgroup>

<copyright>
<year
>2006</year>
<year
>2007</year>
<year
>2008</year>
<year
>2009</year>
<year
>2010</year>
<year
>2011</year>
<year
>2012</year>
<year
>2013</year>
<year
>2014</year>
<year
>2015</year>
<year
>2016</year>
<year
>2017</year>
<year
>2018</year>
<year
>2019</year>
<holder
>Michael Pyne</holder>
</copyright>

<copyright>
<year
>2005</year>
<holder
>Carlos Woelz</holder>
</copyright>

<legalnotice
>&FDLNotice;</legalnotice>

<date
>2018-01-20</date>
<releaseinfo
>&kdesrc-build; 17.12</releaseinfo>

<abstract>
<para
>&kdesrc-build; è uno script che genera e installa il software di &kde; direttamente dai depositi del codice sorgente di &kde;.</para>
</abstract>

<keywordset>
<keyword
>KDE</keyword>
<keyword
>kdesdk</keyword>
<keyword
>SVN</keyword>
<keyword
>Subversion</keyword>
<keyword
>git</keyword>
<keyword
>Sviluppo di KDE</keyword>
<!-- Older names for the software -->
<keyword
>kdesrc-build</keyword>
<keyword
>kdecvs-build</keyword>
</keywordset>

</bookinfo>

<chapter id="introduction">
<title
>Introduzione</title>

<sect1 id="brief-intro">
<title
>Una breve introduzione a &kdesrc-build;</title>

<sect2 id="whatis-kdesrc-build">
<title
>Cos'è &kdesrc-build;?</title>

<para
>&kdesrc-build; è uno script che aiuta la comunità di &kde; ad installare il software <ulink url="https://www.kde.org/"
>&kde;</ulink
> dai depositi dei sorgenti <ulink url="https://git-scm.com/"
>&git;</ulink
> e <ulink url="https://subversion.apache.org"
>&subversion;</ulink
>, e a continuare ad aggiornarlo dopo l'installazione. È rivolto in particolare a coloro i quali hanno bisogno di supporto nel test e nello sviluppo del software &kde;, inclusi gli utenti che verificano le correzioni di errori e gli sviluppatori che lavorano su nuove funzionalità. </para>

<para
>Lo script &kdesrc-build; può essere usato per mantenere un solo modulo individuale, un desktop &plasma; completo con un set di applicazioni &kde;, o anche una via di mezzo. </para>

<para
>Per iniziare, consulta <xref linkend="getting-started"/> o continua a leggere qui i dettagli su come &kdesrc-build; funziona e gli argomenti trattati in questa documentazione. </para>
</sect2>

<sect2 id="operation-in-a-nutshell">
<title
>Uso di &kdesrc-build; in breve</title>

<para
>&kdesrc-build; funziona usando gli strumenti disponibili sulla riga di comando e le stesse interfacce disponibili agli utenti. All'esecuzione di &kdesrc-build;, si segue questa sequenza: </para>

<orderedlist>
<listitem
><para
>&kdesrc-build; legge nella <link linkend="cmdline"
>riga di comando</link
> e nel <link linkend="configure-data"
>file di configurazione</link
>, per determinare cosa generare, quali opzioni di compilazione usare, dove installare, eccetera.</para
></listitem>

<listitem
><para
>&kdesrc-build; aggiorna il codice sorgente di ogni <link linkend="module-concept"
>modulo</link
>. I moduli che non vengono aggiornati correttamente di solito non interrompono la generazione, e ti verrà notificato alla fine quali moduli non sono stati aggiornati.</para
></listitem>

<listitem
><para
>I moduli che sono aggiornati correttamente sono generati, verificati e poi installati. Per ridurre il tempo trascorso totale, per impostazione predefinita &kdesrc-build; avvia la generazione del codice appena il primo modulo ha completato l'aggiornamento, e permette ai restanti aggiornamenti di continuare in background. </para
></listitem>
</orderedlist>

<tip
><para
>Un'<emphasis
>ottima</emphasis
> panoramica su come vengono generati i moduli &kde;, che comprende anche grafici informativi, si trova in <ulink url="https://www.davidrevoy.com/article193/guide-building-krita-on-linux-for- cats"
>un articolo che discute dell'applicazione &krita; di &kde;</ulink
> (in inglese). Questo flusso di lavoro è appunto quello che &kdesrc-build; automatizza per tutti i moduli &kde;.</para>
</tip>

</sect2>
</sect1>

<sect1 id="intro-toc">
<title
>Panoramica della documentazione</title>

<para
>Questa guida è una panoramica per descrivere i seguenti aspetti dell'operazione di &kdesrc-build;: </para>

<itemizedlist>
<listitem
><para
>Una <link linkend="getting-started"
>panoramica</link
> dei passi necessari per cominciare;</para
></listitem>
<listitem
><para
><link linkend="features"
>Funzionalità</link
> importanti;</para
></listitem>
<listitem
><para
>La sintassi e le opzioni del <link linkend="configure-data"
>file di configurazione</link
>;</para
></listitem>
<listitem
><para
>Le <link linkend="cmdline"
>opzioni dalla riga di comando</link
>.</para
></listitem>
</itemizedlist>

<para
>Sono documentati anche i passi da eseguire con altri strumenti, cioè i passi non eseguiti automaticamente da &kdesrc-build;. </para>

</sect1>
</chapter>

<chapter id="getting-started">
<title
>Per cominciare</title>

<para
>In questo capitolo, mostriamo come usare &kdesrc-build; per ritirare i moduli dal deposito di &kde; e generarli. Diamo anche una rapida spiegazione della struttura del codice sorgente di &kde; e di cosa devi fare prima di eseguire lo script. </para>

<para
>Tutti gli argomenti qui presenti sono trattati in maggiore dettaglio nell'articolo <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source"
> Build from Source</ulink
>, nel <ulink url="https://community.kde.org/"
>wiki della Comunità di &kde;</ulink
>. Se stai compilando &kde; per la prima volta, è una buona idea leggerlo, o almeno consultarlo come riferimento. Troverai informazioni dettagliate sugli strumenti di gestione dei pacchetti e su requisiti, errori di compilazione comuni, strategie e informazioni su come far funzionare la nuova installazione di &kde;. </para>

<sect1 id="before-building">
<title
>Preparare il sistema per la generazione di &kde;</title>

<sect2 id="before-building-users">
<title
>Configurare un nuovo account utente</title>

<para
>Si raccomanda di usare un diverso account per generare, installare ed eseguire il software di &kde;, perché servono meno permessi e per evitare di interferire con i pacchetti della tua distribuzione. Se hai già installato i pacchetti di &kde;, la cosa migliore sarebbe creare un altro utente (apposito) per generare ed eseguire il nuovo &kde;. </para>

<tip
><para
>Lasciare intatto il tuo sistema &kde; permette anche di avere un ripiego d'emergenza nel caso in cui un errore di codice renda inutilizzabile la tua ultima generazione del software. </para
></tip>

<para
>Puoi anche configurare un'installazione in una cartella globale (per es. <filename class="directory"
>/usr/src/local</filename
>), se vuoi. Questo documento non tratta questo tipo di installazione, dato che presupponiamo che tu sappia quello che stai facendo. </para>

</sect2>
<sect2 id="before-building-preparation">
<title
>Assicurati che il tuo sistema sia pronto a generare il software di &kde;</title>

<para
>Prima di usare lo script &kdesrc-build; (o qualsiasi altra strategia di generazione) devi installare gli strumenti di sviluppo e le librerie necessarie a &kde;. L'elenco quasi completo degli strumenti necessari può essere recuperato dalla pagina <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source#Install_required_devel_packages"
>Build Requirements del wiki della Comunità di &kde;</ulink
>. </para>

<para
>Ecco un elenco di alcune delle cose che ti serviranno:</para>
<itemizedlist>

<listitem
><para
>Ti servirà &cmake;, il software che &kde; usa per gestire la configurazione della generazione al volo del codice sorgente e la generazione dei comandi di compilazione specifici per il tuo sistema. La versione richiesta varia a seconda delle versioni del software &kde; che stai generando (per le specifiche consulta la TechBase), ma con le moderne distribuzioni il &cmake; incluso nella tua dovrebbe andare bene. </para
></listitem>

<listitem
><para
>Devi anche installare i client di controllo sorgenti necessari per eseguire il checkout del codice sorgente di &kde;. Ciò vuol dire che ti serve almeno quanto segue:</para>

<itemizedlist>
<listitem
><para
>Il <ulink url="https://git-scm.com/"
>gestore di controllo dei sorgenti Git</ulink
>, utilizzato per tutto il <ulink url="https://commits.kde.org/"
>codice sorgente</ulink
> di &kde;</para
></listitem>

<listitem
><para
>Anche se non è un requisito, il gestore di controllo dei sorgenti <ulink url="http://bazaar.canonical.com/"
>Bazaar</ulink
> viene usato per un solo modulo (libdbusmenu-qt) richiesto per le librerie di &kde;. La maggior parte degli utenti può installare questa libreria con i loro sistemi di distribuzione dei pacchetti, ma &kdesrc-build; ne supporta la generazione, se lo vuoi. Per generare libdbusmenu-qt, però, dovrai installare Bazaar.</para
></listitem>
</itemizedlist
></listitem>

<listitem
><para
>Per &kdesrc-build; è richiesto il linguaggio di script Perl, alcuni depositi &kde; e &Qt; (se compili da sorgente).</para>

<para
>Il Perl incluso nella tua distribuzione dovrebbe andare bene (è necessario almeno Perl 5.14), ma avrai bisogno anche di alcuni moduli aggiuntivi (&kdesrc-build; ti avviserà se non sono presenti):</para>

<itemizedlist>
    <listitem
><para
>IO::Socket::SSL</para
></listitem>
    <listitem
><para
>JSON::PP o JSON::XS</para
></listitem>
    <listitem
><para
>YAML::PP, YAML::XS, o YAML::Syck</para
></listitem>
</itemizedlist>
</listitem>

<listitem
><para
>Avrai bisogno di un ambiente di sviluppo C++ completo (compilatore, libreria standard, runtime e tutti i pacchetti di sviluppo richiesti). Le versioni richieste minime variano a seconda del modulo &kde;: la raccolta &kde; Frameworks 5 supporta i compilatori più datati, mentre &kde; Plasma 5 e &kde; Applications richiedono in genere compilatori più recenti.</para>
<para
>I compilatori minimi raccomandati sono GCC 4.8 o Clang 4. Molte distribuzioni supportano un'installazione facile di questi strumenti tramite il pacchetto <quote
>build-essentials</quote
>, un'opzione per installare «dipendenze di compilazione» con &Qt;, o funzionalità simili. Il wiki KDE Community ha una pagina <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source/Install_the_dependencies"
>che riassume i pacchetti raccomandati per le distribuzioni principali</ulink
> (in inglese). </para>
</listitem>

<listitem
><para
>Avrai bisogno di uno strumento di compilazione che esegue realmente i passaggi della compilazione (come generati da &cmake;). È raccomandato GNU Make e deve essere disponibile tramite il tuo gestore di pacchetti. &cmake; non supporta altre opzioni, come lo strumento di generazione &ninja;, che può essere utilizzato da &kdesrc-build; tramite l'opzione del file di configurazione <link linkend="conf-custom-build-command"
>custom-build-command</link
>. </para
></listitem>

<listitem
><para
>Infine, avrai bisogno delle librerie &Qt; corrette (pacchetti di sviluppo inclusi) per la versione del software &kde; che stai generando. &kdesrc-build; non supporta ufficialmente la generazione di &Qt; 5 (l'attuale versione principale), dunque consigliamo di usare i pacchetti di sviluppo della tua distribuzione o di consultare la pagina del wiki KDE Community <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source/OwnQt5"
>self-building Qt 5</ulink
>. </para
></listitem>
</itemizedlist>

<note
><para
>La maggior parte delle distribuzioni di sistemi operativi ha un modo di installare facilmente gli strumenti di sviluppo necessari. Consulta la pagina wiki della Comunità <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source#Install_required_devel_packages"
>Required devel packages</ulink
> per vedere se queste istruzioni sono già disponibili.</para
></note>

<important
><para
>Alcuni di questi pacchetti sono divisi in librerie (o programmi) e pacchetti di sviluppo. Ti serviranno almeno il programma o la libreria, <emphasis
>e</emphasis
> il suo pacchetto di sviluppo. </para
></important>

</sect2>

<sect2 id="before-building-prepare-script">
<title
>Configurare &kdesrc-build;</title>

<sect3 id="get-kdesrc-build">
<title
>Installare &kdesrc-build;</title>
<para
>Gli sviluppatori di &kde; apportano modifiche frequenti al file &kdesrc-build; in modo da mantenerlo sincronizzato con i cambiamenti ai processi di sviluppo in &kde;, incluse migliorie alla configurazione &kdesrc-build; raccomandata, moduli aggiunti, migliorie dei flag &cmake;, ecc.</para>

<para
>A causa di questo, consigliamo di recuperare &kdesrc-build; direttamente dal deposito del suo codice sorgente e di aggiornarlo con frequenza.</para>

<para
>Puoi recuperare &kdesrc-build; dal deposito del suo codice sorgente eseguendo:</para>
<programlisting
><prompt
>$ </prompt
><userinput
><command
>git <option
>clone</option
> <option
>https://invent.kde.org/sdk/kdesrc-build.git</option
> <option
><filename class="directory"
><replaceable
>~/kdesrc-build</replaceable
></filename
></option
></command
></userinput
>
</programlisting>

<para
>Sostituisci <option
><replaceable
>~/kdesrc-build</replaceable
></option
> con la cartella dove lo vuoi installare. </para>

<para
>Puoi aggiornare &kdesrc-build; in seguito eseguendo:</para>
<programlisting
><prompt
>$ </prompt
><userinput
><command
>cd <option
><filename class="directory"
><replaceable
>~/kdesrc-build</replaceable
></filename
></option
></command
></userinput>
<prompt
>$ </prompt
><userinput
><command
>git <option
>pull</option
></command
></userinput
>
</programlisting>

<tip
><para
>Raccomandiamo di aggiungere la cartella di installazione di &kdesrc-build; alla variabile di ambiente <envar
>PATH</envar
>, in modo da poter avviare &kdesrc-build; senza dover digitare ogni volta il suo percorso completo.</para
></tip>
</sect3>

<sect3 id="setup-rcfile">
<title
>Preparare il file di configurazione</title>

<para
>&kdesrc-build; usa un <link linkend="configure-data"
>file di configurazione</link
> per controllare quali moduli sono costruiti, dove sono installati, ecc. Questo file si trova in <filename
>~/.config/kdesrc-buildrc</filename
> (<filename
>$XDG_CONFIG_HOME/kdesrc-buildrc</filename
>, se <envar
>$XDG_CONFIG_HOME</envar
> è impostato).</para>

<para
>Puoi usare un programma incluso con &kdesrc-build;, chiamato <application
>kdesrc-build-setup</application
>, per preparare una semplice configurazione di &kdesrc-build;. Puoi quindi modificare il file di configurazione <filename
>~/.config/kdesrc-buildrc</filename
> ottenuto per fare le modifiche che ti servono.</para>

<para
><application
>kdesrc-build-setup</application
> viene eseguito da un terminale (invece di usare un'interfaccia grafica), come &kdesrc-build;, quindi lo puoi usare anche se non hai ancora nessuna interfaccia grafica disponibile.</para>

<sect4 id="setup-rcfile-manually">
<title
>Impostazione manuale del file di configurazione</title>

<para
>Puoi anche impostare manualmente il tuo file di configurazione, copiando il file di configurazione di esempio incluso <filename
>kdesrc-buildrc-kf5-sample</filename
> in <filename
>~/.config/kdesrc-buildrc</filename
> e poi modificando il file. <xref linkend="kdesrc-buildrc"/> sarà un utile riferimento per questo, in particolare la sua <link linkend="conf-options-table"
>tabella delle opzioni di configurazione</link
>. </para>

<para
>&kdesrc-build; contiene molti file di configurazione consigliati per il supporto di &kde; Frameworks 5, &plasma; 5, e altre applicazioni &kde;. <application
>kdesrc-build-setup</application
> si riferisce a questi file nel file di configurazione che genera, ma puoi anche usarli per tuo conto. Consulta <xref linkend="kdesrc-buildrc-including"/> per informazioni su come usare altri file di configurazione dalla tua copia di <filename
>kdesrc-buildrc</filename
>. </para>

<para
>Puoi trovare maggiori informazioni sulla sintassi del <link linkend="configure-data"
>file di configurazione</link
> nel<xref linkend="configure-data"/> e nel<xref linkend="kdesrc-buildrc"/>. </para>
</sect4>
</sect3>
</sect2>
</sect1>

<sect1 id="configure-data">
<title
>Impostare i dati della configurazione</title>

<para
>Per usare &kdesrc-build;, dovresti avere un file nella tua cartella <filename
>~/.config</filename
> (o in <envar
>$XDG_CONFIG_HOME</envar
>, se impostato) chiamato <filename
>.kdesrc-buildrc</filename
>, che imposta le opzioni generali e specifica i moduli che vuoi scaricare e generare. </para>

<note
><para
>È possibile usare diversi file di configurazione per &kdesrc-build;, come descritto nel<xref linkend="kdesrc-buildrc"/>. Se hai bisogno di usare configurazioni multiple, vedi quella sezione. Qui, presumeremo che la configurazione sia salvata in <filename
>~/.config/kdesrc-buildrc</filename
>. </para
></note>

<para
>Il modo più semplice di procedere è usare il file <filename
>kdesrc-buildrc-kf5-sample</filename
> come modello, cambiando le opzioni globali per adattarle alle tue esigenze e cambiando anche l'elenco dei moduli da generare. </para>

<para
>Le impostazioni predefinite dovrebbero essere appropriate per generare &kde;. Alcune impostazioni che potresti voler cambiare includono: </para>

<itemizedlist>
<listitem
><para
><link linkend="conf-kdedir"
>kdedir</link
>, che cambia la cartella di destinazione in cui il tuo software &kde; sarà installato. Il valore predefinito è <filename class="directory"
>~/kde</filename
>, che è un'installazione per un solo utente.</para
></listitem>

<listitem
><para
><link linkend="conf-branch-group"
>branch-group</link
>, che puoi usare per scegliere il ramo di sviluppo appropriato per tutti i moduli &kde; nel loro insieme. Sono supportate molte configurazioni di generazione ma probabilmente sceglierai <option
>kf5-qt5</option
>, dunque &kdesrc-build; scaricherà l'ultimo codice basato su &Qt; 5 e &kde; Frameworks 5.</para>

<tip
><para
>Se non ne scegli uno, &kdesrc-build; utilizzerà un gruppo di rami predefinito, ma questo cambierà nel tempo; è dunque meglio sceglierne uno in modo che il gruppo di rami non cambi in modo inaspettato.</para
></tip>
</listitem>

<listitem
><para
><link linkend="conf-source-dir"
>source-dir</link
>, per controllare la cartella di &kdesrc-build; utilizza per scaricare il codice sorgente, avviando il processo di generazione e salvando i registri. Questo è impostato in modo predefinito in <filename class="directory"
>~/kdesrc</filename
>.</para
></listitem>

<listitem
><para
><link linkend="conf-cmake-options"
>cmake-options</link
>, che imposta le opzioni da passare al comando  &cmake; quando si generano i moduli. Tipicamente questo è utilizzato per impostare uno tra i modelli di generazione <quote
>debug</quote
> o <quote
>release</quote
>, per abilitare (o disabilitare) le funzioni opzionali o per passare informazioni al processo di generazione riguardo la posizione delle librerie richieste. </para
></listitem>

<listitem
><para
><link linkend="conf-make-options"
>make-options</link
>, che imposta le opzioni utilizzate quando si esegue realmente il comando <application
>make</application
> per generare ogni modulo (una volta che &cmake; ha stabilito il sistema di generazione). </para>

<para
>L'opzione più tipica è <option
>-j<replaceable
>N</replaceable
></option
>, dove <replaceable
>N</replaceable
> deve essere sostituito col numero massimo di operazioni di compilazione che vuoi consentire. Un numero più alto (fino al numero di CPU logici disponibili nel tuo sistema) porta a generazioni più rapide ma richiede maggiore impegno di risorse del sistema. </para>

<tip
><para
>&kdesrc-build; imposta l'opzione <option
><link linkend="conf-num-cores"
>num-cores</link
></option
> al numero rilevato di core di elaborazione disponibili. Puoi utilizzare questo valore nel tuo file di configurazione in modo da evitare di impostarlo manualmente. </para
></tip>

<example id="make-options-example">
<title
>Configurare Make per utilizzare tutte le CPU disponibili, con eccezioni</title>
<screen
>global
    # Questa variabile d'ambiente viene utilizzata automaticamente da make, inclusi
    # i comandi make non eseguiti direttamente da kdesrc-build, come il configure di Qt
    set-env MAKEFLAGS -j<literal
>${num-cores}</literal>
    &hellip;
end global

&hellip;

module-set <replaceable
>big-module-set</replaceable>
    repository kde-projects
    use-modules <replaceable
>calligra</replaceable>
    make-options -j2 # Numero ridotto di operazioni di generazione solo per questi moduli
end module-set
</screen>
</example>

<note
><para
>Alcuni depositi Git molto grandi potrebbero affossare il tuo sistema se provi a compilare con troppe operazioni di generazione simultanee, in particolare i depositi tipo &Qt; WebKit e &Qt; WebEngine. Per mantenere l'interattività del sistema potresti dover ridurre il numero di operazioni di generazione per i moduli specifici.</para>
<para
><xref linkend="make-options-example"/> fornisce un esempio su come farlo.</para>
</note>

</listitem>
</itemizedlist>

<para
>Potresti voler selezionare diversi moduli da generare, come descritto in <xref linkend="selecting-modules"/>.</para>

</sect1>

<sect1 id="building-and-troubleshooting">
<title
>Usare lo script &kdesrc-build;</title>
<para
>Una volta stabiliti i dati di configurazione, sei pronto per avviare lo script. Anche se devi ancora fare alcune regolazioni o approfondire alcune letture, è una buona idea caricare almeno i metadati del progetto &kde;.</para>

<sect2 id="loading-kdesrc-build-metadata">
<title
>Caricare i metadati del progetto</title>

<para
>Da una finestra di terminale, accedi come l'utente che vuoi usare per compilare il software &kde; ed esegui lo script: </para>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--metadata-only</option
></userinput
>
</screen>

<para
>Questo comando imposta la cartella sorgente e connette ai depositi &git; di KDE per scaricare la relativa banca dati e la banca dati dei metadati delle dipendenze, senza eseguire ulteriori modifiche. È bene avviarlo separatamente dato che questi metadati sono utili per altri comandi &kdesrc-build;. </para>

</sect2>

<sect2 id="pretend-mode">
<title
>Eseguire un'anteprima di ciò che avverrà quando avvierai kdesrc-build</title>

<para
>Con i metadati del progetto installati, è possibile fare un'anteprima di cosa farà &kdesrc-build; una volta avviato. Ciò può essere fatto con l'opzione a riga di comando <option
><link linkend="cmdline-pretend"
>--pretend</link
></option
>.</para>

<screen
><prompt
>&percnt; </prompt
><command
>./kdesrc-build</command
> <option
>--pretend</option
>
</screen>

<para
>Dovrebbe comparire un messaggio che ti avvisa che alcuni pacchetti sono stati generati correttamente (sebbene niente di ciò sia stato realmente fatto). Se non compaiono problemi seri, puoi procedere all'avvio reale dello script.</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--stop-on-failure</option
></userinput
>
</screen>

<para
>Questo comando scaricherà il codice sorgente corretto e compilerà e installerà in ordine ciascun modulo, ma si bloccherà se non riesce a generare un modulo (in base all'opzione <option
>--stop-on-failure</option
>). Successivamente dovresti osservare un output simile a quello in <xref linkend="example-build-sequence"/>:</para>

<example id="example-build-sequence">
<title
>Output esemplificativo di un'esecuzione di kdesrc-build</title>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
></userinput>
Updating kde-build-metadata (to branch master)
Updating sysadmin-repo-metadata (to branch master)

Building libdbusmenu-qt (1/200)
        No changes to libdbusmenu-qt source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building taglib (2/200)
        Updating taglib (to branch master)
        Source update complete for taglib: 68 files affected.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building extra-cmake-modules from &lt;module-set at line 32&gt; (3/200)
        Updating extra-cmake-modules (to branch master)
        Source update complete for extra-cmake-modules: 2 files affected.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

        ...

Building kdevelop from kdev (200/200)
        Updating kdevelop (to branch master)
        Source update complete for kdevelop: 29 files affected.
        Compiling... succeeded (after 1 minute, and 34 seconds)
        Installing.. succeeded (after 2 seconds)

&lt;&lt;&lt;  PACKAGES SUCCESSFULLY BUILT  &gt;&gt;&gt;
Built 200 modules

Your logs are saved in /home/kde-src/kdesrc/log/2018-01-20-07
</screen>
</example>
</sect2>

<sect2 id="fixing-build-failures">
<title
>Risoluzione di errori di generazione</title>

<para
>A seconda di quanti moduli stai scaricando, è possibile che &kdesrc-build; non riesca la prima volta che compili il software &kde;. Non disperare! </para>

<para
>&kdesrc-build; registra l'output di ogni comando che esegue. Come impostazione predefinita, i file di registro sono tenuti in <filename class="directory"
>~/kdesrc/log</filename
>. Per vedere cosa ha causato un errore in un modulo l'ultima volta che si è avviato &kdesrc-build;, è di solito sufficiente guardare in <filename class="directory"
>~/kdesrc/log/latest/<replaceable
>nome-modulo</replaceable
>/error.log</filename
>.</para>

<tip
><para
>Il modo più facile di trovare quale errore ha causato l'interruzione della generazione di un modulo è forse cercare partendo dalla fine, senza distinguere le maiuscole, la parola <literal
>error</literal
>. Una volta trovata, scorri in alto per assicurarti che non ci siano altri messaggi d'errore nei paraggi. Il primo messaggio d'errore in un gruppo è di solito il problema fondamentale.</para
></tip>

<para
>In quel file, vedrai l'errore che ha impedito la generazione del modulo. Se il file dice (in fondo) che ti mancano dei pacchetti, prova ad installarli (includendo i pacchetti -dev appropriati) prima di generare quel modulo. Assicurati, quando fai ripartire &kdesrc-build;, di passare l'opzione <link linkend="cmdline-reconfigure"
>--reconfigure</link
> in modo che &kdesrc-build; costringa il modulo a ricontrollare i pacchetti mancanti.</para>

<para
>Se l'errore sembra essere un errore di generazione (come un errore di sintassi, <quote
>prototipo errato</quote
>, <quote
>tipo sconosciuto</quote
>), è probabilmente un errore del codice sorgente di &kde;, che si spera venga risolto nel giro di pochi giorni. Se non viene risolto, manda pure un messaggio alla lista <email
>kde-devel@kde.org</email
> (è possibile ti venga richiesto di iscriverti) per segnalare l'errore di generazione.</para>

<para
>Puoi trovare altri esempi comuni di cose che possono andare storte e le relative soluzioni, oltre a suggerimenti e strategie generali per generare software &kde;, nella guida <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source"
>Build from Source</ulink
> (in inglese). </para>

<para
>Invece, se tutto è andato bene, dovresti avere un nuovo &kde; installato sul computer, e ora è solo questione di farlo partire, come descritto nel<xref linkend="environment"/>.</para>

<note
><para
>Per maggiori informazioni sulle funzionalità di registro di &kdesrc-build;, vedi <xref linkend="kdesrc-build-logging"/>.</para
></note>
</sect2>

</sect1>

<sect1 id="building-specific-modules">
<title
>Generazione di moduli specifici</title>

<para
>Piuttosto che generare tutte le volte ciascun modulo, potresti voler generare solo un singolo modulo o altri piccoli sottoinsiemi. Anziché modificare il tuo file di configurazione, puoi semplicemente passare i nomi dei moduli o gli insiemi di moduli da generare alla riga di comando.</para>

<example id="example-subset-build">
<title
>Output esemplificativo della generazione di un modulo specifico in kdesrc-build</title>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--include-dependencies</option
> <replaceable
>dolphin</replaceable
></userinput>
Updating kde-build-metadata (to branch master)
Updating sysadmin-repo-metadata (to branch master)

Building extra-cmake-modules from frameworks-set (1/79)
        Updating extra-cmake-modules (to branch master)
        No changes to extra-cmake-modules source, proceeding to build.
        Running cmake...
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building phonon from phonon (2/79)
        Updating phonon (to branch master)
        No changes to phonon source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building attica from frameworks-set (3/79)
        Updating attica (to branch master)
        No changes to attica source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

        ...

Building dolphin from base-apps (79/79)
        Updating dolphin (to branch master)
        No changes to dolphin source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

&lt;&lt;&lt;  PACKAGES SUCCESSFULLY BUILT  &gt;&gt;&gt;
Built 79 modules

Your logs are saved in /home/kde-src/kdesrc/log/2018-01-20-07
</screen>
</example>

<para
>In questo caso, sebbene sia stata specificata solo l'applicazione <replaceable
>dolphin</replaceable
>, il flag <option
>--include-dependencies</option
> ha indicato a &kdesrc-build; di includere le dipendenze elencate per <replaceable
>dolphin</replaceable
> (impostando l'opzione <link linkend="conf-include-dependencies"
>include-dependencies</link
>). </para>

<note
><para
>La risoluzione delle dipendenze in questo caso ha funzionato solo perché <replaceable
>dolphin</replaceable
> risultava specificato nell'insieme di moduli basato su <literal
>kde-projects</literal
> (in questo esempio chiamato <literal
>base-apps</literal
>). Vedi <xref linkend="module-sets-kde"/>. </para
></note>

</sect1>

<sect1 id="environment">
<title
>Impostare l'ambiente per far funzionare il desktop &plasma; di &kde;</title>

<para
>Supponendo che tu stia usando un utente apposito per generare &plasma; di &kde;, e che abbia già installato una versione di &plasma;, far funzionare il nuovo &plasma; potrebbe essere un po' difficile, perché il nuovo deve prendere la precedenza sul vecchio. Devi cambiare le variabili d'ambiente dei tuoi script d'accesso per assicurarti che venga usato il desktop appena generato. </para>

<sect2 id="session-driver">
<title
>Installare automaticamente un driver d'accesso</title>

<para
>A partire dalla versione 1.16, &kdesrc-build; cercherà di installare un driver d'accesso appropriato che permetterà di accedere al desktop &kde; generato da &kdesrc-build; dal gestore degli accessi. Questo può essere disabilitato con l'opzione <option
><link linkend="conf-install-session-driver"
>install-session-driver</link
></option
> nel file di configurazione.</para>

<note
><para
>La configurazione della sessione non avviene quando &kdesrc-build; è eseguito in modalità di prova (opzione <option
>--pretend</option
>).</para
></note>

<para
>Questo driver funziona impostando un tipo di sessione <quote
><literal
>xsession</literal
></quote
> personalizzato. Questo tipo di sessione dovrebbe normalmente funzionare con il gestore d'accesso &kdm; (dove compare come la sessione <quote
>Custom</quote
>), ma altri gestori (come <application
>LightDM</application
> e <application
>gdm</application
>) potrebbero richiedere l'installazione di altri file per abilitare il supporto per <literal
>xsession</literal
>.</para>

<sect3 id="xsession-distribution-setup">
<title
>Aggiungere il supporto per xsession in varie distribuzioni</title>

<para
>I gestori d'accesso predefiniti per alcune distribuzioni potrebbero richiedere l'installazione di pacchetti aggiuntivi per poter supportare gli accessi con <literal
>xsession</literal
>.</para>

<itemizedlist>
<listitem
><para
>La distribuzione &Linux; <ulink url="https://getfedora.org/"
>Fedora</ulink
> richiede l'installazione del pacchetto <literal
>xorg-x11-xinit-session</literal
> per il supporto degli accessi con <literal
>xsession</literal
> personalizzati.</para
></listitem>

<listitem
><para
><ulink url="https://www.debian.org/"
>Debian</ulink
> e le distribuzioni &Linux; da esso derivate dovrebbero supportare gli accessi con <literal
>xsession</literal
> personalizzati, ma richiedono l'impostazione dell'opzione <option
><userinput
>allow-user-xsession</userinput
></option
> nel file <filename
>/etc/X11/Xsession.options</filename
>. Vedi anche la <ulink url="http://www.debian.org/doc/manuals/debian-reference/ch07.en.html#_customizing_the_x_session_classic_method"
>documentazione su come configurare la sessione X</ulink
> di Debian.</para
></listitem>

<listitem
><para
>Per le altre distribuzioni, vai al<xref linkend="xsession-manual-setup"/>.</para
></listitem>
</itemizedlist>

</sect3>

<sect3 id="xsession-manual-setup">
<title
>Aggiungere il supporto per xsession manualmente</title>

<para
>Se non ci sono istruzioni specifiche per la tua distribuzione nel<xref linkend="xsession-distribution-setup"/>, puoi aggiungere manualmente una voce per l'<quote
>accesso con xsession personalizzato</quote
> all'elenco di tipi di sessione della tua distribuzione come segue:</para>

<procedure id="proc-adding-xsession-type">
<title
>Aggiungere un tipo di sessione d'accesso .xsession</title>

<note
><para
>Questa procedura probabilmente richiederà privilegi amministrativi per essere effettuata. </para
></note>

<step performance="required">
<para
>Crea il file <filename
>/usr/share/xsessions/kdesrc-build.desktop</filename
>.</para>
</step>

<step performance="required">
<para
>Assicurati che il file appena creato contenga il quanto segue:</para>
<literallayout
><userinput>
Type=XSession
Exec=<co id="session-homedir"/><replaceable
>$HOME</replaceable
>/.xsession
Name=KDE Plasma Desktop (unstable; kdesrc-build)
</userinput
></literallayout>

<calloutlist>
<callout arearefs="session-homedir"
><para
>La voce <replaceable
>$HOME</replaceable
> deve essere sostituita dal percorso completo alla tua cartella HOME (per esempio, <filename class="directory"
>/home/<replaceable
>utente</replaceable
></filename
>). La specifica delle voci desktop non permette file generici per tutti gli utenti. </para
></callout>

</calloutlist>
</step>

<step performance="optional"
><para
>Al riavvio del gestore degli accessi, dovrebbe essere mostrato un nuovo tipo di sessione nell'elenco, <quote
>KDE Plasma Desktop (unstable; kdesrc-build)</quote
>, che dovrebbe cercare di eseguire il file <filename
>.xsession</filename
> installato da &kdesrc-build; se viene selezionato all'accesso.</para>

<note
><para
>La cosa più facile potrebbe essere riavviare il computer per riavviare il gestore degli accessi, se il gestore non tiene traccia degli aggiornamenti alla cartella <filename class="directory"
>/usr/share/xsessions</filename
>.</para
></note>

</step>

</procedure>

</sect3>

</sect2>

<sect2 id="old-profile-instructions">
<title
>Configurare l'ambiente manualmente</title>
<para
>Questa documentazione includeva precedentemente istruzioni su quali variabili d'ambiente impostare per caricare il desktop appena generato. Queste istruzioni sono state spostate nell'appendice (<xref linkend="old-profile-setup"/>).</para>

<para
>Se vuoi configurare il tuo supporto per l'accesso, puoi consultare questa appendice o il file <filename
>sample-kde-env-master.sh</filename
> incluso nel codice sorgente di &kdesrc-build;.</para>

</sect2>

</sect1>

<sect1 id="kde-modules-and-selection">
<title
>Organizzazione e selezione dei moduli</title>

<sect2 id="kde-layers">
<title
>Organizzazione dei programmi di &kde;</title>

<para
>I programmi di &kde; sono divisi in diversi componenti, molti dei quali possono essere generati da &kdesrc-build;. Comprenderne l'organizzazione aiuterà a selezionare correttamente i moduli che vuoi generare. </para>

<orderedlist>
<listitem
><para
>Al livello più basso c'è la libreria &Qt;, che è una serie di strumenti molto potenti e multipiattaforma. &kde; si basa su &Qt;, e anche alcune delle librerie esterne richieste da &kde; si basano su &Qt;. &kdesrc-build; può generare &Qt; o usarne una versione già installata sul tuo sistema se è abbastanza recente.</para
></listitem>

<listitem
><para
>Sopra &Qt; ci sono le librerie necessarie al funzionamento dei programmi di &kde;. Alcune di queste non sono considerate parte di &kde; per la loro natura generica, ma sono comunque essenziali alla piattaforma di &kde;. Queste librerie sono raccolte in un raggruppamento di moduli <literal
>kdesupport</literal
> ma non sono considerate parte delle librerie <quote
>Frameworks</quote
>.</para>
</listitem>

<listitem
><para
>Sopra queste librerie essenziali si trova <ulink url="https://community.kde.org/Frameworks"
>&kde; Frameworks</ulink
>, di solito abbreviato in KF5, composto dalle librerie essenziali per il desktop &kde; Plasma, &kde; Applications e altro software di terze parti. </para
> </listitem>

<listitem
><para
>Sopra Frameworks ci sono diverse cose:</para>
    <itemizedlist>
        <listitem
><para
>Applicazioni di <quote
>terze parti</quote
>. Queste sono applicazioni che usano &kde; Frameworks o sono progettate per funzionare sotto &kde; Plasma ma non sono scritte da o associate al progetto &kde;.</para
></listitem>

        <listitem
><para
>Plasma, che è un ambiente desktop completo basato sugli <quote
>spazi di lavoro</quote
>. Questo è quello che gli utenti vedono quando <quote
>accedono a &kde;</quote
>.</para
></listitem>

        <listitem
><para
>La suite &kde; Application. Questa è una raccolta di software incluso con la piattaforma e il desktop &plasma;, raggruppato in moduli individuali, incluso i programmi di utilità come &dolphin;, giochi come <application
>KSudoku</application
> e software per la produttività, come &kontact;, rilasciato da &kde;.</para
></listitem>

        <listitem
><para
>Infine, c'è una raccolta di programmi (anch'essi organizzati in moduli) il cui sviluppo è supportato dalle risorse di &kde; (traduzione, controllo del codice sorgente, tracciamento degli errori, eccetera) ma non è rilasciato da &kde; come parte di Plasma o della suite Applications. Questi moduli sono noti come <quote
>Extragear</quote
>. </para
></listitem>
    </itemizedlist>
</listitem>
</orderedlist>
</sect2>

<sect2 id="selecting-modules">
<title
>Selezionare i moduli da generare</title>

<para
>La selezione di quali generare tra i moduli possibili è controllata dal <link linkend="kdesrc-buildrc"
>file di configurazione</link
>. Dopo la sezione <literal
>global</literal
> c'è un elenco di moduli da generare, delimitato da righe <userinput
>module</userinput
> e <userinput
>end module</userinput
>. Una voce esemplificativa per un modulo viene mostrata nel<xref linkend="conf-module-example"/>.</para>

<example id="conf-module-example">
<title
>Voce esemplificativa di un modulo nel file di configurazione</title>
<programlisting
>module <replaceable
>kdesrc-build-git</replaceable>
    # Le opzioni del modulo vanno qui, per esempio:
    <link linkend="conf-repository"
>repository</link
> kde:kdesrc-build
    <link linkend="conf-make-options"
>make-options</link
> -j4 # Esegue 4 compilazioni alla volta
end module
</programlisting>
</example>

<note
><para
>Nella pratica, il costrutto di questo modulo non viene in genere usato direttamente. La maggior parte dei moduli, al contrario, è specificata tramite gruppi di moduli come descritto più avanti.</para
></note>

<para
>Quando usi solo le voci <literal
>module</literal
>, &kdesrc-build; le genera nell'ordine elencato e non tenta di scaricare altri depositi oltre quelli che hai direttamente specificato. </para>

</sect2>

<sect2 id="module-sets">
<title
>Insiemi di moduli</title>

<para
>Il codice sorgente di &kde; è decomposto in un gran numero di depositi basati su Git relativamente piccoli. Per rendere più semplice la gestione del gran numero di depositi coinvolti in una qualsiasi installazione utile basata su &kde;, &kdesrc-build; supporta il raggruppamento multiplo dei moduli e tratta il gruppo come un <quote
>insieme di moduli</quote
>. </para>

<sect3 id="module-set-concept">
<title
>Il concetto di insieme di moduli di base</title>

<para
>Usando un insieme di moduli, puoi dichiarare rapidamente molti moduli di &git; da scaricare e generare, come se avessi scritto una dichiarazione del modulo a sé per ciascuno. L'opzione <link linkend="conf-repository"
>repository</link
> viene gestita specificatamente per configurare da dove ogni modulo viene scaricato, e ciascuna altra opzione dell'insieme di moduli viene copiata in ogni modulo generato in questo modo.</para>

<example id="example-using-module-sets">
<title
>Usare gli insiemi di moduli</title>
<programlisting
>global
    <option
><link linkend="conf-git-repository-base"
>git-repository-base</link
></option
> <replaceable
>kde-git</replaceable
> <replaceable
>kde:</replaceable>
end global

module <replaceable
>qt</replaceable>
    # Opzioni rimosse per brevità
end module

module-set <replaceable
>kde-support-libs</replaceable>
    <option
><link linkend="conf-repository"
>repository</link
></option
> <replaceable
>kde-git</replaceable>
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>automoc</replaceable
> <replaceable
>attica</replaceable
> <replaceable
>akonadi</replaceable>
end module-set

# Altri moduli secondo necessità...
module <replaceable
>kdesupport</replaceable>
end module
</programlisting>
</example>

<para
>Nel <xref linkend="example-using-module-sets"/> viene mostrato un breve insieme di moduli. Quando &kdesrc-build; lo rileva, si comporta come se, per ogni modulo dato sotto <option
>use-modules</option
>, sia dichiarato un modulo a sé, con un deposito (<option
>repository</option
>) uguale a quello dell'insieme di moduli subito seguito dal nome del modulo dato.</para>

<para
>Inoltre, si possono passare altre opzioni in un insieme di moduli, le quali vengono copiate a ciascun modulo creato in questo modo. Usando <option
>module-set</option
> è possibile creare rapidamente molti moduli &git; tutti basati sullo stesso &URL; del deposito. Inoltre è possibile dare agli insiemi un nome (come mostrato nell'esempio), che permette di riferirsi a tutto il gruppo di moduli dalla riga di comando.</para>

</sect3>
<sect3 id="module-sets-kde">
<title
>Supporto speciale per gli insiemi di moduli KDE</title>

<para
>Il supporto per gli insiemi di moduli descritto finora è generico per qualsiasi modulo basato su Git. Per i depositi Git di &kde; &kdesrc-build; include funzioni aggiuntive che facilitano il lavoro per gli utenti e gli sviluppatori. Questo supporto è abilitato specificando <literal
>kde-projects</literal
> come <option
>repository</option
> per l'insieme di moduli. </para>

<para
>&kdesrc-build; normalmente genera solo i moduli elencati nel file di configurazione, nell'ordine che hai stabilito. Ma con un insieme di moduli <literal
>kde-projects</literal
>, &kdesrc-build; può eseguire una risoluzione delle dipendenze dei moduli specifici di &kde; e, in aggiunta, includere automaticamente i moduli nella generazione, anche se specificati solo indirettamente.</para>

<example id="example-using-kde-module-sets">
<title
>Usare gli insiemi di moduli di kde-projects</title>
<programlisting
># Aggiunge solo un modulo per juk (il deposito kde/kdemultimedia/juk)
module-set <replaceable
>juk-set</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>juk</replaceable>
end module-set

# Aggiunge tutti i moduli presenti in kde/multimedia/*, incluso juk,
# ma nessun altra dipendenza
module-set <replaceable
>multimedia-set</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>kde/multimedia</replaceable>
end module-set

# Aggiunge tutti i moduli presenti in kde/multimedia/*, e tutte le dipendenze
# kde-projects che si trovano fuori da kde/kdemultimedia
module-set <replaceable
>multimedia-deps-set</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>kde/multimedia</replaceable>
    <option
>include-dependencies</option
> <replaceable
>true</replaceable>
end module-set

# Tutti i moduli creati al di fuori di questi tre gruppi di moduli sono automaticamente inseriti
# nell'ordine di dipendenza corretto, a prescindere dalle impostazioni di include-dependencies
</programlisting>
</example>

<tip
><para
>Questo costrutto di insiemi di moduli <literal
>kde-projects</literal
> è il metodo principale per dichiarare quali moduli vuoi generare.</para
></tip>

<para
>Tutti gli insiemi di moduli utilizzano le opzioni <link linkend="conf-repository"
>repository</link
> e <link linkend="conf-use-modules"
>use-modules</link
>. Gli insiemi di moduli <link linkend="kde-projects-module-sets"
><literal
>kde-projects</literal
></link
> hanno un valore <option
>repository</option
> predefinito, ma gli altri tipi di insiemi utilizzeranno anche l'opzione <link linkend="conf-git-repository-base"
>git-repository-base</link
>. </para>
</sect3>

</sect2>

<sect2 id="kde-projects-module-sets">
<title
>La banca dati dei moduli ufficiale di &kde;</title>

<para
>I depositi Git di &kde; consentono il raggruppamento dei moduli collegati a Git all'interno di collezioni di moduli collegati (per es. kdegraphics). Git non riconosce questi raggruppamenti, ma &kdesrc-build; lo può fare utilizzando gli <link linkend="module-sets"
>insiemi di moduli</link
> con un'opzione <option
>repository</option
> impostata a <quote
><literal
>kde-projects</literal
></quote
>.</para>

<para
>&kdesrc-build; riconoscerà che il deposito <literal
>kde-projects</literal
> va trattato in modo speciale, e modificherà il processo di generazione conseguentemente. Tra le altre cose, &kdesrc-build;:</para>

<itemizedlist>

<listitem
><para
>Scaricherà la più recente banca dati dei moduli dall'<ulink url=" https://commits.kde.org/"
>archivio git di &kde;</ulink
>.</para
></listitem>

<listitem
><para
>Cercherà di trovare in quella banca dati un modulo con il nome dato nell'impostazione <option
>use-modules</option
> dell'insieme di moduli.</para
></listitem>

<listitem
><para
>Per ciascun modulo trovato &kdesrc-build; cercherà nella banca dati il corretto deposito, basato sull'impostazione <link linkend="conf-branch-group"
>branch-group</link
> in vigore. Se per il gruppo del ramo esiste un deposito ed è attivo, &kdesrc-build; utilizzerà automaticamente quello per scaricare o aggiornare il codice sorgente. </para
></listitem>

</itemizedlist>

<note
><para
>Nella banca dati attuale, alcuni gruppi di moduli non solo hanno una raccolta di moduli, ma dichiarano <emphasis
>anche</emphasis
> il loro deposito &git;. In queste situazioni, &kdesrc-build; al momento preferisce il deposito &git; del gruppo invece di includere i depositi dei figli. </para
></note>

<para
>L'esempio seguente mostra come usare la banca dati dei moduli di &kde; per installare la libreria multimediale Phonon.</para>

<informalexample>
<programlisting
>module-set <replaceable
>media-support</replaceable>
    # Questa opzione deve essere kde-projects per usare la banca dati dei moduli.
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # Questa opzione sceglie quali moduli cercare nella banca dati.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>phonon/phonon</replaceable
> <replaceable
>phonon-gstreamer</replaceable
> <replaceable
>phonon-vlc</replaceable>
end module-set
</programlisting>
</informalexample>

<tip
><para
>Si usa <literal
>phonon/phonon</literal
> perché (con la presente banca dati dei progetti) &kdesrc-build; dovrebbe altrimenti decidere tra il gruppo di progetti chiamato <quote
>phonon</quote
> e il progetto individuale omonimo. Attualmente &kdesrc-build; sceglierebbe il primo, che genererebbe molti più motori del necessario.</para
></tip>

<para
>L'esempio seguente è forse più realistico, e mostra una funzionalità disponibile solo con la banca dati dei moduli di &kde;: generare tutte le applicazioni grafiche di &kde; con una sola dichiarazione.</para>

<informalexample>
<programlisting
>module-set <replaceable
>kdegraphics</replaceable>
    # Questa opzione deve essere kde-projects per usare la banca dati dei moduli.
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # Questa opzione sceglie quali moduli cercare nella banca dati.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <literal
>kdegraphics/libs</literal
> <literal
>kdegraphics/*</literal>
end module-set
</programlisting>
</informalexample>

<para
>Due importanti capacità sono qui dimostrate:</para>

<orderedlist>

<listitem
><para
>&kdesrc-build; permette di specificare moduli discendenti di un dato modulo, senza generare il modulo antenato, usando la sintassi <userinput
><replaceable
>nome-modulo</replaceable
>/*</userinput
>. In questo caso è anche necessario, perché il modulo base, kdegraphics, è indicato come disattivato in modo che non sia generato per sbaglio con i suoi moduli figli. Specificare i moduli discendenti permette a &kdesrc-build; di saltare il modulo disattivato. </para
></listitem>

<listitem
><para
>&kdesrc-build;, inoltre, non aggiungerà un certo modulo all'elenco di generazione più di una volta. Questo permette di impostare manualmente di generare prima <literal
>kdegraphics/libs</literal
>, prima del resto di <literal
>kdegraphics</literal
>, senza prima cercare di generare due volte <literal
>kdegraphics/libs</literal
>. Ciò era di solito richiesto per la gestione corretta delle dipendenze, e oggi resta un'opzione di ripiego nel caso in cui la banca dati del progetto &kde; non trovi i metadati delle dipendenze. </para
></listitem>
</orderedlist>
</sect2>

<sect2 id="ignoring-project-modules">
<title
>Scartare dei moduli del progetto &kde;</title>

<para
>Potresti decidere di voler generare tutti i programmi di un certo gruppo di moduli di &kde; <emphasis
>tranne</emphasis
> uno in particolare.</para>

<para
>Per esempio, il gruppo <literal
>kdeutils</literal
> contiene un programma chiamato <application
>kremotecontrol</application
>. Se la tua macchina non ha l'hardware necessario per ricevere i segnali inviati da un telecomando, potresti decidere di non voler scaricare, generare e installare <application
>kremotecontrol</application
> ogni volta che aggiorni <literal
>kdeutils</literal
>.</para>

<para
>Puoi farlo utilizzando l'opzione di configurazione <link linkend="conf-ignore-modules"
>ignore-modules</link
>. Sulla riga di comando l'<link linkend="ignoring-modules"
>opzione &cmd-ignore-modules;</link
> esegue la stessa cosa, ma è più comoda per filtrare un modulo solo una volta. </para>

<example id="example-ignoring-a-module">
<title
>Esempio per ignorare un modulo del progetto &kde; in un gruppo</title>
<programlisting
>module-set <replaceable
>utils</replaceable>
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # Questa opzione sceglie quali moduli cercare nella banca dati.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>kdeutils</replaceable>

    # Questa opzione «sottrae» i moduli da quelli scelti da use-modules sopra.
    <option
><link linkend="conf-ignore-modules"
>ignore-modules</link
></option
> <replaceable
>kremotecontrol</replaceable>
end module-set
module-set <replaceable
>graphics</replaceable>
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # Questa opzione sceglie quali moduli cercare nella banca dati.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>extragear/graphics</replaceable>

    # Questa opzione «sottrae» i moduli da quelli scelti da use-modules sopra.
    # In questo caso, sia extragear/graphics/kipi-plugins che
    # extragear/graphics/kipi-plugins/kipi-plugins-docs vengono ignorati.
    <option
><link linkend="conf-ignore-modules"
>ignore-modules</link
></option
> <replaceable
>extragear/graphics/kipi-plugins</replaceable>
end module-set
</programlisting>
</example>

</sect2>

</sect1>

<sect1 id="quick-start-conclusion">
<title
>Conclusioni del capitolo Per cominciare</title>
<para
>Queste sono le funzionalità e i concetti principali necessari per iniziare a usare &kdesrc-build;</para>

<para
>Per informazioni aggiuntive, puoi continuare a leggere questa documentazione. In particolare, sono riferimenti utili l'<link linkend="supported-cmdline-params"
>elenco delle opzioni della riga di comando</link
> e la <link linkend="conf-options-table"
>tabella delle opzioni del file di configurazione</link
>.</para>

<para
>La comunità &kde; mantiene anche una <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source"
>guida di riferimento in linea su wiki su come compilare il codice sorgente</ulink
> (in inglese), che tratta &kdesrc-build; e include suggerimenti e altre linee guida su come utilizzare questo strumento.</para>

</sect1>

</chapter>

<chapter id="features">
<title
>Funzionalità dello script</title>

<sect1 id="features-overview">
<title
>Panoramica delle funzionalità</title>

<para
>Le funzionalità di &kdesrc-build; includono: </para>

<itemizedlist>

<listitem
><para
>Puoi <quote
>far finta</quote
> di fare le operazioni. Se passi le opzioni <option
>--pretend</option
> o <option
>-p</option
> sulla riga di comando, lo script darà una descrizione dettagliata dei comandi che sta per eseguire, senza però eseguirli. Però, se non hai mai eseguito &kdesrc-build;, potresti dover usare prima il comando <command
>kdesrc-build <option
><link linkend="cmdline-metadata-only"
>--metadata-only</link
></option
></command
> in modo che <option
>--pretend</option
> funzioni. <tip
><para
>Per una descrizione ancora più prolissa di cosa sta facendo &kdesrc-build;, prova ad usare l'opzione <option
>--debug</option
>. </para
></tip>

</para
></listitem>

<listitem
><para
>&kdesrc-build; può (con l'aiuto del server FTP di &kde;) permettere il ritiro rapido di alcuni moduli di &subversion;. Se il modulo che stai ritirando è già stato preparato sul sito Web, &kdesrc-build; ne scaricherà una copia e la preparerà per l'uso sul tuo computer. </para>

<tip
><para
>In generale non c'è bisogno di alcun preparativo speciale per effettuare il ritiro iniziale di un modulo di &git;, visto che viene comunque scaricato tutto il deposito di &git;, quindi è facile per il server decidere cosa inviare.</para
></tip>

<para
>Ciò è più veloce per te, e aiuta a ridurre il carico sui server &subversion; anonimi di kde.org.</para>
</listitem>

<listitem
><para
>Un altro modo di fare più velocemente è avviare il processo di generazione di un modulo non appena il codice sorgente di quel modulo è stato scaricato (disponibile dalla versione 1.6). </para
></listitem>

<listitem
><para
>Supporto eccellente per la generazione delle librerie &Qt; (nel caso che i programmi di &kde; che stai generando dipendano su una versione recente delle &Qt;, non disponibile nella tua distribuzione). </para
></listitem>

<listitem
><para
>&kdesrc-build; non richiede un'interfaccia grafica per funzionare. Quindi, puoi generare software &kde; senza bisogno di un ambiente grafico. </para
></listitem>

<listitem
><para
>Supporta l'impostazione di opzioni predefinite per tutti i moduli (come le impostazioni di compilazione o le opzioni di configurazione). Queste opzioni possono anche essere cambiate per dei moduli specifici.</para>

<para
>Inoltre, &kdesrc-build; <link linkend="kdesrc-build-std-flags"
>aggiungerà dei flag standard</link
> appropriati per risparmiarti la fatica e i possibili errori derivanti dallo scriverli da te. NB: questo non si applica quando una toolchain (personalizzata) è configurata, per es., mediante: <link linkend="conf-cmake-toolchain"
>cmake-toolchain</link
> </para
></listitem>

<listitem
><para
>&kdesrc-build; può ritirare un <link linkend="using-branches"
>tag o ramo</link
> particolare di un modulo. Puoi anche assicurarti che sia ritirata una particolare <link linkend="conf-revision"
>revisione</link
> di un modulo. </para
></listitem>

<listitem
><para
>&kdesrc-build; può passare automaticamente a una cartella sorgente di un altro deposito, ramo o tag. Ciò viene fatto automaticamente quando cambi un'opzione che cambia l'&url; del deposito, ma devi usare l'opzione <link linkend="cmdline-src-only"
>--src-only</link
> per far sapere a &kdesrc-build; che è accettabile fare il passaggio. </para
></listitem>

<listitem
><para
>&kdesrc-build; può <link linkend="partial-builds"
>ritirare anche solo alcune porzioni di un modulo</link
>, per i casi in cui ti serve solo un programma da un grande modulo. </para
></listitem>

<listitem
><para
>Per gli sviluppatori: &kdesrc-build; vi <link linkend="ssh-agent-reminder"
>ricorderà</link
> se usate svn+ssh:// ma <application
>ssh-agent</application
> non è in esecuzione, visto che ciò porterebbe a richieste di password multiple da &ssh;. </para
></listitem>

<listitem
><para
>Può <link linkend="deleting-build-dir"
>eliminare la cartella di generazione</link
> di un modulo dopo la sua installazione per risparmiare spazio a spese del tempo di una successiva compilazione. </para
></listitem>

<listitem
><para
>Gli indirizzi delle cartelle usate da &kdesrc-build; sono configurabili (anche per modulo). </para
></listitem>

<listitem
><para
>Può usare &sudo;, o un altro comando specificato dall'utente, per <link linkend="root-installation"
>installare i moduli</link
> in modo che &kdesrc-build; non richieda di essere eseguito dall'amministratore. </para
></listitem>

<listitem
><para
>&kdesrc-build;, come impostazione predefinita, gira a <link linkend="build-priority"
>priorità ridotta</link
> per permetterti di usare il computer mentre &kdesrc-build; sta lavorando. </para
></listitem>

<listitem
><para
>Ha supporto per usare <link linkend="using-branches"
>i tag e i rami</link
> di &kde;. </para
></listitem>

<listitem
><para
>C'è supporto per <link linkend="resuming"
>riprendere una generazione</link
> da un modulo dato. Puoi anche <link linkend="ignoring-modules"
>ignorare temporaneamente alcuni moduli</link
> di una certa generazione. </para
></listitem>

<listitem
><para
>&kdesrc-build; mostrerà <link linkend="build-progress"
>l'avanzamento della generazione</link
> quando si usa &cmake;, e terrà sempre conto del tempo di generazione, in modo da sapere quanto ci ha messo. </para
></listitem>

<listitem
><para
>Ha già un insieme di opzioni predefinite appropriate per generare un'installazione monoutente di &kde; dai depositi anonimi del codice sorgente. </para
></listitem>

<listitem
><para
>Espansione della tilde per le opzioni di configurazione. Per esempio, puoi specificare: <programlisting
>qtdir ~/kdesrc/build/qt</programlisting>
</para
></listitem>

<listitem
><para
>Configura automaticamente un sistema di generazione, con la cartella sorgente non corrispondente alla cartella di generazione, in modo da tenere la prima pulita. </para
></listitem>

<listitem
><para
>Puoi specificare che le opzioni globali si applichino a ogni modulo da ritirare, e puoi anche specificare opzioni da applicare a singoli moduli. </para
></listitem>

<listitem
><para
>Rigenerazioni complete forzate, eseguendo &kdesrc-build; con l'opzione <option
>--refresh-build</option
>. </para
></listitem>

<listitem
><para
>Puoi specificare varie variabili d'ambiente da usare durante la generazione, incluse <envar
>KDEDIR</envar
>, <envar
>QTDIR</envar
>, <envar
>DO_NOT_COMPILE</envar
> e <envar
>CXXFLAGS</envar
>. </para
></listitem>

<listitem
><para
>I registri dei comandi hanno data e ora, in modo da avere sempre un registro dell'esecuzione dello script. Inoltre, uno speciale collegamento simbolico chiamato <filename
>latest</filename
> viene creato e punta sempre al file più recente della cartella dei registri. </para
></listitem>

<listitem
><para
>Puoi ritirare anche solo una parte di un modulo &subversion; di &kde;. Per esempio, potresti ritirare solo <application
>taglib</application
> da <application
>kdesupport</application
>. </para
></listitem>

</itemizedlist>

</sect1>

<sect1 id="kdesrc-build-logging">
<title
>Registro della generazione di &kdesrc-build;</title>

<sect2 id="logging-overview">
<title
>Panoramica del registro</title>

<para
>La registrazione è una funzionalità di &kdesrc-build; grazie alla quale l'output di ogni comando eseguito da &kdesrc-build; viene salvato in un file per essere analizzato in seguito, se necessario. Ciò si fa perché è spesso necessario avere l'output di questi programmi in caso di un errore di generazione, perché ci sono molti motivi per cui una generazione potrebbe non riuscire.</para>

<sect3 id="log-directory-layout">
<title
>Schema della cartella di registro</title>

<para
>I registri sono sempre tenuti nella cartella di registro. L'indirizzo della cartella di registro è controllato dall'opzione <link linkend="conf-log-dir"
>log-dir</link
>, che ha come valore predefinito <filename class="directory"
><symbol
>${cartella-sorgente}</symbol
>/log</filename
> (dove <symbol
>${cartella-sorgente}</symbol
> è il valore dell'opzione <link linkend="conf-source-dir"
>source-dir</link
>); in questa sezione, verrà indicato con <symbol
>${cartella-registro}</symbol
>).</para>

<para
>Sotto <symbol
>${cartella-registro}</symbol
> c'è una serie di cartelle, una per ogni volta che è stato eseguito &kdesrc-build;. Ogni cartella ha per nome la data e il numero di esecuzione. Per esempio, la seconda volta che &kdesrc-build; è stato eseguito il 26 maggio 2004 verrebbe creata la cartella <filename
>2004-05-26-02</filename
>, dove 2004-05-26 è per la data e -02 per il numero dell'esecuzione.</para>

<para
>Per comodità, &kdesrc-build; creerà anche un collegamento ai registri dell'ultima esecuzione, chiamato <filename class="directory"
>latest</filename
>. Quindi i registri dell'ultima esecuzione di &kdesrc-build; saranno sempre sotto <filename class="directory"
><symbol
>${cartella-registro}</symbol
>/latest</filename
>. </para>

<para
>Ogni cartella di un'esecuzione di &kdesrc-build; conterrà a sua volta una serie di cartelle, una per ogni modulo di &kde; che &kdesrc-build; ha cercato di generare. Inoltre, la cartella conterrà un file <filename
>build-status</filename
>, che ti permette di determinare quali moduli sono stati generati correttamente e quali no.</para>

<note
><para
>Se il modulo contiene un sottomodulo (come extragear/multimedia, playground/utils, o KDE/kdelibs), ci sarà una struttura corrispondente nelle cartelle di registro. Per esempio, i registri di KDE/kdelibs dopo l'ultima esecuzione di &kdesrc-build; saranno in <filename class="directory"
><symbol
>${cartella-registro}</symbol
>latest/KDE/kdelibs</filename
>, e non in <filename class="directory"
><symbol
>${cartella-registro}</symbol
>/latest/kdelibs</filename
>. </para
></note>

<para
>In ogni cartella di registro dei moduli troverai una serie di file per ogni operazione effettuata da &kdesrc-build;. Se &kdesrc-build; aggiorna un modulo, potresti vedere dei file come <filename
>svn-co.log</filename
> (per il ritiro di un modulo) o <filename
>svn-up.log</filename
> (per l'aggiornamento di un modulo che è stato ritirato in precedenza). Se è stato eseguito il comando <command
>configure</command
>, dovresti aspettarti di vedere un <filename
>configure.log</filename
> nella cartella.</para>

<para
>Se si è verificato un errore, dovresti poterne vedere una spiegazione in uno dei file. Per aiutarti a capire quale file contiene l'errore, &kdesrc-build; creerà un collegamento dal file contenente l'errore (come <filename
>build-1.log</filename
>) a un file chiamato <filename
>error.log</filename
>.</para>

<para
>Insomma, per vedere perché un modulo non è stato generato dopo l'ultima esecuzione di &kdesrc-build; la prima cosa che devi guardare è il file <filename
><symbol
>${cartella-registro}</symbol
>/latest/<replaceable
>nome-modulo</replaceable
>/error.log</filename
>. </para>

<tip
><para
>Se il file <filename
>error.log</filename
> è vuoto (soprattutto dopo un'installazione), forse non c'è davvero stato nessun errore. Alcuni degli strumenti usati dal sistema di generazione di &kde; segnaleranno errori per sbaglio anche se in realtà non ce ne sono.</para>

<para
>Inoltre, alcuni comandi evaderanno il redirezionamento dell'output di &kdesrc-build; ed eviteranno il file di registro in certe circostanze (di solito quando si effettua il primo ritiro da &subversion;), e l'output di errore in quel caso non è nel file di registro ma nella &konsole; o nel terminale dove hai eseguito &kdesrc-build;.</para>
</tip>

</sect3>
</sect2>
</sect1>

</chapter>

<chapter id="kdesrc-buildrc">
<title
>Configurare &kdesrc-build;</title>

<sect1 id="kdesrc-buildrc-overview">
<title
>Panoramica della configurazione di &kdesrc-build;</title>

<para
>Per usare lo script, devi avere un file chiamato <filename
>.kdesrc-buildrc</filename
> nella tua cartella Home, il quale descrive i moduli che vuoi scaricare e generare, e tutte le opzioni e parametri di configurazione da usare per questi moduli. </para>

<sect2 id="kdesrc-buildrc-layout">
<title
>Disposizione del file di configurazione</title>

<sect3 id="kdesrc-buildrc-layout-global">
<title
>Configurazione globale</title>

<para
>Il file di configurazione parte con le opzioni globali, specificate come segue: </para>

<programlisting
>global
<replaceable
>nome-opzione valore-opzione</replaceable>
<replaceable
>[...]</replaceable>
end global
</programlisting>

</sect3>
<sect3 id="kdesrc-buildrc-layout-modules">
<title
>Configurazione dei moduli</title>

<para
>Seguono quindi una o più sezioni per i moduli, specificate in una delle due seguenti forme: </para>

<itemizedlist>
<listitem>
<programlisting
>module <replaceable
>nome-modulo</replaceable>
<replaceable
>nome-opzione valore-opzione</replaceable>
<replaceable
>[...]</replaceable>
end module
</programlisting>
</listitem>

<listitem>
<programlisting
>module-set <replaceable
>nome-insieme-moduli</replaceable>
  repository <userinput
>kde-projects</userinput
> or <userinput
><replaceable
>git://host.org/percorso/a/deposito.git</replaceable
></userinput>
  use-modules <replaceable
>nomi-moduli</replaceable>

# Si possono impostare anche altre opzioni
<replaceable
>nome-opzione valore-opzione</replaceable>
<replaceable
>[...]</replaceable>
end module-set
</programlisting>
</listitem>
</itemizedlist>

<important
><para
>Nota che la seconda forma, con gli insiemi di moduli, <emphasis
>funziona solo con i moduli basati su Git</emphasis
>.</para
></important>

<para
>Per i moduli di Subversion, <replaceable
>nome-modulo</replaceable
> deve essere un modulo del deposito &subversion; di &kde; (per esempio, kdeartwork o kde-wallpapers), anche se è possibile aggirare questa limitazione se <link linkend="conf-override-url"
>specifichi manualmente l'URL di &subversion;</link
>. </para>

<para
>Per i moduli di Git, il nome del modulo può essere fondamentalmente qualsiasi cosa vuoi, finché non duplica altri nomi di moduli nella configurazione. Tieni presente che la disposizione delle cartelle del codice sorgente e di generazione sarà basata sul nome del modulo se non usi l'opzione <link linkend="conf-dest-dir"
>dest-dir</link
>. </para>

<para
>Tuttavia, per gli <emphasis
>insiemi di moduli</emphasis
> di Git, i <replaceable
>nomi-moduli</replaceable
> devono corrispondere a dei veri moduli Git nel deposito (<option
>repository</option
>) scelto. Vedi <link linkend="conf-git-repository-base"
>git-repository-base</link
> o <link linkend="conf-use-modules"
>use-modules</link
> per maggiori informazioni. </para>

</sect3>

<sect3 id="kdesrc-buildrc-option-values">
<title
>Elaborazione dei valori delle opzioni</title>

<para
>In generale, l'intero contenuto della riga dopo <replaceable
>nome-opzione</replaceable
> viene utilizzato come <replaceable
>valore-opzione</replaceable
>.</para>

<para
>Una modifica che &kdesrc-build; esegue è la sequenza <userinput
>${<replaceable
>nome-della-opzione</replaceable
>}</userinput
> sostituita dal valore di quella opzione preso dalla configurazione globale. Questo ti permette di fare riferimento al valore di opzioni esistenti, incluse le opzioni già impostate da &kdesrc-build;.</para>

<para
>Per osservarne un esempio d'uso, vedi <xref linkend="make-options-example"/>.</para>

</sect3>

<sect3 id="kdesrc-buildrc-options-groups">
<title
>Gruppi <quote
>options</quote
></title>

<para
>C'è un ultimo tipo di voce del file di configurazione, i gruppi <literal
>options</literal
>, che possono essere presenti ovunque ci sia un <literal
>module</literal
> o un <literal
>module-set</literal
>.</para>

<programlisting
>options <replaceable
>nome-modulo</replaceable>
<replaceable
>nome-opzione valore-opzione</replaceable>
<replaceable
>[...]</replaceable>
end options
</programlisting>

<para
>Un gruppo <literal
>options</literal
> può includere opzioni impostate per sé stesso come qualsiasi dichiarazione di modulo, e viene associato al modulo corrente. Tutte le opzioni impostate in questo modo verranno usate per <emphasis
>sostituirsi</emphasis
> alle opzioni impostate nel modulo associato.</para>

<important
><para
>Il nome del modulo associato <emphasis
>deve</emphasis
> corrispondere al nome dato nella dichiarazione <literal
>options</literal
>. Fai attenzione agli errori di battitura.</para
></important>

<para
>Questo è utile a dichiarare un intero <literal
>module-set</literal
> in cui tutti i moduli devono usare le stesse opzioni, e poi usare i gruppi <literal
>options</literal
> per fare modifiche individuali.</para>

<para
>I gruppi <literal
>options</literal
> si applicano anche agli insiemi di moduli specificati. Questo consente agli utenti esperti di usare un file di configurazione comune (che include le dichiarazioni <literal
>module-set</literal
>) come base, e poi eseguire modifiche alle opzioni utilizzate da questi insiemi nei file di configurazione che utilizzano il comando <literal
><link linkend="kdesrc-buildrc-including"
>include</link
></literal
> per fare riferimento alla configurazione di base.</para>

<example id="ex-options-group">
<title
>Esempio dell'uso di <literal
>options</literal
></title>

<para
>In questo esempio scegliamo di generare tutti i moduli del raggruppamento di programmi multimediali di &kde;. Però, vogliamo usare una versione diversa dell'applicazione &kmix; (forse per verificare la correzione di un errore). Funziona così:</para>

<programlisting
>module-set <replaceable
>kde-multimedia-set</replaceable>
  repository <userinput
>kde-projects</userinput>
  use-modules <replaceable
>kde/kdemultimedia</replaceable>
  branch <replaceable
>master</replaceable>
end module-set

# kmix fa parte del gruppo kde/kdemultimedia, e anche se non lo abbiamo mai
# nominato fin qui nel file, &kdesrc-build; capirà la modifica.
options <replaceable
>kmix</replaceable>
  branch <replaceable
>KDE/4.12</replaceable>
end options
</programlisting>

<para
>Adesso, quando esegui &kdesrc-build;, tutti i programmi multimediali di &kde; verranno generati dal ramo <quote
>master</quote
> del deposito sorgente, ma &kmix; verrà generato dal ramo precedente <quote
>KDE/4.12</quote
>. Usando <literal
>options</literal
> non hai dovuto elencare individualmente tutti gli <emphasis
>altri</emphasis
> programmi multimediali di &kde; per impostarli al ramo giusto.</para>

</example>

<note>
<para
>Nota che questa funzionalità è disponibile solo a partire dalla versione 1.16 di &kdesrc-build;, o usando la versione di sviluppo di &kdesrc-build; a partire dal 12 gennaio 2014.</para
></note>

</sect3>

</sect2>

<sect2 id="kdesrc-buildrc-including">
<title
>Includere altri file di configurazione</title>

<para
>Nel file di configurazione puoi fare riferimento ad altri file usando la parola chiave <literal
>include</literal
> con un file, il che sarà come inserire il file riferito nel file di configurazione in quel punto. </para>

<informalexample
><para
>Per esempio, potresti avere qualcosa di simile:</para>
<programlisting
>global
    include <replaceable
>~/common-kdesrc-build-options</replaceable>

    # Inserisci qui opzioni specifiche.

end global
</programlisting>
</informalexample>

<note
><para
>Se non specifichi il percorso completo al file da includere, il file verrà cercato a partire dalla cartella contenente il file sorgente. Questo funziona anche ricorsivamente.</para
></note>

</sect2>

<sect2 id="kdesrc-buildrc-common">
<title
>Opzioni di configurazione comunemente usate</title>

<para
>Segue un elenco di opzioni comunemente usate. Fai clic sull'opzione per saperne di più. Per vederne l'elenco completo, vedi <xref linkend="conf-options-table"/>. </para>

<itemizedlist>
<listitem
><para
><link linkend="conf-cmake-options"
>cmake-options</link
>, per definire quali flag con cui configurare un modulo usando &cmake;.</para
></listitem>
<listitem
><para
><link linkend="conf-branch"
>branch</link
>, per ritirare da un ramo invece che /trunk (per &subversion;) o <literal
>master</literal
> (per Git).</para
></listitem>
<listitem
><para
><link linkend="conf-configure-flags"
>configure-flags</link
>, per definire quali flag con cui configurare &Qt;.</para
></listitem>
<listitem
><para
><link linkend="conf-kdedir"
>kdedir</link
>, per impostare la cartella in cui installare &kde;.</para
></listitem>
<listitem
><para
><link linkend="conf-make-options"
>make-options</link
>, per passare opzioni al programma &make; (come il numero di processori da usare).</para
></listitem>
<listitem
><para
><link linkend="conf-qtdir"
>qtdir</link
>, per impostare il percorso alle librerie &Qt;.</para
></listitem>
<listitem
><para
><link linkend="conf-source-dir"
>source-dir</link
>, per cambiare da dove scaricare il codice sorgente.</para
></listitem>
</itemizedlist>

</sect2>
</sect1>
<sect1 id="conf-options-table">
<title
>Tabella delle opzioni di configurazione disponibili</title>

<para
>Ecco una tabella delle varie opzioni, contenente le informazioni seguenti:</para>

<itemizedlist>

<listitem
><para
>Il nome dell'opzione;</para
></listitem>

<listitem
><para
>Una descrizione di come &kdesrc-build; reagisce se l'opzione è impostata sia nella sezione globale che nella sezione del modulo del <link linkend="configure-data"
>file di configurazione</link
> quando si genera un modulo;</para
></listitem>

<listitem
><para
>Commenti specifici sullo scopo e sull'uso dell'opzione.</para
></listitem>

</itemizedlist>

<table id="option-table">
<title
>Tabella delle opzioni</title>
<tgroup cols="3">

<thead>
<row>
<entry
>Nome dell'opzione</entry>
<entry
>Sostituibilità</entry>
<entry
>Note</entry>
</row>
</thead>

<tbody>

<row>
<entry
>apidox</entry>
<entry
></entry>
<entry
><para
>Questa opzione era usata per permettere di generare la documentazione delle API dei moduli di &kde;. È stata rimossa in &kdesrc-build; 1.6.3 a causa di mancanza di supporto. La documentazione delle API è disponibile in rete su <ulink url="https://api.kde.org/"
>kde.org</ulink
>. Inoltre è possibile generare la documentazione delle API di &kde; usando lo script <command
>kdedoxygen.sh</command
> incluso nel modulo kde-dev-scripts. Vedi il sito <ulink url="https://techbase.kde.org/Development/Tools/apidox"
>TechBase di &kde;</ulink
> per maggiori dettagli.</para>
</entry>
</row>

<row>
<entry
>apply-qt-patches</entry>
<entry
></entry>
<entry
>Questa opzione è stata rimossa in &kdesrc-build; 1.10. Per ottenere lo stesso effetto, vedi <xref linkend="using-qt"/> e l'opzione <link linkend="conf-repository"
><option
>repository</option
></link
>.</entry>
</row>

<row id="conf-async">
<entry
>async</entry>
<entry
>Non sostituibile</entry>
<entry
><para
>Questa opzione attiva la modalità di operazione asincrona, nella quale l'aggiornamento del codice sorgente e il processo di generazione saranno effettuati in parallelo, invece che attendere la fine di tutti gli aggiornamenti prima di avviare il processo di generazione. Questa opzione, come valore predefinito, abilita la modalità asincrona. Per disattivarla, imposta questa opzione a <userinput
>false</userinput
>.</para>
<para
>Questa opzione è disponibile dal rilascio 1.6.</para
></entry>
</row>

<row id="conf-binpath">
<entry
>binpath</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Imposta questa opzione per impostare la variabile d'ambiente <envar
>PATH</envar
> durante la generazione. Non puoi sostituire questa impostazione nelle opzioni di un modulo. Il valore predefinito è quello di $<envar
>PATH</envar
> così com'è all'avvio dello script. Questa variabile d'ambiente dovrebbe includere i percorsi, separati da due punti, della toolchain di sviluppo. I percorsi <filename class="directory"
>$<envar
>KDEDIR</envar
>/bin</filename
> e <filename class="directory"
>$<envar
>QTDIR</envar
>/bin</filename
> sono aggiunti automaticamente. Puoi usare la tilde (~) per qualsiasi percorso che aggiungi con questa opzione.</para>
</entry>
</row>

<row id="conf-branch">
<entry
>branch</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Imposta questa opzione per ritirare i file da un ramo di &kde; invece che dal ramo predefinito, cioè <replaceable
>master</replaceable
> per i moduli su &git; e <replaceable
>trunk</replaceable
> per i moduli su &subversion;, dove si svolge lo sviluppo di &kde;.</para>

<para
>Per esempio, per ritirare il ramo 4.6 di &kde;, devi impostare questa opzione a <replaceable
>4.6</replaceable
>.</para>

<para
>Se &kdesrc-build; non riesce a scaricare correttamente un ramo con questa opzione, potresti dover specificare manualmente l'&url; da cui scaricare usando le opzioni <link linkend="conf-module-base-path"
>module-base-path</link
> o <link linkend="conf-override-url"
>override-url</link
>.</para>

<note
><para
>Per la maggior parte dei moduli di &kde;, vorrai probabilmente usare piuttosto l'opzione <link linkend="conf-branch-group"
>branch-group</link
>, e usare questa di volta in volta per le eccezioni.</para
></note>

</entry>
</row>

<row id="conf-branch-group">
<entry
>branch-group</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry>

<para
>Imposta questa opzione a un gruppo generale da cui vuoi scegliere i moduli.</para>

<para
>Per i tipi di moduli su &git; supportati, &kdesrc-build; determinerà automaticamente il ramo effettivo da usare in base a delle regole stese dagli sviluppatori di &kde; (queste sono visibili nel deposito del codice sorgente <literal
>kde-build-metadata</literal
> nella tua cartella del codice). Quando viene determinato un ramo, questo viene usato come se lo avessi specificato tu con l'opzione <link linkend="conf-branch"
>branch</link
>. </para>

<para
>Questo è utile se stai solo cercando di tenerti aggiornato sullo sviluppo senza dover prestare attenzione a tutti i cambi dei nomi dei rami.</para>

<para
>I gruppi di rami attuali (alla data dell'11 agosto 2013) sono:</para>

<itemizedlist>

<listitem
><para
><literal
>stable-qt4</literal
>, per tracciare le correzioni alle librerie e alle applicazioni di &kde; basate su &Qt; 4.</para
></listitem>

<listitem
><para
><literal
>latest-qt4</literal
>, per tracciare lo sviluppo e le nuove funzionalità delle librerie e delle applicazioni di &kde; basate su &Qt; 4.</para
></listitem>

<listitem
><para
><literal
>kf5-qt5</literal
>, per tracciare lo sviluppo <quote
>all'ultima frontiera</quote
> per l'imminente infrastruttura 5 di &kde; basata su &Qt; 5, lo spazio di lavoro di &plasma; di seconda generazione, eccetera.</para
></listitem>

</itemizedlist>

<para
>Nota che se scegli un ramo <emphasis
>da te</emphasis
> con <literal
>branch</literal
>, questo si sostituirà alle impostazioni appena presentate. Lo stesso vale per qualsiasi altra opzione di selezione dei rami come <link linkend="conf-tag"
>tag</link
>.</para>

<para
>Questa opzione è stata aggiunta in &kdesrc-build; 1.16-pre2.</para>

<note
><para
>Questa opzione si applica solo ai moduli &git; <literal
>kde-projects</literal
> (il caso normale). Vedi anche <xref linkend="kde-projects-module-sets"/>. </para
></note>

</entry>
</row>

<row id="conf-build-dir">
<entry
>build-dir</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Usa questa opzione per cambiare la cartella che conterrà il codice costruito. Ci sono tre diversi modi di usarla: <orderedlist
><listitem
><para
>Relativa alla cartella sorgente della cartella del codice sorgente &subversion; di &kde; (vedi <link linkend="conf-source-dir"
>l'opzione source-dir</link
>). Questa è la modalità predefinita, e viene selezionata se scrivi un nome di cartella che non comincia per tilde (~) o sbarra (/).</para
><para
>Il valore predefinito è <filename class="directory"
>build</filename
>.</para
></listitem
><listitem
><para
>Percorso assoluto. Se specifichi un percorso che comincia per /, quel percorso sarà usato direttamente. Per esempio, <filename class="directory"
>/tmp/kde-obj-dir/</filename
>.</para
></listitem
><listitem
><para
>Relativo alla tua cartella Home. Se specifichi un percorso che comincia per ~, il percorso è inteso relativo alla tua cartella Home, analogamente all'espansione della tilde in una shell. Per esempio, <filename class="directory"
>~/builddir</filename
> imposterebbe la cartella di generazione a <filename class="directory"
>/home/nome-utente/builddir</filename
>.</para
></listitem
></orderedlist
> Forse ti sorprenderà, ma questa opzione è effettivamente modificabile a seconda del modulo. </entry>
</row>

<row id="conf-build-when-unchanged">
<entry
>build-when-unchanged</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Usa questa opzione per controllare se &kdesrc-build; debba sempre cercare di generare un modulo che non ha avuto alcun aggiornamento al codice sorgente.</para>

<para
>Impostando <option
>build-when-unchanged</option
> a <userinput
>true</userinput
>, &kdesrc-build; cercherà sempre di generare un modulo, anche se il modulo non ha avuto alcun aggiornamento al codice sorgente. Questa è l'impostazione predefinita perché è quella che porta con più probabilità a una generazione corretta.</para>

<para
>Impostando <option
>build-when-unchanged</option
> a <userinput
>false</userinput
>, &kdesrc-build; cercherà di generare il modulo solo se ha ricevuto degli aggiornamenti, o in altre situazioni in cui è probabile che una rigenerazione sia effettivamente necessaria. Questo può far risparmiare tempo, specialmente se esegui &kdesrc-build; ogni giorno, o anche più spesso.</para>

<important
><para
>Questa funzionalità viene fornita solo come ottimizzazione. Come per molte altre ottimizzazioni, ci sono dei compromessi sulla correttezza dell'installazione. Per esempio, le modifiche ai moduli qt o kdelibs potrebbero causare una rigenerazione di tutti gli altri moduli, anche se il codice sorgente non è cambiato affatto.</para
></important>
</entry>
</row>

<row id="conf-checkout-only">
<entry
>checkout-only</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Questa opzione è stata rimossa nel gennaio 2022. Controllava la capacità di ritirare sottoinsiemi di un module da un deposito Subversion.</para>
</entry>
</row>

<row id="conf-cmake-generator">
<entry
>cmake-generator</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Usa questa opzione per specificare quale generatore deve essere usato con &cmake;. Al momento sono supportati <literal
>Ninja</literal
> e <literal
>Unix Makefiles</literal
> e pure i generatori aggiuntivi basati su di essi, come <literal
>Eclipse CDT4 - Ninja </literal
>. I valori non validi (non supportati) vengono ignorati e trattati come non impostati. Se non è impostato nulla, sarà utilizzato <literal
>Unix Makefiles</literal
> come predefinito. </para>

<para
>È da notare che se viene specificato anche un generatore valido mediante <link linkend="conf-cmake-options"
>cmake-options</link
>, esso ignorerà il valore per <literal
>cmake-generator</literal
>.</para
></entry>
</row>

<row id="conf-cmake-toolchain">
<entry
>cmake-toolchain</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Utilizza questa opzione per specificare un file di toolchain da usare con &cmake;. </para>
<para
>Quando viene configurato un file di toolchain valido, &kdesrc-build; <emphasis
>non imposterà più le variabili d'ambiente in modo automatico</emphasis
>. Puoi utilizzare i parametri &set-env;, &binpath; e &libpath; per correggere manualmente l'ambiente, se il tuo file di toolchain non funziona subito con &kdesrc-build;. Per maggiori informazioni, consulta <link linkend="kdesrc-build-std-flags"
>la panoramica dei flag standard aggiunti da &kdesrc-build;</link
>. </para>
<para
>È da notare che se una toolchain valida è specificata anche mediante <link linkend="conf-cmake-options"
>cmake-options</link
>, questo valore verrà usato al posto di quello di <literal
>cmake-toolchain</literal
>.</para
></entry>
</row>

<row id="conf-cmake-options">
<entry
>cmake-options</entry>
<entry
>Si aggiunge alle opzioni globali per il sistema di generazione predefinito, si sostituisce ad esse per gli altri sistemi di generazione.</entry>
<entry
><para
>Usa questa opzione per specificare quali flag passare a &cmake; quando crei il sistema di generazione per il modulo. Quando usata come opzione globale, viene applicata a tutti i moduli generati da questo script. Quando usata come opzione per un modulo, viene aggiunta in fondo alle opzioni globali. Ciò ti permette di specificare opzioni comuni di &cmake; nella sezione globale.</para>

<para
>Questa opzione non si applica a qt (che non usa &cmake;). Usa invece <link linkend="conf-configure-flags"
>configure-flags</link
>.</para>

<para
>Se viene specificato un generatore valido tra le opzioni elencate, esso ignorerà il valore del <link linkend="conf-cmake-generator"
>cmake-generator</link
>. I generatori non validi (non supportati) vengono ignorati e non saranno passati a &cmake;. </para>

<para
>Se viene specificato un file di toolchain valido tra le opzioni elencate, esso ignorerà il valore del <link linkend="conf-cmake-toolchain"
>cmake-toolchain</link
>. Le toolchain non valide saranno ignorate e non saranno passate a &cmake;. </para>

<para
>Siccome queste opzioni sono passate direttamente alla riga di comando di &cmake;, dovrebbero essere date come sarebbero passate a &cmake;. Per esempio:</para>

<screen
>cmake-options -DCMAKE_BUILD_TYPE=RelWithDebInfo
</screen>

<para
>Siccome è un po' fastidioso, &kdesrc-build; si dà da fare per assicurarsi che, fintanto che le altre opzioni sono correttamente impostate, dovresti poter lasciare questa opzione in bianco. In altre parole, i parametri <emphasis
>necessari</emphasis
> di &cmake; sono impostati automaticamente.</para
></entry>
</row>

<row id="conf-colorful-output">
<entry
>colorful-output</entry>
<entry
>Non sostituibile</entry>
<entry
>Imposta questa opzione a <userinput
>false</userinput
> (falso) per disattivare l'output colorato di &kdesrc-build;. Questa opzione ha valore predefinito <replaceable
>true</replaceable
> (vero). Nota che &kdesrc-build; non passerà codici di colore a nient'altro che a un terminale (come <application
>xterm</application
>, &konsole;, o la normale console di &Linux;). </entry>
</row>

<row id="conf-compile-commands-export">
<entry
>compile-commands-export</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry>
<para
>Abilita la generazione del comando <literal
>compile_commands.json</literal
> tramite CMake all'interno della cartella di generazione. Questa opzione è predefinita a <replaceable
>true</replaceable
>, impostala a <userinput
>false</userinput
> per disabilitare questo comportamento. </para>
</entry>
</row>

<row id="conf-compile-commands-linking">
<entry
>compile-commands-linking</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry>
<para
>Abilita la creazione di collegamenti simbolici da <literal
>compile_commands.json</literal
> generato tramite CMake all'interno della cartella di generazione alla corrispondente cartella sorgente. Questa opzione è predefinita a <replaceable
>false</replaceable
>, impostala a <userinput
>true</userinput
> per abilitare la creazione automatica di collegamenti simbolici. </para>
</entry>
</row>

<row id="conf-configure-flags">
<entry
>configure-flags</entry>
<entry
>Si aggiunge alle opzioni globali per il sistema di generazione predefinito, si sostituisce ad esse per gli altri sistemi di generazione.</entry>
<entry
><para
>Usa questa opzione per specificare quali flag passare a <command
>./configure</command
> quando crei il sistema di generazione per il modulo. Quando usata come opzione globale, viene applicata a tutti i moduli generati da questo script. <emphasis
>Questa opzione funziona solo per qt</emphasis
>.</para>

<para
>Per cambiare le impostazioni di configurazione dei moduli di &kde;, vedi <link linkend="conf-cmake-options"
>cmake-options</link
>. </para>
</entry>
</row>

<row id="conf-custom-build-command">
<entry
>custom-build-command</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale (opzione del sistema di generazione)</entry>
<entry>
    <para
>Questa opzione può essere impostata per eseguire un altro comando (al posto di <command
>make</command
>, per esempio) per effettuare il processo di generazione. &kdesrc-build; di solito dovrebbe fare la cosa giusta, quindi non ci dovrebbe essere bisogno di questa opzione. È comunque utile per usare metodi di generazione alternativi. </para>

    <para
>Il valore di questa opzione si usa come la riga di comando da eseguire, modificata dall'opzione <link linkend="conf-make-options"
>make-options</link
> come normalmente. </para>
</entry>
</row>

<row id="conf-cxxflags">
<entry
>cxxflags</entry>
<entry
>Si aggiunge alle opzioni globali per il sistema di generazione predefinito, si sostituisce ad esse per gli altri sistemi di generazione.</entry>
<entry
><para
>Usa questa opzione per specificare quali flag usare per generare il modulo. Questa opzione viene specificata qui invece che con <link linkend="conf-configure-flags"
>configure-flags</link
> o <link linkend="conf-cmake-options"
>cmake-options</link
> perché questa opzione imposterà anche la variabile d'ambiente <envar
>CXXFLAGS</envar
> durante il processo di generazione.</para>

<para
>Nota che per &kde; 4 e ogni altro modulo che usi &cmake; è necessario impostare l'opzione <option
>CMAKE_BUILD_TYPE</option
> a <userinput
>none</userinput
> quando si configura il modulo. Questo si può fare usando l'opzione <link linkend="conf-cmake-options"
>cmake-options</link
>. </para>
</entry>
</row>

<row id="conf-dest-dir">
<entry
>dest-dir</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Usa questa opzione per cambiare il nome che viene dato a un modulo sul disco. Per esempio, se il modulo era extragear-network, usando questa opzione puoi rinominarlo a extragear-network. Nota che sebbene ciò cambi il nome del modulo sul disco, non è una buona idea includere cartelle o separatori di cartelle nel nome, perché ciò interferirà con le opzioni <link linkend="conf-build-dir"
>build-dir</link
> o <link linkend="conf-source-dir"
>source-dir</link
>. </entry>
</row>

<row id="conf-disable-agent-check">
<entry
>disable-agent-check</entry>
<entry
>Non sostituibile</entry>
<entry
>Normalmente, se stai usando &ssh; per scaricare i sorgenti da &subversion; (come nel caso in cui stessi usando il protocollo <filename
>svn+ssh</filename
>), &kdesrc-build; cercherà di assicurarsi che se stai usando <application
>ssh-agent</application
>, questo stia effettivamente gestendo delle identità &ssh;. Questo è per cercare di prevenire che &ssh; chieda la password per ogni modulo. Puoi disabilitare questa opzione impostando <option
>disable-agent-check</option
> a <userinput
>true</userinput
> (vero). </entry>
</row>

<row id="conf-do-not-compile">
<entry
>do-not-compile</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Usa questa opzione per selezionare un insieme specifico di cartelle da non generare in un modulo (invece che tutte). Le cartelle da non generare dovrebbero essere separate da spazi.</para>

<para
>Nota che il codice sorgente dei programmi sarà comunque scaricato.</para>

<para
>Per esempio, per disabilitare la generazione delle cartelle <literal
>codeeditor</literal
> e <literal
>minimaltest</literal
> del framework <literal
>syntaxhighlighting</literal
>, dovresti aggiungere la compilazione <userinput
>do-not-compile codeeditor minimaltest</userinput
>, e aggiungere «do-not-compile juk kscd» alle tue opzioni syntaxhighlighting.</para>

<para
>Vedi <xref linkend="not-compiling"/> per un esempio.</para>
</entry>
</row>

<row id="conf-email-address">
<entry
>email-address</entry>
<entry
>Non sostituibile</entry>
<entry>
<para
>Questa opzione è stata rimossa in &kdesrc-build; 1.14. </para>
</entry>
</row>

<row id="conf-email-on-compile-error">
<entry
>email-on-compile-error</entry>
<entry
>Non sostituibile</entry>
<entry>
<para
>Questa opzione è stata rimossa in &kdesrc-build; 1.14. </para>
</entry>
</row>

<row>
<entry
>inst-apps</entry>
<entry
></entry>
<entry
>Questa opzione è stata rimossa nella versione 1.10. </entry>
</row>

<row id="conf-git-desired-protocol">
<entry
>git-desired-protocol</entry>
<entry
>Non sostituibile</entry>
<entry
><para
>Questa opzione si applica solo ai moduli di un deposito del <link linkend="kde-projects-module-sets"
>progetto &kde;</link
>.</para>

<para
>Quello che fa questa opzione è configurare quale protocollo di rete preferire quando si esegue il push del codice sorgente per questi moduli. Normalmente si usa l'efficientissimo protocollo <literal
>git</literal
>, ma potrebbe essere bloccato in alcune reti (come intranet aziendali o WiFi pubbliche). Un protocollo alternativo molto meglio supportato è il protocollo <literal
>https</literal
> usato per i siti Web su Internet.</para>

<para
>Se stai usando una di queste reti ristrette puoi impostare questa opzione a <userinput
>http</userinput
> per preferire le comunicazioni <literal
>https</literal
>.</para>

<tip
><para
>Potresti anche aver bisogno dell'opzione <link linkend="conf-http-proxy"
>http-proxy</link
> se è necessario un proxy HTTP per il traffico di rete.</para
></tip>

<para
>In qualsiasi altra situazione non dovresti impostare questa opzione, perché il protocollo predefinito è il più efficiente.</para>

<para
>Questa opzione è stata aggiunta in &kdesrc-build; 1.16. Prima della 20.06 questa opzione è stata utilizzata per configurare l'URL del recupero anziché l'URL del push. A partire dalla 20.06, per l'aggiornamento dei progetti KDE è sempre utilizzato il protocollo <literal
>https</literal
>.</para>
</entry>
</row>

<row id="conf-git-repository-base">
<entry
>git-repository-base</entry>
<entry
>Non sostituibile</entry>
<entry
><para
>Questa opzione, aggiunta nella versione 1.12.1, si usa per creare un nome breve per riferirsi a un particolare &URL; di un deposito di &git; nelle dichiarazioni di <link linkend="module-sets"
>insiemi di moduli</link
> seguenti, il che è utile per dichiarare molti moduli d i&git; da generare.</para>

<para
>Devi specificare due cose (separate da uno spazio): il nome da assegnare all'&URL; di base, e il suo nome esatto. Per esempio:</para>

<para>
<informalexample>
<programlisting
>global
   # altre opzioni

   # Questo è il percorso comune a tutti i moduli su server Git.
   git-repository-base <replaceable
>kde-git</replaceable
> <replaceable
>kde:</replaceable>
end global

# Dichiarazioni di moduli

module-set
   # Adesso puoi usare l'alias prima definito, ma <emphasis
>solo</emphasis>
   # in un insieme di moduli.
   repository <replaceable
>kde-git</replaceable>

   <link linkend="conf-use-modules"
>use-modules</link
> <replaceable
>modulo1.git</replaceable
> <replaceable
>modulo2.git</replaceable>
end module-set
</programlisting>
</informalexample>
</para>

<para
>L'opzione <literal
>use-modules</literal
> dell'insieme di moduli ha creato due moduli interni, e &kdesrc-build; si è comportato come se avesse letto:</para>

<programlisting
>module modulo1
    repository kde:<replaceable
>modulo1.git</replaceable>
end module

module modulo2
    repository kde:<replaceable
>modulo2.git</replaceable>
end module
</programlisting>

<para
>Il prefisso del deposito &git; <literal
>kde:</literal
> usato sopra è una scorciatoia che verrà configurata automaticamente da &kdesrc-build;. Vedi l'articolo di Techbase sulla <ulink url="https://techbase.kde.org/Development/Git/Configuration#URL_Renaming"
>rinomina degli URL</ulink
> per maggiori informazioni. Nota che al contrario della maggior parte delle altre opzioni, questa può essere specificata più volte per creare tanti alias quanti sono richiesti.</para>

<tip
><para
>Non è necessario usare questa opzione per usare gli insiemi di moduli: questa opzione esiste per facilitare l'uso dello stesso deposito in diversi insiemi di moduli.</para
></tip>
</entry>
</row>

<row id="conf-git-user">
<entry
>git-user</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry>
<para
>Questa opzione è per gli sviluppatori di &kde;. Se impostata, verrà usata per configurare automaticamente le informazioni do identificazione per il programma di controllo del codice sorgente &git; per i moduli &git; <emphasis
>scaricati da quel momento in avanti</emphasis
>, inclusi la maggior parte dei moduli di &kde;.</para>

<para
>In particolare, il nome e l'indirizzo di posta dell'utente di ogni deposito di &git; vengono configurati con i valori impostati da questa opzione.</para>

<para
>Il valore deve essere specificato nella forma <option
><replaceable
>Nome</replaceable
> &lt;<replaceable
>posta@esempio.it</replaceable
>&gt;</option
>.</para>

<para>
<informalexample>
<para
>Per esempio, lo sviluppatore <quote
>Pinco Pallino</quote
> con indirizzo <quote
>pinco@pallino.it</quote
> scriverebbe:</para>

<screen
><symbol
>git-user</symbol
> <replaceable
>Pinco Pallino</replaceable
> &lt;<replaceable
>pinco@pallino.it</replaceable
>&gt;
</screen>
</informalexample>
</para>

<para
>Questa opzione è stata introdotta in &kdesrc-build; 15.09. </para>
</entry>
</row>

<row id="conf-http-proxy">
<entry
>http-proxy</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>

<entry
><para
>Questa opzione, se impostata, usa l'URL specificato come server proxy da usare per tutte le comunicazioni su reti HTTP (per esempio, quando si scaricano le istantanee dei nuovi moduli, o la <link linkend="kde-projects-module-sets"
>banca dati dei progetti di &kde;</link
>).</para>

<para
>Inoltre, &kdesrc-build; cercherà di assicurarsi che gli strumenti da cui dipende usino quel server proxy, se possibile, impostando la variabile d'ambiente <envar
>http_proxy</envar
> al server indicato, <emphasis
>se quella variabile non è già impostata</emphasis
>.</para>

<para
>Questa opzione è stata introdotta in &kdesrc-build; 1.16.</para>
</entry>
</row>

<row id="conf-ignore-kde-structure">
<entry
>ignore-kde-structure</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry>
<para
>Questa opzione è deprecata e verrà rimossa (di nuovo) in un rilascio futuro.</para>

<para
>Usa piuttosto l'opzione <option
><link linkend="conf-directory-layout"
>directory-layout</link
></option
>, che offre maggiori alternative.</para>
</entry>
</row>

<row id="conf-directory-layout">
<entry
>directory-layout</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Questa opzione è utilizzata per configurare lo schema che &kdesrc-build; deve utilizzare durante la creazione di cartelle sorgente e di generazione.</para>
<para
>Attualmente sono previsti tre possibili valori: <userinput
>flat</userinput
>, <userinput
>invent</userinput
> e <userinput
>metadata</userinput
>.</para>
<para
>Lo schema <userinput
>flat</userinput
> è il valore predefinito e raggruppa tutti i moduli direttamente al di sotto delle cartelle sorgenti e di generazione di livello superiore. Per esempio, <literal
>source/extragear/network/telepathy/ktp-text-ui</literal
> nello schema <userinput
>metadata</userinput
> diventerebbe invece <literal
>source/ktp-text-ui</literal
> utilizzando lo schema <userinput
>flat</userinput
>. </para>
<para
>Lo schema <userinput
>invent</userinput
> crea una gerarchia di cartelle che rispecchia i percorsi relativi dei repository contenuti in <ulink url="https://invent.kde.org/"
>invent.kde.org</ulink
>. Per esempio, <literal
>source/kde/applications/kate</literal
> nello schema <userinput
>metadata</userinput
> diventerebbe invece <literal
>source/utilities/kate</literal
> utilizzando lo schema <userinput
>invent</userinput
>. Questo schema riguarda solo i progetti KDE. È una buona scelta per i programmatori alle prime armi con &kdesrc-build;. </para>
<para
>Infine, lo schema <userinput
>metadata</userinput
> è lo stesso schema del precedente comportamento predefinito. Questo schema organizza i progetti KDE in base ai percorsi di progetto specificati nei metadati del progetto per questi moduli. È una buona scelta se vuoi uno schema di cartelle che tenga traccia di determinati processi KDE, ma tieni presente che questo percorso non è sempre stabile. Come risultato, &kdesrc-build; potrebbe lasciare da parte una vecchia copia del repository di un progetto e clonarne una nuova a causa di modifiche ai metadati del progetto.</para>
</entry>
</row>

<row id="conf-ignore-modules">
<entry
>ignore-modules</entry>
<entry
>Non sostituibile</entry>
<entry
><para
>I moduli indicati da questa opzione, che sarebbero altrimenti stati scelti da &kdesrc-build; tramite un'opzione <link linkend="conf-use-modules"
>use-modules</link
>, sono invece completamente saltati. Usa questa opzione se vuoi generare un intero gruppo del progetto <link linkend="kde-projects-module-sets"
>kde-projects</link
> <emphasis
>tranne</emphasis
> alcuni moduli specifici.</para>

<para
>Il valore dell'opzione non deve necessariamente fare direttamente il nome del modulo. Qualsiasi modulo che contenga delle parti contigue e complete del suo <link linkend="kde-projects-module-sets"
>percorso nei progetti di &kde;</link
> corrispondenti a uno dei valori dell'opzione verrà ignorato; in questo modo puoi ignorare più moduli alla volta.</para>

<para
>Per esempio, un valore dell'opzione come <replaceable
>libs</replaceable
> farebbe escludere sia <symbol
>kde/kdegraphics/libs</symbol
> che <symbol
>playground/libs</symbol
> (ma non <symbol
>kde/kdelibs</symbol
> perché è la parte intera <quote
>kdelibs</quote
> che viene considerata).</para>

<tip
><para
>Vedi anche <xref linkend="example-ignoring-a-module"/>.</para
></tip>

<para
>Questa opzione è stata introdotta in &kdesrc-build; 1.16.</para>
</entry>
</row>

<row id="conf-include-dependencies">
<entry
>include-dependencies</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry>
<para
>Questa opzione, quando impostata a <userinput
>true</userinput
>, richiede che &kdesrc-build; includa anche le dipendenze note di questo modulo nella sua generazione, senza richiederne menzione (neanche indiretta).</para>

<note
><para
>Questa opzione funziona solo per <link linkend="kde-projects-module-sets"
>moduli basati su <literal
>kde-project</literal
></link
>, e presume l'accuratezza dei metadati mantenuti dagli sviluppatori di &kde; per il <link linkend="conf-branch-group"
>gruppo di rami</link
> selezionato.</para
></note>

<para
>Questa opzione è abilitata in modo predefinito, in modo da supportare le applicazioni di compilazione che necessitano di versioni di &Qt; o &plasma; più recenti rispetto a quelle supportate dai comuni sistemi operativi.</para>
</entry>
</row>

<row id="conf-install-after-build">
<entry
>install-after-build</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Questa opzione viene usata per installare il pacchetto a seguito di una generazione riuscita. Come impostazione predefinita, questa opzione è attiva. Se vuoi disattivarla, devi impostarla a <userinput
>false</userinput
> nel <link linkend="configure-data"
>file di configurazione</link
>. Puoi anche usare l'opzione <link linkend="cmdline-no-install"
><option
>--no-install</option
></link
> dalla riga di comando. </entry>
</row>

<row id="conf-install-environment-driver">
<entry
>install-environment-driver</entry>
<entry
>Non sostituibile</entry>
<entry
><para
>Per impostazione predefinita, &kdesrc-build; installerà uno script di shell che può essere originato in script di configurazione del profilo di un utente, in modo da stabilire le variabili d'ambiente necessarie per avviare il desktop Plasma costruito da &kdesrc-build;.</para>

<para
>Questo driver altera le seguenti righe:</para>

<itemizedlist>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-master.sh</filename
> (normalmente situato in <filename
>~/.config/kde-env-master.sh</filename
>).</para
></listitem>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-user.sh</filename
> (normalmente situato in <filename
>~/.config/kde-env-user.sh</filename
>).</para
></listitem>
</itemizedlist>

<para
><filename
>kde-env-user.sh</filename
> è facoltativo. Serve per le personalizzazioni utente (per esempi di impostazioni personalizzabili consulta la sezione <ulink url="https://userbase.kde.org/KDE_System_Administration/Environment_Variables#Troubleshooting_and_Debugging"
>Troubleshooting and Debugging</ulink
> della &kde; UserBase), ma queste impostazioni possono essere impostate dall'utente altrove negli script di configurazione del profilo esistenti.</para>

<para
>Puoi disabilitare questa funzionalità impostando questa opzione a <replaceable
>false</replaceable
> e assicurandoti che sia disabilitata anche l'opzione <link linkend="conf-install-session-driver"
>install-session-driver</link
>.</para>

<para
>Questa opzione è stata introdotta in &kdesrc-build; 17.08.</para>

<tip
><para
>&kdesrc-build; non sovrascriverà i file preesistenti a meno che si passi l'opzione da riga di comando <option
><link linkend="cmdline-delete-my-settings"
>--delete-my-settings</link
></option
>.</para
></tip>
</entry>
</row>

<row id="conf-install-session-driver">
<entry
>install-session-driver</entry>
<entry
>Non sostituibile</entry>
<entry
><para
>Se abilitata, &kdesrc-build; prova ad installare un driver per il gestore degli accessi grafico che permetta di accedere al desktop &kde; generato con &kdesrc-build;.</para>

<para
>Questo driver altera le seguenti righe:</para>

<itemizedlist>
<listitem
><para
><filename
>~/.xsession</filename
></para
></listitem>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-master.sh</filename
> (normalmente situato in <filename
>~/.config/kde-env-master.sh</filename
>).</para
></listitem>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-user.sh</filename
> (normalmente situato in <filename
>~/.config/kde-env-user.sh</filename
>).</para
></listitem>
</itemizedlist>

<para
>Se mantieni il tuo driver d'accesso personale, puoi disattivare questa funzionalità impostando questa opzione a <replaceable
>false</replaceable
>. Se abilitata, essa abilita anche la funzionalità <link linkend="conf-install-environment-driver"
>install-environment-driver</link
>.</para>

<para
>Questa opzione è stata introdotta in &kdesrc-build; 1.16.</para>

<tip
><para
>&kdesrc-build; non sovrascriverà i file preesistenti a meno che si passi l'opzione da riga di comando <option
><link linkend="cmdline-delete-my-settings"
>--delete-my-settings</link
></option
>.</para
></tip>
</entry>
</row>

<row id="conf-kdedir">
<entry
>kdedir</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Questa opzione imposta la cartella in cui &kde; sarà installato dopo essere stato generato. Il suo valore predefinito è <filename class="directory"
>~/kde</filename
>. Se la cambi a una cartella che richiede accesso come amministratore di sistema, potresti essere interessato anche all'opzione <link linkend="conf-make-install-prefix"
>make-install-prefix</link
>.</entry>
</row>

<row id="conf-kde-languages">
<entry
>kde-languages</entry>
<entry
>Non sostituibile</entry>
<entry
><para
>Questa opzione ti permette di scegliere di scaricare e installare i pacchetti di localizzazione insieme a &kde;. Potresti farlo se vuoi usare &kde; tradotto nella tua lingua.</para>

<para
>Per usare questa opzione, impostala a un elenco di lingue da installare separate da spazi. Ogni lingua ha un codice associato (<userinput
>it</userinput
> per l'italiano). Puoi vedere gli altri codici su <ulink url="http://l10n.kde.org/teams-list.php"
>http://l10n.kde.org/teams-list.php</ulink
>. </para>

<para
>È anche possibile scegliere solo una lingua. Come impostazione predefinita non ne viene scaricata nessuna, il che vuol dire che &kde; sarà in inglese secondo l'ortografia americana.</para>

<para
>Per esempio, per installare l'italiano, devi impostare l'opzione a qualcosa come <userinput
><option
>kde-languages</option
> <replaceable
>it</replaceable
></userinput
>. Devi comunque ancora usare le &systemsettings; per scegliere di attivare la lingua.</para>
</entry>
</row>

<row id="conf-libpath">
<entry
>libpath</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Imposta questa opzione per impostare la variabile d'ambiente <envar
>LD_LIBRARY_PATH</envar
>. Non puoi sostituire questa impostazione per un singolo modulo. Il valore predefinito è vuoto, ma i percorsi <filename class="directory"
>$<envar
>KDEDIR</envar
>/lib</filename
> e <filename class="directory"
>$<envar
>QTDIR</envar
>/lib</filename
> vengono aggiunti automaticamente. Puoi usare la tilde (~) per qualsiasi percorso che aggiungi con questa opzione. </entry>
</row>

<row id="conf-log-dir">
<entry
>log-dir</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Usa questa opzione per cambiare la cartella usata per contenere i file di registro generati dallo script. </entry>
</row>

<row id="conf-make-install-prefix">
<entry
>make-install-prefix</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Imposta questa variabile a un elenco separato da spazi, che verrà interpretato come un comando con le sue opzioni con cui far precedere il comando <userinput
><command
>make</command
> <option
>install</option
></userinput
> usato per installare i moduli. È comodo per installare i pacchetti con per esempio &sudo;, ma sii cauto quando usi i privilegi di amministratore.</entry>
</row>

<row id="conf-make-options">
<entry
>make-options</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale (opzione del sistema di generazione)</entry>
<entry
><para
>Imposta questa variabile per passare le opzioni della riga di comando al comando <command
>make</command
>. È utile per programmi come <ulink url="https://github.com/distcc/distcc"
><application
>distcc</application
></ulink
> o per sistemi con più di un nucleo nel processore.</para>
<para
>Nota che non tutti i sistemi di generazione supportati usano <command
>make</command
>. Per i sistemi di generazione che usano <command
>ninja</command
> (come il <link linkend="conf-override-build-system"
>sistema <application
>Meson</application
></link
>), consulta le impostazioni <link linkend="conf-ninja-options"
>ninja-options</link
>.</para>
</entry>
</row>

<row id="conf-manual-build">
<entry
>manual-build</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Imposta il valore dell'opzione a <userinput
>true</userinput
> (vero) per impedire al processo di cercare di generare questo modulo. Sarà comunque aggiornato quando si aggiorna da &subversion;. Questa opzione è esattamente equivalente all'opzione da riga di comando <link linkend="cmdline-no-build"
><option
>--no-build</option
></link
>. </entry>
</row>

<row id="conf-manual-update">
<entry
>manual-update</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Imposta il valore dell'opzione a <userinput
>true</userinput
> (vero) per impedire che il processo di generazione cerchi di aggiornare (e di conseguenza generare o installare) questo modulo. Se imposti questa opzione per un modulo, lo stai in pratica escludendo. </entry>
</row>

<row id="conf-module-base-path">
<entry
>module-base-path</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Imposta questa opzione per sostituire il percorso alla cartella predefinita di &kdesrc-build; per il modulo. Si può usare, per esempio, per ritirare particolari rami o versioni di alcune librerie. <ulink url="https://websvn.kde.org/"
>Il visore del sorgente di &kde;</ulink
> è utilissimo per capire quale percorso scegliere.</para>

<para
>Nota che &kdesrc-build; costruisce il percorso finale secondo il modello seguente: <filename class="directory"
><varname
>$svn-server</varname
>/home/kde/<varname
>$module-base-path</varname
></filename
>. </para>

<para
>Il valore predefinito è <filename class="directory"
>trunk/<varname
>$module</varname
></filename
> o <filename class="directory"
>trunk/KDE/<varname
>$module</varname
></filename
>, a seconda del nome del modulo.</para>

<tip
><para
>Usa piuttosto le opzioni <link linkend="conf-branch"
>branch</link
> e <link linkend="conf-tag"
>tag</link
> se possibile. </para
></tip>
</entry>
</row>

<row id="conf-niceness">
<entry
>niceness</entry>
<entry
>Non sostituibile</entry>
<entry
>Imposta questa opzione a un numero tra 20 e 0. Maggiore è il numero, minore la priorità che &kdesrc-build; si assegnerà. Il valore predefinito è 10. </entry>
</row>

<row id="conf-ninja-options">
<entry
>ninja-options</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale (opzione del sistema di generazione)</entry>
<entry
><para
>Imposta questa variabile per passare le opzioni a riga di comando al comando di generazione <command
>ninja</command
>. Questo può essere utile per abilitare l'output <quote
>verboso</quote
> o ridurre manualmente il numero di operazioni parallele di generazione che <command
>ninja</command
> potrebbe utilizzare.</para>

<note
><para
>Nota che questa impostazione controlla solo ninja quando utilizzato da &kdesrc-build;. Il modulo <quote
>webengine</quote
> di &Qt; usa <command
>ninja</command
> indirettamente, ma lo supporta ufficialmente solo se generato da <command
>make</command
>. In questa situazione, puoi impostare <literal
>NINJAFLAGS</literal
> affinché <command
>make</command
> passi i flag appropriati quando chiama <command
>ninja</command
> in un momento successivo, utilizzando <link linkend="conf-make-options"
>make-options</link
>.</para>

<informalexample>
<programlisting
>options <replaceable
>qtwebengine</replaceable>
    # Imponi a make e ninja di utilizzare non più di 6 operazioni di compilazione separate anche
    # quando sono disponibili più CPU, in modo da evitare l'esaurimento di memoria
    <option
><link linkend="conf-make-options"
>make-options</link
></option
> -j<replaceable
>6</replaceable
> NINJAFLAGS=-j<replaceable
>6</replaceable>
end options
</programlisting>
</informalexample>
</note>
</entry>
</row>

<row id="conf-no-svn">
<entry
>no-svn</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Se questa opzione è impostata a <replaceable
>true</replaceable
>, &kdesrc-build; non aggiornerà automaticamente il codice sorgente del modulo. Cercherà ancora di generare il modulo se ci avrebbe provato comunque in condizioni normali.</entry>
</row>

<row>
<entry
>no-rebuild-on-fail</entry>
<entry
></entry>
<entry
>Questa opzione è stata rimossa nella versione 1.10, perché questo comportamento non è più d'aiuto a causa di miglioramenti nel sistema di generazione.</entry>
</row>

<row id="conf-num-cores">
<entry
>num-cores</entry>
<entry
>Non sostituibile</entry>
<entry>
<para
>Questa opzione è definita da &kdesrc-build; (quando utilizzi lo strumento kdesrc-build-setup o <command
>kdesrc-build --initial-setup</command
>), impostata al valore del numero delle CPU disponibili (come indicato dall'applicazione esterna <application
>nproc</application
>). Se &kdesrc-build; non è in grado di rilevare il numero di CPU, il valore viene impostato a 4.</para>

<para
>Per un esempio d'uso dell'opzione vedi <xref linkend="make-options-example"/>. Questa opzione è stata aggiunta nella versione 20.07.</para>
</entry>
</row>

<row id="conf-num-cores-low-mem">
<entry
>num-cores-low-mem</entry>
<entry
>Non sostituibile</entry>
<entry>
<para
>Questa opzione è definita da &kdesrc-build; (quando utilizzi lo strumento kdesrc-build-setup o <command
>kdesrc-build --initial-setup</command
>), impostata al valore del numero delle CPU ritenuto adeguato per moduli «pesanti» o comunque con elevata complessità, tipo <literal
>qtwebengine</literal
>, al fine di evitare l'esaurimento delle memoria durante la generazione.</para>

<para
>Il calcolo tipico è un core di CPU per ogni 2 gigabyte (GiB) di memoria totale. Andrà specificato almeno un core e non più di <option
><link linkend="conf-num-cores"
>num-cores</link
></option
> core.</para>

<para
>Sebbene questa opzione sia pensata per supportare i moduli &Qt;, puoi utilizzarla per qualsiasi altro tuo modulo nello stesso modo in cui viene utilizzato <option
>num-cores</option
>.</para>

<para
>Se &kdesrc-build; non è in grado di rilevare la memoria disponibile, il valore verrà impostato a 2.</para>

<para
>Questa opzione è stata aggiunta nella versione 20.07.</para>
</entry>
</row>

<row id="conf-override-build-system">
<entry
>override-build-system</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Questa è un'opzione avanzata, aggiunta in &kdesrc-build; 1.16.</para>

<para
>Normalmente &kdesrc-build; rileverà il sistema di generazione giusto da usare per un modulo dopo averlo scaricato. Questo avviene controllando l'esistenza di certi file nella cartella del codice sorgente del modulo.</para>

<para
>Alcuni moduli potrebbero avere più di una serie di file richiesti, che potrebbe confondere il rilevamento automatico. In questo caso puoi specificare manualmente il tipo di generazione giusto.</para>

<para
>I tipi di generazione attualmente supportati che possono essere impostati sono:</para>

<variablelist>
    <varlistentry>
        <term
>KDE</term>
        <listitem
><para
>Usato per generare i moduli di &kde;. In realtà può essere usato per generare quasi ogni modulo che usi &cmake;, ma è meglio non farvi affidamento.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>Qt</term>
        <listitem
><para
>Usato per generare la libreria &Qt;.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>qmake</term>
        <listitem
><para
>Usato per generare moduli &Qt; che usano file <literal role="extension"
>.pro</literal
> nello stile di <application
>qmake</application
>.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>generic</term>
        <listitem
><para
>Usato per generare moduli che usano dei semplici Makefile e che non richiedono alcuna configurazione particolare.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>autotools</term>
        <listitem
><para
>Questo è lo strumento di configurazione standard usato dalla maggior parte dei programmi liberi e open source che non siano nelle altre categorie.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>meson</term>
        <listitem
><para
>Questo è uno <ulink url="https://mesonbuild.com"
>strumento relativamente nuovo</ulink
> che sta acquistando popolarità come sostituto di autotools e potrebbe essere richiesto da alcuni moduli non appartenenti a &kde;.</para
></listitem>
    </varlistentry>
</variablelist>

</entry>
</row>

<row id="conf-override-url">
<entry
>override-url</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Se imposti questa opzione, &kdesrc-build; userà il suo valore come l'&url; da passare a &subversion; <emphasis
>esattamente com'è</emphasis
>. Generalmente dovresti usarla se vuoi scaricare un rilascio particolare ma &kdesrc-build; non riesce a capire quello che vuoi fare usando <link linkend="conf-branch"
>branch</link
>. </entry>
</row>

<row id="conf-persistent-data-file">
<entry
>persistent-data-file</entry>
<entry
>Non sostituibile</entry>
<entry
><para
>Usa questa opzione per cambiare dove &kdesrc-build; memorizza i suoi dati permanenti. La posizione predefinita è un file chiamato <filename
>.kdesrc-build-data</filename
>, localizzato nella stessa cartella del file di configurazione in uso. Se il file di configurazione globale è in uso, sarà salvato in <filename
>~/.local/state/kdesrc-build-data</filename
> (<filename
>$XDG_STATE_HOME/kdesrc-build-data</filename
>, se <envar
>$XDG_STATE_HOME</envar
> è impostato). Se hai più configurazioni disponibili nella stessa cartella, potresti voler impostare manualmente questa opzione in modo che configurazioni differenti non producano dati permanenti in conflitto tra loro. </para>

<para
>Questa opzione è stata aggiunta in &kdesrc-build; 1.15.</para>
</entry>
</row>

<row id="conf-prefix">
<entry
>prefix</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Questa opzione controlla dove installare il modulo (normalmente si usa il valore di <option
><link linkend="conf-kdedir"
>kdedir</link
></option
>). Usare questa opzione permette di installare un modulo in una cartella diversa da dove sono installate le librerie della piattaforma di &kde;, come se stessi usando &kdesrc-build; solo per generare le applicazioni.</para>
<para
>Puoi usare <varname
>${MODULE}</varname
> o <varname
>{MODULE}</varname
> nel percorso per farle espandere nel nome del modulo.</para>
</entry>
</row>

<row id="conf-purge-old-logs">
<entry
>purge-old-logs</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Questa opzione decide se le vecchie cartelle dei registri debbano essere automaticamente eliminate o no. Il valore predefinito è <replaceable
>false</replaceable
>.</para>
</entry>
</row>

<row id="conf-qmake-options">
<entry
>qmake-options</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>

<entry
><para
>Tutte le opzioni qui specificate vengono passate al comando <command
>qmake</command
>, per i moduli che usano il sistema di generazione <symbol
>qmake</symbol
>. Per esempio, puoi usare l'opzione <userinput
>PREFIX=/percorso/a/qt</userinput
> per imporre a qmake dove installare il modulo. </para>
<para
>Questa opzione è stata aggiunta a &kdesrc-build; 1.16.</para>
</entry>
</row>

<row id="conf-qtdir">
<entry
>qtdir</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Imposta questa opzione per impostare la variabile d'ambiente <envar
>QTDIR</envar
> durante la generazione. Se non la specifichi, &kdesrc-build; presumerà che &Qt; sia fornito dal sistema operativo. </entry>
</row>

<row id="conf-remove-after-install">
<entry
>remove-after-install</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Se hai poco spazio su disco, potrebbe interessarti questa opzione per eliminare automaticamente la cartella di generazione (o entrambe le cartelle del codice sorgente e di generazione per le installazioni singole) dopo che sarà riuscita l'installazione del modulo. </para>
<para
>I valori possibili di questa opzione sono: <itemizedlist>
<listitem
><para
><option
>none</option
> - Non eliminare nulla (predefinito).</para
></listitem>
<listitem
><para
><option
>builddir</option
> - Elimina la cartella di generazione, ma non il codice sorgente.</para
></listitem>
<listitem
><para
><option
>all</option
> - Elimina sia la cartella del codice sorgente che quella di generazione.</para
></listitem>
</itemizedlist>
</para>

<para
>Nota che l'uso di questa opzione può avere un significativo impatto negativo sul tuo uso di banda (se usi <replaceable
>all</replaceable
>) e sul tempo necessario a compilare software &kde;, perché &kdesrc-build; non potrà effettuare generazioni incrementali.</para>
</entry>
</row>

<row id="conf-repository">
<entry
>repository</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Questa opzione è stata introdotta nella versione 1.10, e si usa per specificare il deposito &git; da cui scaricare il codice sorgente del modulo. &Qt; (e quindi qt) avrebbero bisogno di questa opzione, oltre a diversi moduli di &kde; che sono nel processo di conversione a &git;.</para
></entry>
</row>

<row id="conf-revision">
<entry
>revision</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Se questa opzione è impostata a un valore diverso da zero, &kdesrc-build; costringerà l'aggiornamento del codice sorgente a portare un modulo all'esatta revisione data, anche se ci sono opzioni come <link linkend="conf-branch"
>branch</link
>. Se il modulo è già alla revisione data non sarà aggiornato di nuovo, a meno che questa opzione sia cambiata o rimossa dalla configurazione.</para>

<note
><para
>Questa opzione non funzionava per i moduli basati su Git (inclusi i moduli <link linkend="kde-projects-module-sets"
>kde-projects</link
>) fino alla versione 1.16 di &kdesrc-build;.</para
></note>

</entry>
</row>

<row id="conf-run-tests">
<entry
>run-tests</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale (opzione del sistema di generazione)</entry>
<entry
>Se impostata a <userinput
>true</userinput
>, il modulo sarà generato con supporto per eseguire i suoi test, che verranno eseguiti come parte del processo di generazione. &kdesrc-build; visualizzerà un breve rapporto dei risultati dei test. Ciò è utile per gli sviluppatori o coloro che vogliono assicurarsi che il loro sistema sia correttamente configurato.</entry>
</row>

<row id="conf-set-env">
<entry
>set-env</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Questa opzione accetta un insieme di valori separati da spazi, dove il primo è la variabile d'ambiente da impostare, e il resto i valori a cui vuoi impostarla. Per esempio, per impostare la variabile <envar
>PINCO</envar
> a <replaceable
>pallino</replaceable
>, inseriresti questo comando nella sezione opportuna:</para>
<screen
><command
>set-env</command
> <envar
>PINCO</envar
> <replaceable
>pallino</replaceable
></screen>
<para
>Questa opzione è speciale perché può essere ripetuta senza sostituire le impostazioni di set-env precedenti nella stessa sezione del <link linkend="configure-data"
>file di configurazione</link
>. In questo modo puoi impostare diverse variabili d'ambiente per modulo (o globalmente).</para>
</entry>
</row>

<row id="conf-source-dir">
<entry
>source-dir</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Questa opzione viene usata per impostare la cartelle in cui tenere il codice sorgente &subversion; di &kde; sul tuo computer. Se non specifichi questo valore, quello predefinito sarà <filename class="directory"
>~/kdesrc</filename
>. Puoi usare la tilde (<userinput
>~</userinput
>) per rappresentare la cartella Home usando questa opzione. </entry>
</row>

<row id="conf-ssh-identity-file">
<entry
>ssh-identity-file</entry>
<entry
>Non sostituibile</entry>
<entry>
<para
>Imposta questa opzione per controllare quale file chiave SSH viene passato al comando <command
>ssh-add</command
> quando &kdesrc-build; scarica il codice sorgente dai depositi che richiedono un'autenticazione. Vedi anche <xref linkend="ssh-agent-reminder"/>.</para>

<para
>Questa opzione è stata aggiunta nella versione 1.14.2.</para>
</entry>
</row>

<row id="conf-stop-on-failure">
<entry
>stop-on-failure</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Imposta questa opzione a <userinput
>true</userinput
> (vero) per far fermare l'esecuzione dello script a seguito del verificarsi di un errore durante il processo di generazione o installazione. Il valore predefinito di questa opzione è spento. </entry>
</row>

<row id="conf-svn-server">
<entry
>svn-server</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Questa opzione viene usata per impostare il server usato per ritirare i file da &subversion;. Il valore predefinito è il deposito &subversion; anonimo, <filename
>svn://anonsvn.kde.org/</filename
>.</para>
<note
><para
>Se stai sviluppando per &kde;, usa il deposito di &subversion; che ti è stato dato quando hai ricevuto il tuo account di sviluppatore, invece di quello anonimo.</para
></note>
</entry>
</row>

<row id="conf-tag">
<entry
>tag</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
><para
>Usa questa opzione per scaricare un rilascio specifico di un modulo.</para>
<para
><emphasis
>Nota:</emphasis
> è molto probabile che usare questa opzione <emphasis
>non è quello che vuoi fare</emphasis
>. I rilasci di &kde; sono disponibili come tarball dal <ulink url="https://download.kde.org/"
>sito degli scaricamenti di &kde;</ulink
>.</para>

<note
><para
>Questa opzione è stata supportata per i moduli basati su Git solo da &kdesrc-build; 1.16.</para
></note>
</entry>
</row>

<row id="conf-use-clean-install">
<entry
>use-clean-install</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale (opzione del sistema di generazione)</entry>
<entry
><para
>Imposta questa opzione a <userinput
>true</userinput
> per far eseguire <command
>make uninstall</command
> a &kdesrc-build; appena prima di eseguire <command
>make uninstall</command
>.</para>

<para
>Questo può essere utile per assicurarsi che non ci siano delle vecchie librerie abbandonate, metadati di &cmake;, eccetera, che possono causare problemi in installazioni di &kde; di lunga data. Questo però funziona solo sui sistemi di generazione che supportano <command
>make uninstall</command
>.</para>

<para
>Questa opzione è stata aggiunta in &kdesrc-build; 1.12, ma non è stata documentata fino a &kdesrc-build; 1.16.</para>
</entry>
</row>

<row>
<entry
>use-cmake</entry>
<entry
></entry>
<entry
>Questa opzione è stata rimossa a partire da &kdesrc-build; 1.4, perché tutti i moduli di &kde; 4 richiedono &cmake;, e l'uso di &cmake; non è permesso in nessun altro modulo. </entry>
</row>

<row id="conf-use-idle-io-priority">
<entry
>use-idle-io-priority</entry>
<entry
>Non sostituibile</entry>
<entry
>Questa opzione, aggiunta in &kdesrc-build; 1.12, farà usare una priorità minore per l'accesso al disco e ad altro I/O, che può significativamente migliorare i tempi di reazione del resto del sistema al prezzo di tempi di esecuzione di &kdesrc-build; leggermente più lunghi. Come impostazione predefinita è disattivata, per abilitare la priorità a disco ridotta impostala a <userinput
>true</userinput
>. </entry>
</row>

<row id="conf-use-inactive-modules">
<entry
>use-inactive-modules</entry>
<entry
>Non sostituibile</entry>
<entry
>Questa opzione, quando abilitata, permetterà a kdesrc-build anche di clonare e scaricare (clone and pull) dai repository contrassegnati come inattivi. L'impostazione predefinita è "disabilitata" per consentire ai moduli inattivi di impostare questa opzione a <userinput
>true</userinput
>. </entry>
</row>

<row id="conf-use-modules">
<entry
>use-modules</entry>
<entry
>Applicabile solo in <link linkend="module-sets"
>module-set</link
></entry>
<entry
><para
>Questa opzione, aggiunta in &kdesrc-build; 1.12.1, permette di specificare facilmente molti moduli da generare in un solo punto del <link linkend="kdesrc-buildrc"
>file di configurazione</link
>.</para>

<para
>Questa opzione <emphasis
>deve</emphasis
> essere usata in un <literal
>module-set</literal
>. Ogni identificativo passato a questa opzione viene convertito internamente in un modulo di &kdesrc-build;, con un'opzione <link linkend="conf-repository"
><option
>repository</option
></link
> impostata al deposito dell'insieme di moduli combinato con l'identificativo per configurare il deposito finale da cui scaricare. Tutte le altre opzioni assegnate all'insieme di moduli sono passate ai moduli generati senza modifica.</para>

<para
>L'ordine in cui i moduli vengono definiti in questa opzione è importante, perché è anche l'ordine in cui &kdesrc-build; elaborerà i moduli generati durante aggiornamento, generazione e installazione. Tutti i moduli definiti nell'insieme di moduli dato saranno gestiti prima che &kdesrc-build; passerà al modulo seguente dopo l'insieme di moduli.</para>

<para
>Se devi cambiare le opzioni di un modulo generato, basta ridichiararlo dopo averlo definito nell'insieme, e impostare le opzioni come necessario. Anche se cambierai le opzioni del modulo in questo modo, il modulo sarà ancora aggiornato e. generato nell'ordine impostato dall'insieme di moduli (non puoi quindi riordinare la sequenza di generazione in questo modo).</para>

<important
><para
>Il nome da usare per il modulo, in questo caso, è semplicemente il nome passato a <option
>use-modules</option
>, con l'eccezione che ogni estensione <literal
>.git</literal
> viene rimossa.</para
></important>

<para
>Vedi <xref linkend="module-sets"/> e <link linkend="conf-git-repository-base"
>git-repository-base</link
> per avere una descrizione di come si usa e un esempio.</para>
</entry>
</row>

<row id="conf-use-qt-builddir-hack">
<entry
>use-qt-builddir-hack</entry>
<entry
>L'impostazione del modulo ha precedenza su quella globale</entry>
<entry
>Questa opzione è stata rimossa a causa di miglioramenti nel sistema di generazione di &Qt;. </entry>
</row>

<row id="conf-use-stable-kde">
<entry
>use-stable-kde</entry>
<entry
>Non sostituibile</entry>
<entry>
<para
>Questa opzione è deprecata e verrà rimossa (di nuovo) in un rilascio futuro.</para>

<para
>Usa piuttosto l'opzione <option
><link linkend="conf-branch-group"
>branch-group</link
></option
>, che dà maggiore selettività.</para>
</entry>
</row>

</tbody>

</tgroup>
</table>

</sect1>
</chapter>

<chapter id="cmdline">
<title
>Opzioni da riga di comando e variabili d'ambiente</title>

<sect1 id="cmdline-usage">
<title
>Uso dalla riga di comando</title>

<para
>&kdesrc-build; è progettato per essere usato come segue:</para>

<cmdsynopsis
><command
>kdesrc-build</command
> <arg rep="repeat"
><replaceable
>--options</replaceable
></arg
> <arg rep="repeat"
><replaceable
>moduli da generare</replaceable
></arg
> </cmdsynopsis>

<para
>Se nessun modulo viene specificato sulla riga di comando, &kdesrc-build; genererà tutti i moduli definiti nel suo file di configurazione, nell'ordine elencato in quel file (anche se ciò è soggetto a modifiche da parte di diverse opzioni del file di configurazione).</para>

<sect2 id="cmdline-usage-options">
<title
>Opzioni dalla riga di comando di uso comune</title>

<para
>L'elenco completo delle opzioni dalla riga di comando è dato nel<xref linkend="supported-cmdline-params"/>. Tra le opzioni più comunemente usate ci sono:</para>

<variablelist>
  <varlistentry>
    <term
><option
>--pretend</option
> (o <option
>-p</option
>)</term>
    <listitem
><para
>Questa opzione fa indicare a &kdesrc-build; le azioni che effettuerebbe, senza implementarle davvero. Può essere utile per assicurarsi che i moduli che pensi di generare siano effettivamente quelli che saranno generati.</para
></listitem>
  </varlistentry>

  <varlistentry>
    <term
><option
>--refresh-build</option
></term>
    <listitem
><para
>Questa opzione costringe &kdesrc-build; a generare i moduli dati da un punto di partenza completamente nuovo. Qualsiasi cartella di generazione esistente per un modulo viene rimossa e il modulo viene rigenerato. Questa opzione è utile se incontri errori nella generazione di un modulo, e a volte è necessaria quando cambiano le librerie di &Qt; o &kde;.</para
></listitem>
  </varlistentry>

  <varlistentry>
    <term
><option
>--no-src</option
></term>
    <listitem
><para
>Questa opzione salta il processo di aggiornamento del codice sorgente. Potresti usarla se hai aggiornato il codice sorgente da poco (con &kdesrc-build; o magari manualmente), ma vuoi lo stesso rigenerare qualche modulo.</para
></listitem>
  </varlistentry>

  <varlistentry>
    <term
><option
>--no-build</option
></term>
    <listitem
><para
>Questa opzione è simile a <option
>--no-src</option
> sopra, ma stavolta è il processo di generazione che viene saltato.</para
></listitem>
  </varlistentry>
</variablelist>

</sect2>

<sect2 id="cmdline-usage-modules">
<title
>Specificare i moduli da generare</title>

<para
>In generale, specificare i moduli da generare è facile come passare il loro nome come definito nel file di configurazione. Puoi anche passare dei moduli che fanno parte di un insieme, come indicato in <link linkend="conf-use-modules"
>use-modules</link
> o il nome di tutto l'insieme, se gliene hai dato uno.</para>

<para
>Nel caso specifico di insiemi di moduli basati sulla <link linkend="kde-projects-module-sets"
>banca dati dei progetti di &kde;</link
>, &kdesrc-build; espanderà i componenti dei nomi dei moduli per determinare il modulo che vuoi. Per esempio, la voce dei progetti di &kde; di &kdesrc-build; indica il progetto come <literal
>extragear/utils/kdesrc-build</literal
>. Potresti specificare uno qualsiasi dei seguenti per generare &kdesrc-build;:</para>

<informalexample>
<screen
><prompt
>&percnt;</prompt
> <command
>kdesrc-build</command
> <option
><replaceable
>+extragear/utils/kdesrc-build</replaceable
></option>
<prompt
>&percnt;</prompt
> <command
>kdesrc-build</command
> <option
><replaceable
>+utils/kdesrc-build</replaceable
></option>
<prompt
>&percnt;</prompt
> <command
>kdesrc-build</command
> <option
><replaceable
>+kdesrc-build</replaceable
></option
>
</screen>
</informalexample>

<note
><para
>I comandi nell'esempio precedente mettevano un <symbol
>+</symbol
> davanti al nome del modulo. Questo fa interpretare il nome come un modulo della banca dati dei progetti di &kde;, anche se quel modulo non è definito nel tuo file di configurazione. </para
></note>

<para
>Fai attenzione se specifichi progetti molto grandi (per esempio <literal
>extragear/utils</literal
>), perché può portare alla generazione di molti moduli. Dovresti usare l'opzione <option
>--pretend</option
> prima di generare un nuovo modulo per assicurarti di generare solo i moduli che vuoi.</para>

</sect2>
</sect1>

<sect1 id="supported-envvars">
<title
>Variabili d'ambiente supportate</title>

<para
>&kdesrc-build; non usa variabili d'ambiente. se devi impostare delle variabili d'ambiente per il processo di generazione o installazione, vedi l'opzione <link linkend="conf-set-env"
>set-env</link
>. </para>

</sect1>

<sect1 id="supported-cmdline-params">
<title
>Parametri da riga di comando supportati</title>

<para
>Lo script accetta le seguenti opzioni dalla riga di comando: </para>

<variablelist>

<varlistentry id="cmdline-async">
<term
><parameter
>--async</parameter
></term>
<listitem
><para
>Abilita la <link linkend="conf-async"
>modalità asincrona</link
>, che può effettuare gli aggiornamenti al codice sorgente e generazione dei moduli allo stesso tempo. Questa è predefinita, devi specificare l'opzione solo se l'hai disattivata nella configurazione. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-help">
<term
><parameter
>--help</parameter
></term>
<listitem
><para
>Mostra soltanto un semplice aiuto sull'uso di questo script. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-version">
<term
><parameter
>--version</parameter
> (o <parameter
>-v</parameter
>)</term>
<listitem
><para
>Mostra la versione del programma. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-show-info">
<term
><parameter
>--show-info</parameter
></term>
<listitem
><para
>Visualizza informazioni su &kdesrc-build; e il sistema operativo, che si mostrano utili nelle segnalazioni di errori o quando richiedi aiuto nei forum o nelle mailing list. </para>
<para
>Disponibile dalla versione 18.11.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-initial-setup">
<term
><parameter
>--initial-setup</parameter
></term>
<listitem
><para
>Consente a &kdesrc-build; di eseguire una prima configurazione necessaria per preparare il sistema affinché &kdesrc-build; possa operare e il software &kde; appena installato possa avviarsi. </para>
<para
>Questo include:</para>
<itemizedlist>
<listitem
><para
>l'installazione delle dipendenze conosciute (sulle distribuzioni &Linux; supportate)</para
></listitem>
<listitem
><para
>l'aggiunta delle variabili d'ambiente richieste in <literal
>~/.bashrc</literal
></para
></listitem>
<listitem
><para
>l'impostazione di un <link linkend="setup-rcfile"
>file di configurazione</link
></para
></listitem>
</itemizedlist>

<para
>Disponibile dalla versione 18.11.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-author">
<term
><parameter
>--author</parameter
></term>
<listitem
><para
>Mostra informazioni per contattare l'autore. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-color">
<term
><parameter
>--color</parameter
></term>
<listitem
><para
>Abilita l'output colorato (è predefinito per i terminali interattivi). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-nice">
<term
><parameter
>--nice=<replaceable
>valore</replaceable
></parameter
></term>
<listitem
><para
>Questo valore regola la priorità di processore richiesta da &kdesrc-build;, e dovrebbe essere tra 0 e 20. 0 è la priorità massima (perché è la meno <quote
>cortese</quote
>, in inglese <foreignphrase lang="en"
>nice</foreignphrase
>), 20 la minima. &kdesrc-build; usa un valore predefinito di 10. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-async">
<term
><parameter
>--no-async</parameter
></term>
<listitem
><para
>Disabilita la <link linkend="conf-async"
>modalità asincrona</link
> di aggiornamento. L'aggiornamento verrà invece interamente effettuato prima dell'inizio della generazione. Questa opzione rallenterà il processo complessivo, ma, se si verificano errori IPC durante l'esecuzione di &kdesrc-build;, prova ad usare questa opzione e invia una <ulink url="https://bugs.kde.org/"
>segnalazione di errore</ulink
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-color">
<term
><parameter
>--no-color</parameter
></term>
<listitem
><para
>Disabilita l'output colorato. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-pretend">
<term
><parameter
>--pretend</parameter
> (o <parameter
>-p</parameter
>)</term>
<listitem
><para
>&kdesrc-build; farà il processo di aggiornamento e generazione, ma invece di aggiornare e generare davvero scriverà cosa avrebbe fatto (per esempio comandi da eseguire, passi vari, eccetera).</para>

<note
><para
>Dei semplici comandi di sola lettura (come leggere informazioni dei file) potrebbero comunque essere eseguiti per rendere l'output più significativo (come simulare correttamente se il codice sorgente debba essere ritirato o aggiornato). </para
></note>

<important
><para
>Questa opzione richiede la disponibilità di alcuni metadati, i quali di norma vengono scaricati; ma gli scaricamenti sono disattivati in questa modalità di prova. Se non hai mai eseguito &kdesrc-build;, e quindi non hai questi metadati, dovresti eseguire prima <command
>kdesrc-build <option
>--metadata-only</option
></command
> per scaricare i metadati necessari. </para
></important>
</listitem>
</varlistentry>

<varlistentry id="cmdline-quiet">
<term
><parameter
>--quiet</parameter
> (o <parameter
>-q</parameter
>)</term>
<listitem
><para
>Non scrivere tanto output. Con questa opzione vengono scritte solo le cose fondamentali. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-really-quiet">
<term
><parameter
>--really-quiet</parameter
></term>
<listitem
><para
>scrivi solo avvertimenti ed errori. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-verbose">
<term
><parameter
>--verbose</parameter
></term>
<listitem
><para
>Scrivi molte cose su quello che sta succedendo, e su cosa sta facendo &kdesrc-build;. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-src-only">
<term
><parameter
>--src-only</parameter
> (o <parameter
>--svn-only</parameter
>)</term>
<listitem
><para
>Effettua solo l'aggiornamento del codice sorgente (<parameter
>--svn-only</parameter
> è supportato solo per retrocompatibilità). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-build-only">
<term
><parameter
>--build-only</parameter
></term>
<listitem
><para
>Fai solo la generazione. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-install-only">
<term
><parameter
>--install-only</parameter
></term>
<listitem
><para
>Fai solo il processo di installazione. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-metadata-only">
<term
><parameter
>--metadata-only</parameter
></term>
<listitem
><para
>Effettua solo il processo di scaricamento dei metadati. &kdesrc-build; normalmente lo gestisce automaticamente, ma potresti usarlo per far funzionare l'opzione <option
><link linkend="cmdline-pretend"
>--pretend</link
></option
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-rebuild-failures">
<term
><parameter
>--rebuild-failures</parameter
></term>
<listitem
><para
>Usa questa opzione per generare solo quei moduli la cui generazione non è riuscita in una precedente esecuzione di &kdesrc-build;. Questo è utile se si è verificato un numero notevole di generazioni errate miste a riuscite. Dopo aver corretto ciò che causa gli errori, puoi quindi facilmente rigenerare solo i moduli che prima non sono riusciti.</para>

<note
><para
>Nota che l'elenco di <quote
>moduli precedentemente non riusciti</quote
> viene azzerato ogni volta che un'esecuzione di &kdesrc-build; si conclude con errori. Tuttavia non viene azzerato in caso di generazione perfettamente riuscita, quindi puoi rigenerare correttamente un modulo o due e questa opzione funzionerà ancora.</para
></note>

<para
>Questa opzione è stata aggiunta a &kdesrc-build; 15.09.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-include-dependencies">
<term
><parameter
>--include-dependencies</parameter
></term>
<term
><parameter
>--no-include-dependencies</parameter
></term>
<listitem
><para
>Questa opzione fa sì che &kdesrc-build; includa automaticamente gli altri moduli &kde; e &Qt; nella compilazione, se richiesto per i moduli che hai indicato da compilare nella riga di comando o nel tuo <link linkend="configure-data"
>file di configurazione</link
>.</para>

<para
>I moduli inclusi vengono aggiunti come registrati all'interno del sistema di gestione del codice sorgente di &kde;. Vedi <xref linkend="kde-projects-module-sets"/>.</para>

<para
>L'opzione del file di configurazione corrispondente è <link linkend="conf-include-dependencies"
>include-dependencies</link
>.</para>

<para
>Puoi anche usare <parameter
>--no-include-dependencies</parameter
>, che disattiva l'inclusione automatica dei moduli delle dipendenze aggiuntivi.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-ignore-modules">
<term
><parameter
>--ignore-modules</parameter
></term>
<listitem
><para
>Non includere i moduli passati al resto della riga di comando nel processo di aggiornamento e generazione (ciò è utile se vuoi generare la maggior parte dei moduli nel <link linkend="configure-data"
>file di configurazione</link
> e saltarne qualcuno). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-src">
<term
><parameter
>--no-src</parameter
> (o <parameter
>--no-svn</parameter
>)</term>
<listitem
><para
>Non contattare il server &subversion; (<parameter
>--no-svn</parameter
> è supportato solo per retrocompatibilità). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-build">
<term
><parameter
>--no-build</parameter
></term>
<listitem
><para
>Salta il processo di generazione. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-metadata">
<term
><parameter
>--no-metadata</parameter
></term>
<listitem
><para
>Non scaricare automaticamente i metadati necessari per i moduli git di &kde;. Gli aggiornamenti del codice sorgente dei moduli stessi avverrà comunque, a meno che passi anche <link linkend="cmdline-no-src"
>--no-src</link
>. </para
><para
>Questo può essere utile quando esegui più volte &kdesrc-build;, visto che i metadati non cambiano spesso. Nota però che molte altre funzionalità richiedono la presenza dei metadati. Potresti considerare di eseguire &kdesrc-build; con l'opzione <link linkend="cmdline-metadata-only"
>--metadata-only</link
> una volta, e usare questa opzione per le esecuzioni seguenti. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-install">
<term
><parameter
>--no-install</parameter
></term>
<listitem
><para
>Non installare automaticamente i pacchetti dopo averli generati. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-build-when-unchanged">
<term
><parameter
>--no-build-when-unchanged</parameter
></term>
<term
><parameter
>--force-build</parameter
></term>
<listitem
><para
>Questa opzione disabilita esplicitamente il salto del processo di generazione (un'ottimizzazione conrtollata dall'opzione <link linkend="conf-build-when-unchanged"
>build-when-unchanged</link
>). Ciò è utile per far eseguire a &kdesrc-build; la generazione quando hai cambiato qualcosa che &kdesrc-build; non può sapere.</para>

<para
><parameter
>--force-build</parameter
> fa esattamente la stessa cosa, e forse è più facile da ricordare.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-debug">
<term
><parameter
>--debug</parameter
></term>
<listitem
><para
>Abilita la modalità di debug per lo script. Attualmente ciò vuol dire che tutto l'output sarà riversato sullo standard output oltre ad essere registrato nella cartella di registro, come sarebbe normale. Inoltre, molte funzioni sono molto più verbose riguardo a quello che stanno facendo in modalità di debug. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-query">
<term
><parameter
>--query</parameter
>=<userinput
><replaceable
>mode</replaceable
></userinput
></term>
<listitem
><para
>Questo comando fa richiedere a &kdesrc-build; un parametro dei moduli nell'elenco di compilazione (o passato dalla riga di comando o letto dal file di configurazione), inviando il risultato allo schermo (un modulo per riga).</para>

<para
>Questa opzione deve essere fornita con <quote
>modalità query</quote
>, che deve essere una delle seguenti:</para>
    <itemizedlist>
    <listitem
><para
><option
>source-dir</option
>: &kdesrc-build; restituisce il percorso completo in cui è memorizzato il codice sorgente del modulo. </para
></listitem>
    <listitem
><para
><option
>build-dir</option
>: &kdesrc-build; restituisce il percorso completo in cui si è compiuto il processo di generazione del modulo. </para
></listitem>
    <listitem
><para
><option
>install-dir</option
>, &kdesrc-build; restituisce il percorso completo in cui il modulo sarà installato. </para
></listitem>
    <listitem
><para
><option
>project-path</option
>: &kdesrc-build; restituisce la posizione del modulo all'interno della gerarchia dei depositi di codice sorgente di KDE. Consulta <xref linkend="kde-projects-module-sets"/> per maggiori informazioni su questa gerarchia. </para
></listitem>
    <listitem
><para
><option
>branch</option
>: &kdesrc-build; restituisce il ramo git risolto che verrà usato per ciascun modulo, basato sulle impostazioni effettive di <link linkend="conf-tag"
>tag</link
>, <link linkend="conf-branch"
>branch</link
> e <link linkend="conf-branch-group"
>branch-group</link
>. </para
></listitem>
    <listitem
><para
>In alternativa, possono essere usati i nomi delle opzioni, validi per i moduli, contenuti nel <link linkend="conf-options-table"
>file di configurazione</link
>, i cui valori risolti saranno elencati per ciascun modulo. </para
></listitem>
    </itemizedlist>

<para
>Se un singolo modulo viene passato alla riga di comando, allora il risultato sarà semplicemente il valore del parametro che è stato ricercato. Se vengono passati più moduli (multipli o no) sulla riga di comando, allora ciascuna riga sarà prefissata dal nome del modulo. In ogni caso, &kdesrc-build; si ferma una volta che vengono restituiti tutti i valori. </para>

<para
>Questa opzione è stata aggiunta in &kdesrc-build; 16.05.</para>

<informalexample>
<para
>Per esempio, il comando <quote
><command
>kdesrc-build</command
> <parameter
>--query</parameter
> <parameter
><replaceable
>branch</replaceable
></parameter
> <parameter
><replaceable
>kactivities</replaceable
></parameter
> <parameter
><replaceable
>kdepim</replaceable
></parameter
></quote
> potrebbe concludersi con un risultato tipo:</para>
<screen
>kactivities: master
kdepim: master
</screen>
</informalexample>
</listitem>
</varlistentry>

<varlistentry id="cmdline-no-rebuild-on-fail">
<term
><parameter
>--no-rebuild-on-fail</parameter
></term>
<listitem
><para
>Non cercare di rigenerare da zero i moduli che non è stato possibile generare. &kdesrc-build; non cercherà mai di farlo con un modulo che si è già cercato di generare da zero. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-refresh-build">
<term
><parameter
>--refresh-build</parameter
></term>
<listitem
><para
>Ricrea il sistema di generazione e compila da zero. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-reconfigure">
<term
><parameter
>--reconfigure</parameter
></term>
<listitem
><para
>Riesegui <command
>cmake</command
> (per i moduli di &kde;) o <command
>configure</command
> (per &Qt;), senza ripulire la cartella di generazione. Normalmente non avresti bisogno di specificarlo, perché &kdesrc-build; rileverà il cambiamento di opzioni rilevanti e rieseguirà automaticamente la configurazione. Questa opzione è sottintesa se si usa <link linkend="cmdline-refresh-build"
><parameter
>--refresh-build</parameter
></link
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-resume-from">
<term
><parameter
>--resume-from</parameter
></term>
<listitem
><para
>Questa opzione è usata per riprendere la generazione a partire dal modulo dato, che dovrebbe essere la prossima opzione sulla riga di comando. Non dovresti specificare altri nomi di moduli sulla riga di comando. </para>

<note
><para
>Questa opzione in precedenza aggiungeva <link linkend="cmdline-no-src"
><parameter
>--no-src</parameter
></link
>, ma non lo fa più (da &kdesrc-build; 1.13). Se vuoi evitare gli aggiornamenti del sorgente quando riprendi, basta che passi <option
><userinput
>--no-src</userinput
></option
> insieme alle altre opzioni. </para
></note>

<para
>Vedi anche <xref linkend="cmdline-resume-after"/> e <xref linkend="resuming-failed"/>. Probabilmente preferiresti usare questa opzione da riga di comando se hai corretto l'errore di generazione e vuoi che &kdesrc-build; la completi.</para
></listitem>
</varlistentry>

<varlistentry id="cmdline-resume-after">
<term
><parameter
>--resume-after</parameter
></term>
<listitem
><para
>Questa opzione è usata per riprendere la generazione da dopo il modulo dato, che dovrebbe essere la prossima opzione sulla riga di comando. Non dovresti specificare altri nomi di moduli sulla riga di comando. </para>

<note
><para
>Questa opzione in precedenza aggiungeva <link linkend="cmdline-no-src"
><parameter
>--no-src</parameter
></link
>, ma non lo fa più (da &kdesrc-build; 1.13). Se vuoi evitare gli aggiornamenti del sorgente quando riprendi, basta che passi <option
><userinput
>--no-src</userinput
></option
> insieme alle altre opzioni. </para
></note>

<para
>Vedi anche <xref linkend="cmdline-resume-from"/> e <xref linkend="resuming-failed"/>. Probabilmente preferiresti usare questa opzione da riga di comando se hai corretto l'errore di generazione e hai anche generato e installato il modulo da te, e vuoi che &kdesrc-build; riparta dal modulo seguente.</para
></listitem>
</varlistentry>

<varlistentry id="cmdline-resume">
<term
><parameter
>--resume</parameter
></term>
<listitem
><para
>Questa opzione può essere usata per eseguire &kdesrc-build; dopo che si è verificato un errore di generazione. </para
><para
>Riprende la generazione dal modulo che non è riuscito, usando l'elenco dei moduli in attesa di essere generati, e disattiva gli aggiornamenti del codice sorgente e dei metadati. L'uso tipico è quando un banale errore o una dipendenza mancante causano l'errore di generazione. Una volta che l'errore è stato corretto, puoi rapidamente tornare alla generazione dei moduli senza dover configurare <option
><link linkend="cmdline-resume-from"
>--resume-from</link
></option
> e <option
><link linkend="cmdline-stop-before"
>--stop-before</link
></option
>. </para
><para
>È anche più comodo con l'opzione <option
><link linkend="cmdline-stop-on-failure"
>--stop-on-failure</link
></option
>, soprattutto se stai facendo la configurazione iniziale dell'ambiente di sviluppo. </para
><para
>Questa opzione è stata aggiunta in &kdesrc-build; 1.16. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-stop-before">
<term
><parameter
>--stop-before</parameter
></term>
<listitem
><para
>Questa opzione da riga di comando si usa per fermare il normale processo di generazione appena <emphasis
>prima</emphasis
> della prevista generazione di un modulo. </para
><para
>Per esempio, se l'elenco di generazione normale era <simplelist type="inline"
><member
>moduloA</member
><member
>moduloB</member
><member
>moduloC</member
></simplelist
>, <option
>--stop-before=<replaceable
>moduloB</replaceable
></option
> farà generare a &kdesrc-build; solo <literal
>moduloA</literal
>. </para
><para
>Questa opzione da riga di comando è stata aggiunta in &kdesrc-build; 1.16. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-stop-after">
<term
><parameter
>--stop-after</parameter
></term>
<listitem
><para
>Questa opzione da riga di comando si usa per fermare il normale processo di generazione appena <emphasis
>dopo</emphasis
> la generazione di un modulo. </para
><para
>Per esempio, se l'elenco di generazione normale era <simplelist type="inline"
><member
>moduloA</member
><member
>moduloB</member
><member
>moduloC</member
></simplelist
>, <option
>--stop-before=<replaceable
>moduloB</replaceable
></option
> farà generare a &kdesrc-build; <literal
>moduloA</literal
> e <literal
>moduloB</literal
>. </para
><para
>Questa opzione da riga di comando è stata aggiunta in &kdesrc-build; 1.16. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-stop-on-failure">
<term
><parameter
>--stop-on-failure</parameter
></term>
<listitem
><para
>Questa opzione interrompe la generazione non appena si verifica un errore. È utile quando stai configurando l'ambiente di sviluppo iniziale. Senza questa opzione, &kdesrc-build; proverà a procedere con i moduli rimanenti della generazione per evitare di perdere tempo nel caso che il problema fosse in un solo modulo. </para
><para
>Questa opzione è stata rimossa in &kdesrc-build; 1.16. Vedi anche l'opzione <link linkend="conf-stop-on-failure"
>stop-on-failure</link
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-rc-file">
<term
><parameter
>--rc-file</parameter
></term>
<listitem
><para
>Questo interpreta il prossimo parametro della riga di comando come il file da cui leggere le opzioni di configurazione. Il valore predefinito di questo parametro è <filename
>kdesrc-buildrc</filename
> (spuntato nell'attuale cartella di lavoro). Se questo file non esiste, sarà usato invece <filename
>~/.config/kdesrc-buildrc</filename
> (<filename
>$XDG_CONFIG_HOME/kdesrc-buildrc</filename
>, se <envar
>$XDG_CONFIG_HOME</envar
> è impostato). Vedi anche <xref linkend="kdesrc-buildrc"/>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-print-modules">
<term
><parameter
>--print-modules</parameter
></term>
<listitem>
<para
>Prende tutte le azioni specificate sulla riga di comando (o nel file di configurazione) fino al riordino delle dipendenze dei moduli incluso, stampa i moduli che verrebbero elaborati uno per riga, e quindi esce senza fare altro. </para>
<para
>I metadati di <literal
>kde-project</literal
> vengono scaricati per primi (però, vedi <link linkend="cmdline-pretend"
><option
>--pretend</option
></link
> o <link linkend="cmdline-no-src"
><option
>--no-src</option
></link
>). </para>
<para
>Il risultato non è pienamente compatibile con l'uso di script, perché potrebbero essere generati altri messaggi prima dell'elenco dei moduli. </para>
<para
>Questo è utili soprattutto per capire velocemente quali dipendenze &kdesrc-build; determina per un modulo, il che vuol dire che è utile solo per i moduli di <link linkend="kde-projects-module-sets"
><literal
>kde-projects</literal
></link
>. Questa opzione è compatibile con <link linkend="cmdline-resume-from"
><option
>--resume-from</option
></link
>, <link linkend="cmdline-resume-after"
><option
>--resume-after</option
></link
>, <link linkend="cmdline-stop-before"
><option
>--stop-before</option
></link
>, e <link linkend="cmdline-stop-after"
><option
>--stop-after</option
></link
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-list-build">
<term
><parameter
>--list-build</parameter
></term>
<listitem>
<para
>Elenca i moduli che devono essere compilati, in ordine di compilazione. Se applicabile, l'elenco dell'output cita pure quale commit/ramo/tag deve essere selezionato per il checkout. </para>
<para
>Questa opzione è simile a <link linkend="cmdline-print-modules"
><option
>--print-modules</option
></link
>. Per maggiori informazioni su come i moduli si collegano l'un l'altro, consulta anche: <link linkend="cmdline-dependency-tree"
><option
>--dependency-tree</option
></link
>. </para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-dependency-tree">
<term
><parameter
>--dependency-tree</parameter
></term>
<listitem>
<para
>Restituisce le informazioni di dipendenza sui moduli che devono essere compilati, utilizzando un formato ad albero (ricorsivo). Le informazioni elencate includono anche da quale commit/ramo/tag dipendono e se la dipendenza deve essere compilata o no. Nota: l'output generato può diventare molto grande per le applicazioni con molte dipendenze. </para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-run">
<term
><parameter
>--run</parameter
></term>
<listitem
><para
>Questa opzione interpreta il prossimo elemento sulla riga di comando come un programma da eseguire; &kdesrc-build; finirà di leggere il file di configurazione, aggiornerà l'ambiente come normalmente, e poi eseguirà il programma dato.</para>

<para
>Nella maggior parte dei casi, tuttavia, ciò non funzionerà per avviare una shell con l'ambiente di &kdesrc-build;, perché le shell interattive di solito azzerano almeno parte delle variabili d'ambiente (come <envar
>PATH</envar
> e <envar
>KDEDIRS</envar
>) nella sequenza di avvio. </para>

<tip
><para
>Se vuoi vedere l'ambiente usato da &kdesrc-build;, puoi eseguire il comando <command
>printenv</command
>:</para>
<informalexample>
<screen
>$ <command
>kdesrc-build</command
> <parameter
>--run</parameter
> <parameter
>printenv</parameter>
KDE_SESSION_VERSION=4
SDL_AUDIODRIVER=alsa
LANGUAGE=
XCURSOR_THEME=Oxygen_Blue
LESS=-R -M --shift 5
QMAIL_CONTROLDIR=/var/qmail/control
... eccetera.
</screen>
</informalexample
></tip>
</listitem>
</varlistentry>

<varlistentry id="cmdline-prefix">
<term
><parameter
>--prefix=&lt;/percorso/a/kde&gt;</parameter
></term>
<listitem
><para
>Permette di cambiare la cartella in cui sarà installato &kde; dalla riga di comando. Questa opzione implica <link linkend="cmdline-reconfigure"
><parameter
>--reconfigure</parameter
></link
>, ma potrebbe ancora essere richiesto di usare <link linkend="cmdline-refresh-build"
><parameter
>--refresh-build</parameter
></link
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-revision">
<term
><parameter
>--revision</parameter
></term>
<listitem
><para
>Questa opzione fa ritirare a &kdesrc-build; la revisione corrispondente a un certo numero per ogni modulo di &subversion;, sostituendosi a qualsiasi opzione di <link linkend="conf-branch"
>ramo</link
>, <link linkend="conf-tag"
>tag</link
> o <link linkend="conf-revision"
>revisione</link
> già impostata per questi moduli.</para>

<para
>Questa opzione probabilmente non è una buona idea, ed è supportata per retrocompatibilità con vecchi script. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-build-system-only">
<term
><parameter
>--build-system-only</parameter
></term>
<listitem
><para
>Questa opzione fa interrompere a &kdesrc-build; la generazione di un modulo appena prima dell'esecuzione del comando <command
>make</command
>. Ciò viene supportato solo per retrocompatibilità con vecchie versioni; questo effetto non è utile per l'attuale sistema di generazione di &kde;. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-install"
><term
><parameter
>--install</parameter
></term>
<listitem
><para
>Se questa è l'unica opzione dalla riga di comando, cerca di installare tutti i moduli contenuti nella cartella <filename
>log/latest/build-status</filename
>. Se sono specificate opzioni da riga di comando dopo <parameter
>--install</parameter
>, sono tutte considerate essere moduli da installare (anche se non sono stati generati correttamente l'ultima volta). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-snapshots"
><term
><parameter
>--no-snapshots</parameter
></term>
<listitem
><para
>Passare questa opzione fa in modo che &kdesrc-build; effettui sempre un normale ritiro iniziale di un modulo invece di usare un'istantanea di avvio rapido (disponibile solo per i moduli Git del deposito <literal
>kde-projects</literal
>). Nota che questa opzione dovrebbe essere usata solo se c'è un problema a usare le istantanee, perché le istantanee di avvio rapido riducono il carico sui depositi del sorgente di &kde;. </para>

<note
><para
>Le istantanee dei moduli <emphasis
>sono</emphasis
> dei veri ritiri. Non dovresti specificare questa opzione, è solo un aiuto per tracciare gli errori.</para
></note>
</listitem>
</varlistentry>

<varlistentry id="cmdline-delete-my-patches">
<term
><parameter
>--delete-my-patches</parameter
></term>
<listitem
><para
>Questa opzione si usa per far eliminare a &kdesrc-build; le cartelle sorgente che potrebbero contenere dati dell'utente, in modo che i moduli possano essere scaricati di nuovo. Questo è normalmente utile solo agli sviluppatori di &kde; (che potrebbero avere delle modifiche locali da eliminare).</para>

<para
>Al momento questo si usa solo per ritirare i moduli che sono stati convertiti da &subversion; a &git;. Normalmente non dovresti usare questa opzione; &kdesrc-build; richiederà di venire eseguito una seconda volta, se necessario.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-delete-my-settings">
<term
><parameter
>--delete-my-settings</parameter
></term>
<listitem
><para
>Questa opzione si usa per far sovrascrivere a &kdesrc-build; tutti i file preesistenti che potrebbero contenere dati dell'utente.</para>

<para
>Al momento si usa soltanto per la configurazione di xsession per il gestore degli accessi. Normalmente non dovresti usare questa opzione; &kdesrc-build; richiederà di venire eseguito una seconda volta, se necessario.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-global-option">
<term
><parameter
>--<replaceable
>&lt;nome_opzione&gt;</replaceable
>=</parameter
></term>
<listitem
><para
>Puoi usare questa opzione per sostituire un'opzione nel tuo <link linkend="configure-data"
>file di configurazione</link
> per ogni modulo. Per esempio, per sostituire l'opzione <link linkend="conf-log-dir"
>log-dir</link
>, scriveresti: <userinput
><parameter
>--log-dir=<filename class="directory"
><replaceable
>/percorso/a/cartella</replaceable
></filename
></parameter
></userinput
>. </para>

<note
><para
>Questa funzionalità può essere usata solo per i nomi di opzioni già note a &kdesrc-build; che non siano già supportate da appropriate opzioni da riga di comando. Per esempio, l'opzione del file di configurazione <link linkend="conf-async"
>async</link
> ha le apposite opzioni da riga di comando <link linkend="cmdline-async"
>--async</link
> e <link linkend="cmdline-no-async"
>--no-async</link
>, che vengono preferite da &kdesrc-build;. </para
></note>

</listitem>
</varlistentry>

<varlistentry id="cmdline-module-option">
<term
><parameter
>--set-module-option-value=<replaceable
>&lt;nome-modulo&gt;</replaceable
>,<replaceable
>&lt;nome-opzione&gt;</replaceable
>,<replaceable
>&lt;valore-opzione&gt;</replaceable
></parameter
></term>
<listitem
><para
>Puoi usare questa opzione per sostituire un'opzione nel <link linkend="configure-data"
>file di configurazione</link
> di un modulo particolare. </para
></listitem>
</varlistentry>

</variablelist>

<para
>Tutte le altre opzioni da riga di comando sono considerate come moduli da aggiornare e generare. Non confondere la generazione con l'installazione. </para>

</sect1>

</chapter>

<chapter id="using-kdesrc-build">
<title
>Usare &kdesrc-build;</title>

<sect1 id="using-kdesrc-build-preface">
<title
>Prefazione</title>

<para
>Normalmente, usare &kdesrc-build; dopo essere passati dal<xref linkend="getting-started"/> è facile quanto fare quanto segue da un terminale:</para>

<screen
><prompt
>&percnt;</prompt
> <command
><userinput
>kdesrc-build</userinput
></command
>
</screen>

<para
>&kdesrc-build; quindi scaricherà il codice sorgente di &kde;, cercherà di configurarlo e generarlo, e infine di installarlo.</para>

<para
>Continua a leggere per scoprire come fa &kdesrc-build;, e cos'altro puoi fare con questo strumento.</para>

</sect1>

<sect1 id="basic-features">
<title
>Funzionalità di base di &kdesrc-build;</title>

<sect2 id="using-qt">
<title
>Supporto per qt</title>
<para
>&kdesrc-build; supporta la generazione delle librerie &Qt; usate dal software di &kde; come comodità per gli utenti. Questo supporto viene gestito da un modulo speciale chiamato qt.</para>

<note
><para
>&Qt; è sviluppato in un deposito separato dal software di &kde;, che si trova a <ulink url="http://code.qt.io/cgit/qt/"
>http://code.qt.io/cgit/qt/</ulink
>.</para
></note>

<para
>Per generare &Qt;, dovresti assicurarti che l'impostazione <link linkend="conf-qtdir"
>qtdir</link
> sia impostata alla cartella in cui vorresti installare &Qt;, come descritto nel<xref linkend="configure-data"/>.</para>

<para
>Dovresti quindi assicurarti che il modulo qt sia aggiunto a <filename
>.kdesrc-buildrc</filename
> prima di ogni altro modulo nel file. Se stai usando il file di configurazione campione, puoi semplicemente decommentare la voce di qt ivi presente.</para>

<para
>Dovresti verificare che le opzioni <link linkend="conf-repository"
><option
>repository</option
></link
> e <link linkend="conf-branch"
><option
>branch</option
></link
> siano impostate correttamente:</para>

<orderedlist>
<listitem
><para
>La prima possibilità è generare &Qt; con un mirror gestito dai depositi di codice sorgente di &kde; (non vengono applicate modifiche, visto che è semplicemente un clone del sorgente ufficiale). Questo è decisamente raccomandato a causa di problemi occasionali nel clonare l'intero modulo di &Qt; dal suo deposito ufficiale.</para>

<para
>Puoi impostare l'opzione <option
>repository</option
> per il modulo qt a <userinput
>kde:qt</userinput
> per usare questa opzione.</para>
</listitem>

<listitem
><para
>Altrimenti, per generare le &Qt; standard, imposta l'opzione <option
>repository</option
> a <userinput
>git://gitorious.org/qt/qt.git</userinput
>. Nota che potresti avere problemi ad effettuare il clone iniziale di &Qt; da questo deposito.</para
></listitem>
</orderedlist>

<para
>In entrambi i casi, l'opzione <option
>branch</option
> dovrebbe essere impostata a <userinput
>master</userinput
> (a meno che volessi generare un altro ramo).</para>

</sect2>

<sect2 id="kdesrc-build-std-flags">
<title
>Flag standard aggiunti da &kdesrc-build;</title>
<para
>NB: questa sezione non si applica ai moduli per i quali hai configurato una toolchain personalizzata, utilizzando per esempio <link linkend="conf-cmake-toolchain"
>cmake-toolchain</link
>.</para>

<para
>Per risparmiarti tempo, &kdesrc-build; aggiunge alcuni percorsi standard al tuo ambiente: </para>

<itemizedlist>
<listitem
><para
>I percorsi alle librerie &kde; e &Qt; vengono automaticamente aggiunti alla variabile <envar
>LD_LIBRARY_PATH</envar
>. Ciò vuol dire che non devi modificare &libpath; per includerle. </para
></listitem>

<listitem
><para
>I percorsi ai programmi di sviluppo di &kde; e &Qt; vengono automaticamente aggiunti alla variabile <envar
>PATH</envar
>. Ciò vuol dire che non devi modificare &binpath; per includerli. </para
></listitem>

<listitem
><para
>Il percorso al programma <application
>pkg-config</application
> fornito da &kde; viene aggiunto automaticamente a <envar
>PKG_CONFIG_PATH</envar
>. Ciò vuol dire che non devi modificare &set-env; per includerlo. </para
></listitem>

<listitem
><para
>L'impostazione di &kdedir; è automaticamente propagate alla variabile d'ambiente <envar
>KDEDIR</envar
> durante la generazione. <envar
>KDEDIRS</envar
> non viene modificata. </para
></listitem>

<listitem
><para
>L'impostazione di &qtdir; è automaticamente propagata alla variabile d'ambiente <envar
>QTDIR</envar
> durante la generazione. </para
></listitem>

</itemizedlist>

</sect2>

<sect2 id="build-priority">
<title
>Cambiare le priorità di generazione di &kdesrc-build;</title>
<para
>I programmi possono girare con diversi livelli di priorità sui sistemi operativi, inclusi &Linux; e &BSD;. Ciò permette al sistema di allocare le risorse per i diversi programmi a seconda della loro importanza. </para>

<para
>Normalmente &kdesrc-build; si assegnerà una bassa priorità, in modo che gli altri programmi sul sistema non ne siano influenzati e girino normalmente. Con questa tecnica, &kdesrc-build; userà le risorse quando saranno disponibili. </para>

<para
>&kdesrc-build; manterrà comunque un livello di priorità abbastanza alto da girare prima dei processi di routine e prima di programmi di donazione di risorse come <ulink url="http://setiathome.ssl.berkeley.edu/"
>Seti@Home</ulink
>. </para>

<para
>Per modificare &kdesrc-build; in modo che usi permanentemente un livello di priorità più alto (o più basso), devi regolare il valore di &niceness; nel <link linkend="configure-data"
>file di configurazione</link
>. L'impostazione di &niceness; controlla quant'è <quote
>cortese</quote
> &kdesrc-build; con gli altri programmi. In parole povere, un valore di &niceness; più alto dà a &kdesrc-build; una priorità minore. Perciò, per dare a &kdesrc-build; una priorità maggiore, devi ridurre il valore di &niceness; (e viceversa). Il valore di &niceness; può andare da 0 (per nulla cortese, priorità massima) a 20 (massima cortesia, priorità minima).</para>

<para
>Puoi anche cambiare temporaneamente la priorità di &kdesrc-build; usando <link linkend="cmdline"
>l'opzione da riga di comando</link
> &cmd-nice;. Il valore dell'opzione è usato esattamente come per il valore di &niceness;.</para>

<note
><para
>Per alcuni programmi eseguiti dall'amministratore è possibile avere un valore di &niceness; negativo, con una corrispondentemente maggiore priorità. Impostare un valore negativo (o anche zero) di &niceness; per &kdesrc-build; non è una buona idea, perché non migliorerà granché il tempo di generazione ma renderà molto lento il computer se lo dovessi ancora usare. </para
></note>

<informalexample>
<para
>Per eseguire &kdesrc-build; con un valore di &niceness; di 15 (una priorità minore del normale):</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--nice=<replaceable
>15</replaceable
></option
></userinput
>
</screen>

<para
>Oppure puoi cambiare il <link linkend="configure-data"
>file di configurazione</link
> per rendere la modifica permanente:</para>

<screen
>&niceness; <replaceable
>15</replaceable
>
</screen>
</informalexample>

<tip>
<para
>L'opzione <link linkend="conf-niceness"
>niceness</link
> influenza solo l'uso del processore. Un altro effetto notevole sulle prestazioni di un computer è dato dall'uso dell'input e dell'output (<acronym
>I/O</acronym
>) fatto da un programma. Per controllare quanto <acronym
>I/O</acronym
> viene utilizzato da un programma, i moderni sistemi &Linux; supportano uno strumento simile, chiamato <application
>ionice</application
>. &kdesrc-build; supporta <application
>ionice</application
> (solo per abilitarlo o disabilitarlo completamente), con l'opzione <link linkend="conf-use-idle-io-priority"
>use-idle-io-priority</link
>, dalla versione 1.12. </para>
</tip>

</sect2>

<sect2 id="root-installation">
<title
>Installazione come amministratore</title>
<para
>Potresti voler far girare &kdesrc-build; con privilegi di amministratore. Questo potrebbe essere per la (non raccomandata) installazione per tutto il sistema. È tuttavia utile anche quando si usa una generazione di &kde; a utente singolo: questo perché alcuni moduli (soprattutto kdebase) installano programmi che richiederanno brevemente dei permessi elevati per girare; questi ultimi non possono ottenere questi livelli di permessi a meno di essere installati con permessi elevati. </para>

<para
>Potresti semplicemente eseguire &kdesrc-build; direttamente come amministratore, ma ciò non è raccomandato, perché il programma non è stato verificato per un uso del genere. Anche se fa girare il programma in questo modo non dovrebbe essere pericoloso, è meglio evitare di usare i privilegi di amministratore quando è possibile.</para>

<para
>Per provvedere a ciò, &kdesrc-build; fornisce l'opzione &make-install-prefix;. Puoi usare questa opzione per specificare un comando da usare per effettuare l'installazione come un altro utente. Il modo raccomandato per usare questo comando è con il programma &sudo;, che eseguirà il comando di installazione come amministratore. </para>

<informalexample>
<para
>Per esempio, per installare tutti i moduli usando &sudo;, potresti fare qualcosa di simile:</para>

<screen
>global
  &make-install-prefix; <replaceable
>sudo</replaceable>
  # Altre opzioni
end global
</screen>

<para
>Per usare &make-install-prefix; per un solo modulo, questo dovrebbe funzionare: </para>

<screen
>module <replaceable
>nome_modulo_svn</replaceable>
  &make-install-prefix; <replaceable
>sudo</replaceable>
end module
</screen>
</informalexample>

</sect2>

<sect2 id="build-progress">
<title
>Mostrare il progresso della generazione di un modulo</title>
<para
>Questa funzionalità è sempre disponibile, ed è attivata automaticamente quando possibile. Quello che fa è visualizzare l'avanzamento stimato durante la generazione di un modulo; in questo modo puoi sapere quanto tempo ci vorrà per generarlo. </para>

</sect2>

</sect1>

<sect1 id="advanced-features">
<title
>Funzionalità avanzate</title>

<sect2 id="partial-builds">
<title
>Generare parzialmente un modulo</title>
<para
>È possibile generare solo parti di un singolo modulo di &kde;. Per esempio, potresti voler compilare solo un programma di un modulo. &kdesrc-build; ha delle funzionalità per facilitare questa scelta; ci sono diversi modi per farlo. </para>

<sect3 id="not-compiling">
<title
>Rimuovere delle cartelle da una generazione</title>
<para
>È possibile scaricare un intero deposito ma far trascurare al sistema alcune cartelle durante la generazione. Questo richiede che il modulo utilizzi &cmake; e che il sistema di generazione del modulo permetta che la cartella da rimuovere sia opzionale. </para>

<para
>Questa azione è controllata con l'opzione &do-not-compile;.</para>

<important
><para
>Questa opzione richiede almeno che il sistema di generazione del modulo sia riconfigurato dopo averlo cambiato. Questo si fa usando il comando <userinput
><command
>kdesrc-build</command
> <option
>&cmd-reconfigure;</option
> <option
><replaceable
>modulo</replaceable
></option
></userinput
>. </para
></important>

<informalexample>
<para
>Per rimuovere la cartella <filename class="directory"
>python</filename
> dal processo di generazione di kdebindings:</para>

<screen
>module <replaceable
>kdebindings</replaceable>
  &do-not-compile; <replaceable
>python</replaceable>
end module
</screen>

</informalexample>

<note
><para
>Questa funzione dipende da alcune convenzioni comuni usate nella maggior parte dei moduli di &kde;. Perciò potrebbe non funzionare con tutti i programmi.</para
></note>

</sect3>

</sect2>

<sect2 id="using-branches">
<title
>Supporto per rami e tag in &kdesrc-build;</title>

<sect3 id="branches-and-tags">
<title
>Cosa sono i rami e i tag?</title>

<para
>&subversion; supporta la gestione della cronologia del codice di &kde;. &kde; usa questo supporto per creare rami di sviluppo e per segnare il deposito ogni volta che c'è un nuovo rilascio. </para>

<para
>Per esempio, gli sviluppatori di &kmail; potrebbero lavorare a una nuova funzionalità in un ramo diverso per non interferire con la versione usata dagli altri sviluppatori. Questo ramo contiene dei lavori in corso, mentre il ramo principale (detto tronco) potrebbe averne altri. </para>

<para
>Un tag, invece, è un'istantanea del deposito del codice sorgente in un certo momento. Ciò viene usato dalla squadra di amministrazione di &kde; per segnare una versione del codice sorgente adatta al rilascio, lasciando allo stesso tempo che gli sviluppatori possano lavorare sul codice. </para>

<para
>In &subversion; non ci sono differenze tra rami, tag o tronco nel codice. È solo una convenzione usata dagli sviluppatori. Ciò rende difficile supportare bene i rami e i tag con &kdesrc-build;. Tuttavia, alcune cose si possono fare. </para>

</sect3>

<sect3 id="branch-support">
<title
>Come usare rami e tag</title>

<para
>Il supporto per rami e tag viene gestito da una serie di opzioni, che vanno da una richiesta generica di una versione allo scaricamento di un &url; specifico per gli utenti avanzati. </para>

<para
>Il modo più semplice è usare le opzioni &branch; e &tag;. Devi solo usare l'opzione insieme al nome del ramo o tag voluto del modulo, e &kdesrc-build; cercherà di determinare la posizione giusta all'interno del deposito di &kde; da cui scaricare. Per la maggior parte dei moduli di &kde; funziona tutto bene.</para>

<informalexample>
<para
>Per scaricare kdelibs di &kde; 4.6 (che è noto semplicemente come il ramo 4.6): </para>

<screen
>module kdelibs
  branch <replaceable
>4.6</replaceable>
  # altre opzioni...
end module
</screen>

<para
>Oppure, per scaricare kdemultimedia per il rilascio &kde; 4.6.1:</para>

<screen
>module kdemultimedia
  tag <replaceable
>4.6.1</replaceable>
  # altre opzioni...
end module
</screen>

</informalexample>

<tip
><para
>Puoi specificare un valore globale per il ramo. Se lo fai, non dimenticarti di specificare un ramo diverso per i moduli che non dovrebbero usare quello globale! </para
></tip>
</sect3>

<sect3 id="advanced-branches">
<title
>Opzioni avanzate di supporto dei rami</title>

<para
>&kdesrc-build; supporta due opzioni per le situazioni dove &branch; e &tag; non indovinano il percorso giusto: &module-base-path; e &override-url;. </para>

<itemizedlist>
<listitem
><para
>&module-base-path; si usa per aiutare &kdesrc-build; a scrivere la parte mancante del percorso di un modulo. Nel deposito di &kde;, tutti i percorsi sono nella forma <filename class="directory"
>radiceSvn/percorso-base-modulo/<replaceable
>nome-modulo</replaceable
></filename
>. Normalmente &kdesrc-build; riesce a capire da sé la parte in mezzo. Quando non ci riesce, puoi usare &module-base-path;, così: </para>

<informalexample>
<screen
>module kdesupport
    # kdesupport supporta vari tag per ordinare facilmente i programmi
    # necessari per un certo rilascio della piattaforma di KDE.
    module-base-path tags/kdesupport-for-4.5
end module
</screen>

<para
>Ciò farà scaricare a &kdesrc-build; kdesupport da (in questo esempio) <filename
>svn://anonsvn.kde.org/home/kde/<replaceable
>tags/kdesupport-for-4.5</replaceable
></filename
>. </para>
</informalexample>
<tip
><para
>Nelle versioni precedenti di &kdesrc-build;, il &module-base-path; era gestito diversamente. Se ravvisi dei problemi con una vecchia definizione di &module-base-path;, forse dovresti verificare che il percorso effettivo sia come se lo aspetta &kdesrc-build; usando l'opzione <link linkend="cmdline-pretend"
>--pretend</link
>. </para
></tip>
</listitem>

<listitem
><para
>L'opzione &override-url;, invece, ti richiede di specificare il percorso esatto da cui scaricare. Però, ti permette di scaricare da percorsi che le versioni precedenti di &kdesrc-build; non riuscirebbero mai a raggiungere. Attualmente, l'opzione &module-base-path; dovrebbe bastare per qualsiasi &URL; sorgente di &subversion;. </para>

<important
><para
>&kdesrc-build; non toccherà né modificherà il valore che specifichi per &override-url;, quindi se cambi le tue impostazioni di &svn-server; dovresti cambiare anche questa. </para
></important>

</listitem>
</itemizedlist>

</sect3>

</sect2>

<sect2 id="stopping-the-build-early">
<title
>Fermare prima la generazione</title>

<sect3 id="the-build-continues">
<title
>La generazione normalmente prosegue anche se si verificano problemi</title>

<para
>&kdesrc-build; aggiornerà, genererà e installerà normalmente tutti i moduli presenti nell'elenco dei moduli specificato da generare, anche se un modulo restituisce un errore durante la generazione. Questa è di solito una comodità che ti permette di aggiornare i pacchetti software anche se viene fatto un semplice errore in uno dei depositi dei sorgenti durante lo sviluppo che causa la rottura della generazione. </para>

<para
>Tuttavia, potresti voler fermare le attività di &kdesrc-build; quando un modulo non riesce a generare e installare. Questa operazione ti permette di risparmiare il tempo che perderesti nel tentare di fare progressi quando i moduli restanti nell'elenco di generazione non sono in grado di generare correttamente o, in special modo, se non hai ancora generato correttamente i moduli dell'elenco. </para>

</sect3>

<sect3 id="stop-on-failure-stops-early">
<title
>Fermare prima con --stop-on-failure</title>

<para
>Il metodo principale per eseguire questa operazione è usare l'opzione a riga di comando <link linkend="cmdline-stop-on-failure"
>--stop-on-failure</link
> quando esegui &kdesrc-build;. </para>

<para
>Questa opzione può essere impostata anche nel <link linkend="conf-stop-on-failure"
>file di configurazione</link
> affinché diventi la modalità operativa normale. </para>

<para
>È anche possibile istruire &kdesrc-build; al tempo di esecuzione per fermare la generazione <emphasis
>dopo</emphasis
> il completamento del modulo corrente su cui sta lavorando. È l'opposto dell'interruzione di &kdesrc-build; con un comando come <keycombo action="simul"
>&Ctrl;<keycap
>C</keycap
></keycombo
>, che interrompe &kdesrc-build; immediatamente, perdendo però l'avanzamento del modulo corrente. </para>

<important
><para
>L'interruzione di &kdesrc-build; durante l'installazione di un modulo, quando è abilitata l'opzione <link linkend="conf-use-clean-install"
>use-clean-install</link
>, significa che il modulo interrotto non sarà disponibile fino a quando &kdesrc-build; non sarà in grado di generare correttamente il modulo.</para>

<para
>Se hai la necessità di interrompere &kdesrc-build;, in questa situazione, spegnendolo in modo non elegante, prova almeno a evitare di farlo mentre &kdesrc-build; sta installando un modulo.</para>
</important>

</sect3>

<sect3 id="stopping-early-without-stop-on-failure">
<title
>Fermare &kdesrc-build; prima senza --stop-on-failure</title>

<para
>Come detto sopra, è possibile spegnere prima &kdesrc-build; in modo elegante una volta che ha completato il modulo su cui sta lavorando. Per farlo, devi inviare il segnale <literal
>HUP</literal
> di POSIX a &kdesrc-build;. </para>

<para
>Puoi farlo con un comando come <command
>pkill</command
> (nei sistemi &Linux;), nel modo seguente:</para>

<programlisting
><prompt
>$ </prompt
><userinput
><command
>pkill <option
>-HUP</option
> kdesrc-build</command
></userinput
>
</programlisting>

<para
>Una volta eseguito correttamente, nell'output di &kdesrc-build; comparirà un messaggio simile a:</para>

<programlisting
>[ build ] recv SIGHUP, will end after this module
</programlisting>

<note>
<para
>&kdesrc-build; potrebbe mostrare più volte questo messaggio a seconda del numero di singoli processi di &kdesrc-build; attivi. Ciò è normale e non è un'indicazione di errore.</para>
</note>

<para
>Una volta che &kdesrc-build; ha riconosciuto il segnale, fermerà l'elaborazione dopo che il modulo corrente è generato e installato. Se &kdesrc-build; sta ancora aggiornando il codice sorgente quando viene ricevuta la richiesta, &kdesrc-build; si fermerà dopo che viene completato l'aggiornamento del codice sorgente del modulo. Una volta che entrambi i processi di aggiornamento e generazione vengono fermati prima, &kdesrc-build; restituirà i risultati parziali e si chiuderà. </para>

</sect3>

</sect2>

<sect2 id="building-successfully">
<title
>Come &kdesrc-build; cerca di far riuscire la generazione</title>

<sect3 id="automatic-rebuilds">
<title
>Rigenerazioni automatiche</title>

<para
>&kdesrc-build; includeva delle funzionalità per cercare automaticamente di rigenerare un modulo dopo un errore (e a volte questo tentativo funzionava, a causa di imperfezioni nel sistema di generazione del tempo). Grazie al passaggio a &cmake;, il sistema di generazione non presenta più questi problemi, e quindi &kdesrc-build; non cercherà di generare un modulo più di una volta. Ci sono tuttavia situazioni in cui &kdesrc-build; cercherà autonomamente di fare qualcosa:</para>

<itemizedlist>

<listitem
><para
>Se cambi le opzioni <link linkend="conf-configure-flags"
>configure-flags</link
> o <link linkend="conf-cmake-options"
>cmake-options</link
> di un modulo, &kdesrc-build; se ne accorgerà e rieseguirà automaticamente <command
>configure</command
> o <command
>cmake</command
> per quel modulo.</para
></listitem>

<listitem
><para
>Se il sistema di generazione non esiste (anche se &kdesrc-build; non l'ha eliminato), &kdesrc-build; lo ricreerà automaticamente. Ciò è utile per poter effettuare un <link linkend="cmdline-refresh-build"
>--refresh-build</link
> completo per un modulo particolare senza doverlo fare su altri.</para
></listitem>

</itemizedlist>

</sect3>

<sect3 id="manual-rebuilds">
<title
>Rigenerare un modulo manualmente</title>
<para
>Se cambi le impostazioni di un'opzione di un modulo, o cambia il codice sorgente del modulo in un modo che &kdesrc-build; non riconosce, potresti dover rigenerare il modulo a mano.</para>

<para
>Per farlo basta eseguire <userinput
><command
>kdesrc-build</command
> <option
>--refresh-build</option
> <option
><replaceable
>modulo</replaceable
></option
></userinput
>. </para>

<para
>Se volessi invece che &kdesrc-build; rigenerasse il modulo automaticamente durante il prossimo aggiornamento normale della generazione, puoi creare un file speciale. Ogni modulo ha una cartella di generazione. Se crei un file di nome <filename
>refresh-me</filename
> nella cartella di generazione di un modulo, &kdesrc-build; rigenererà il modulo la prossima volta che partirà il processo di generazione, anche se normalmente avrebbe effettuato la più veloce generazione incrementale.</para>

<tip>
<para
>Come impostazione predefinita, la cartella di generazione è <filename class="directory"
>~/kdesrc/build/<replaceable
>modulo</replaceable
>/</filename
>. Se cambi l'impostazione dell'opzione &build-dir;, usa quella invece di <filename class="directory"
>~/kdesrc/build</filename
>.</para>
</tip>

<informalexample>
<para
>Rigenerazione usando <filename
>refresh-me</filename
> per il modulo <replaceable
>kdelibs</replaceable
>:</para>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>touch</command
> <filename
>~/kdesrc/build/<replaceable
>kdelibs</replaceable
>.refresh-me</filename
></userinput>
<prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
></userinput
>
</screen>
</informalexample>
</sect3>

</sect2>

<sect2 id="changing-environment">
<title
>Cambiare le impostazioni delle variabili d'ambiente</title>
<para
>Normalmente &kdesrc-build; usa l'ambiente presente all'avvio quando esegue i programmi per effettuare aggiornamenti e generazioni. Ciò è utile per quando si esegue &kdesrc-build; dalla riga di comando.</para>

<para
>Tuttavia, potresti voler cambiare le impostazioni delle variabili d'ambiente per cui &kdesrc-build; non fornisce direttamente un'opzione (per esempio, per configurare delle variabili d'ambiente richieste se chiami &kdesrc-build; da un programma come &cron;). Ciò è possibile con l'opzione &set-env;.</para>

<para
>Al contrario della maggior parte delle opzioni, può essere impostata più volte, e accetta due voci, separate da spazi. La prima è il nome della variabile d'ambiente da impostare, e il resto della riga è il suo valore.</para>

<informalexample>
<para
>Impostare <userinput
><envar
>DISTRO</envar
>=<replaceable
>BSD</replaceable
></userinput
> per tutti i moduli:</para>
<screen
>global
  set-env <replaceable
>DISTRO</replaceable
> <replaceable
>BSD</replaceable>
end global
</screen>
</informalexample>

</sect2>

<sect2 id="resuming">
<title
>Riprendere le generazioni</title>

<sect3 id="resuming-failed">
<title
>Riprendere una generazione non riuscita o annullata</title>

<para
>Puoi dire a &kdesrc-build; di iniziare a generare da un modulo diverso da quello che sceglierebbe normalmente. Ciò può essere utile quando una serie di moduli non è riuscita, o se hai annullato una generazione a metà. Puoi controllare questo comportamento con le opzioni &cmd-resume-from; e &cmd-resume-after;.</para>

<note
><para
>Alcune versioni precedenti di &kdesrc-build; saltavano l'aggiornamento del sorgente alla ripresa di una generazione. Questa non è più l'impostazione predefinita, ma puoi sempre usare l'opzione da riga di comando <option
>--no-src</option
> per saltare l'aggiornamento.</para
></note>

<informalexample>
<para
>Riavvio della generazione a partire da kdebase:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--resume-from=<replaceable
>kdebase</replaceable
></option
></userinput
>
</screen>
</informalexample>

<informalexample>
<para
>Riprendere la generazione dopo kdebase (nel caso che hai corretto il problema manualmente e hai installato il modulo da te):</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--resume-after=<replaceable
>kdebase</replaceable
></option
></userinput
>
</screen>
</informalexample>

<para
>Se l'ultima generazione di &kdesrc-build; si è conclusa con un errore, puoi usare anche l'opzione <link linkend="cmdline-resume"
>--resume</link
>, che riprende l'ultima generazione a partire dal modulo che ha provocato l'errore. Gli aggiornamenti di codice sorgente e metadati vengono saltati (ma se ti servono, è di solito meglio usare <link linkend="cmdline-resume-from"
>--resume-from</link
>).</para>


</sect3>

<sect3 id="ignoring-modules">
<title
>Ignorare dei moduli in una generazione</title>

<para
>Analogamente a come si può <link linkend="resuming-failed"
>riprendere la generazione di un modulo</link
>, si può invece scegliere di aggiornare e generare tutto normalmente, ma ignorando una serie di moduli.</para>

<para
>Puoi farlo usando l'opzione &cmd-ignore-modules;. Questa opzione dice a &kdesrc-build; di ignorare tutti i moduli sulla riga di comando durante l'aggiornamento e la generazione.</para>

<informalexample>
<para
>Ignorare extragear/multimedia e kdereview in un'esecuzione completa:</para>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--ignore-modules</option
> <replaceable
>extragear/multimedia kdereview</replaceable
></userinput
>
</screen>
</informalexample>

</sect3>
</sect2>

<sect2 id="changing-env-from-cmd-line">
<title
>Cambiare le opzioni dalla riga di comando</title>

<sect3 id="changing-global-opts">
<title
>Cambiare le opzioni globali</title>
<para
>Puoi cambiare le impostazioni delle opzioni lette dal <link linkend="configure-data"
>file di configurazione</link
> direttamente dalla riga di comando. Questa modifica si sostituirà alle impostazioni del file di configurazione, ma solo temporaneamente. Ha effetto solo fintanto che è presente sulla riga di comando.</para>

<para
>&kdesrc-build; ti permette di cambiare opzioni con un nome come <replaceable
>nome-opzione</replaceable
> passando un argomento sulla riga di comando nella forma <userinput
><option
>--<replaceable
>nome-opzione</replaceable
>=valore</option
></userinput
>. &kdesrc-build; capirà se l'opzione non è tra le proprie, e ne cercherà il nome nel suo elenco di opzioni. Se non lo troverà, ti avvertirà, altrimenti ricorderà il valore impostato e sostituirà qualsiasi impostazione del file di configurazione.</para>

<informalexample>
<para
>Impostare l'opzione &source-dir; a <filename
>/dev/null</filename
> per fare una prova:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--pretend</option
> <option
>--<replaceable
>source-dir</replaceable
>=<replaceable
>/dev/null</replaceable
></option
></userinput
>
</screen>

</informalexample>

</sect3>

<sect3 id="changing-module-opts">
<title
>Cambiare le opzioni dei moduli</title>
<para
>È anche possibile cambiare le opzioni solo per un modulo specifico. La sintassi è simile: --<replaceable
>modulo</replaceable
>,<replaceable
>nome-opzione</replaceable
>=<replaceable
>valore</replaceable
>. </para>

<para
>Questa modifica si sostituisce a qualsiasi impostazione simile per il modulo trovata nel <link linkend="configure-data"
>file di configurazione</link
>, e si applica solo quando l'opzione viene passata dalla riga di comando.</para>

<informalexample>
<para
>Usare una diversa cartella di generazione per il modulo kdeedu:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--<replaceable
>kdeedu</replaceable
>,<replaceable
>build-dir</replaceable
>=<replaceable
>diversa</replaceable
></option
></userinput
>
</screen>

</informalexample>

</sect3>

</sect2>

</sect1>

<sect1 id="developer-features">
<title
>Funzionalità per gli sviluppatori di &kde;</title>

<sect2 id="ssh-agent-reminder">
<title
>Controlli dell'agente &ssh;</title>
<para
>&kdesrc-build; può assicurare che gli sviluppatori di &kde; che usano &ssh; per accedere al deposito del codice sorgente di &kde; non dimentichino di tenere attivato l'agente &ssh;. Ciò potrebbe far fermare indefinitamente &kdesrc-build; in attesa della password &ssh; dello sviluppatore, quindi, come impostazione predefinita, &kdesrc-build; controllerà se l'agente è in esecuzione prima di aggiornare il codice sorgente. </para>

<note
><para
>Questo viene fatto solo per gli sviluppatori di &kde; che usano &ssh;. Questo perché non serve nessuna password per il ritiro anonimo predefinito. &subversion; gestirà le password per il secondo protocollo possibile per gli sviluppatori di &kde;, https. </para
></note>

<para
>Potresti voler disattivare il controllo dell'agente &ssh;, nel caso che si verifichino situazioni in cui &kdesrc-build; rilevi erroneamente la presenza dell'agente. Per disattivare il controllo dell'agente, imposta l'opzione <option
>disable-agent-check</option
> a <userinput
>true</userinput
>.</para>

<informalexample>
<para
>Disattivare il controllo dell'agente &ssh;:</para>
<screen
>global
  disable-agent-check true
end global
</screen>
</informalexample>

</sect2>

</sect1>

<sect1 id="other-features">
<title
>Altre funzionalità di &kdesrc-build;</title>

<sect2 id="changing-verbosity">
<title
>Cambiare la quantità di output da &kdesrc-build;</title>
<para
>&kdesrc-build; ha diverse opzioni per controllare la quantità di output generato dallo script. In ogni caso, gli errori saranno sempre segnalati.</para>

<itemizedlist>
<listitem
><para
>L'opzione <option
>--quiet</option
> (la sua forma breve è <option
>-q</option
>) fa stare &kdesrc-build; per lo più zitto. Solo i messaggi importanti, gli avvertimenti e gli errori saranno mostrati. Quando disponibile, il progresso della generazione sarà ancora mostrato.</para
></listitem>

<listitem
><para
>L'opzione <option
>--really-quiet</option
> (senza forma breve) fa visualizzare a &kdesrc-build; solo gli avvisi importanti o gli errori durante l'esecuzione.</para
></listitem>

<listitem
><para
>L'opzione <option
>--verbose</option
> (la sua forma breve è <option
>-v</option
>) fa generare a &kdesrc-build; dell'output molto dettagliato.</para
></listitem>

<listitem
><para
>L'opzione <option
>--debug</option
> è solo per scopi di prova e correzione, fa funzionare &kdesrc-build; come se <option
>--verbose</option
> fosse attiva, mette i comandi nell'output del terminale, e visualizzerà informazioni di debug per molte funzioni.</para
></listitem>
</itemizedlist>

</sect2>

<sect2 id="kdesrc-build-color">
<title
>Output colorato</title>
<para
>Anche se viene eseguito da &konsole; o da un altro terminale, &kdesrc-build; sarà normalmente visualizzato con del testo colorato.</para>

<para
>Puoi disattivarlo usando l'opzione <option
>--no-color</option
> sulla riga di comando, o impostando l'opzione &colorful-output; nel <link linkend="configure-data"
>file di configurazione</link
> a <userinput
>false</userinput
>. </para>

<informalexample>
<para
>Disattivare l'output colorato nel file di configurazione:</para>
<screen
>global
  colorful-output false
end global
</screen>
</informalexample>

</sect2>

<sect2 id="deleting-build-dir">
<title
>Rimuovere cartelle non necessarie dopo la generazione</title>
<para
>Se hai poco spazio su disco ma vuoi comunque avere l'ultimo codice sorgente di &kde;, &kdesrc-build; può ridurre l'occupazione del disco durante la generazione di &kde; da &subversion;.</para>

<note
><para
>Tieni presente che generare &kde; porta via molto spazio. Ci sono diverse parti ingombranti durante l'uso di &kdesrc-build;:</para
></note>

<orderedlist>
<listitem
><para
>Il codice sorgente stesso può portar via un bel po' di spazio. I moduli predefiniti portano via 1,6 gigabyte di spazio su disco. Puoi ridurre questa quantità assicurandoti di generare solo i moduli che vuoi davvero. &kdesrc-build; non eliminerà il codice sorgente dal disco anche se elimini la voce corrispondente dal <link linkend="configure-data"
>file di configurazione</link
>, quindi assicurati di eliminare il codice sorgente inutilizzato. Nota che i file sorgenti sono scaricati da Internet, e <emphasis
>non</emphasis
> dovresti eliminarli se li stai usando, almeno fino a quando non hai finito di usare &kdesrc-build;.</para>

<para
>Inoltre, se hai già una versione di &Qt; installata dalla tua distribuzione (e ce ne sono buone probabilità), probabilmente non hai bisogno di installare il modulo qt. Ciò risparmierà circa 200 megabyte di spazio su disco.</para>

<para
>Una cosa da tener presente è il modo in cui funziona &subversion;: per ogni file ritirato dal deposito ci sono due file su disco. &kdesrc-build; al momento non ha codice per cercare di minimizzare la dimensione del codice sorgente quando non viene utilizzato. </para>
</listitem>

<listitem>
<para
>&kdesrc-build; creerà una cartella di generazione separata per generarci il codice sorgente. A volte &kdesrc-build; dovrà copiare una cartella di codice sorgente in una cartella di generazione finta. Quando questo avviene, si usano dei collegamenti simbolici per risparmiare spazio, per cui non dovrebbe creare problemi d'ingombro. La cartella di generazione sarà di solito molto più grande della cartella del codice sorgente di un modulo. Per esempio, la cartella di generazione di kdebase è di circa 1050 megabyte, mentre il codice sorgente di kdebase è solo di circa 550 megabyte.</para>

<para
>Fortunatamente, la cartella di generazione non è necessaria dopo che un modulo è stato correttamente generato e installato. &kdesrc-build; può rimuovere automaticamente la cartella di generazione dopo l'installazione di un modulo; vedi gli esempi sotto per maggiori informazioni. Nota che questo passo renderà impossibile a &kdesrc-build; l'uso di veloci generazioni incrementali.</para>
</listitem>

<listitem
><para
>Infine, c'è lo spazio necessario per l'installazione di &kde; stessa, che non va dalla cartella di generazione. Questa usa tipicamente meno spazio della cartella di generazione. È però difficile avere numeri esatti. </para
></listitem>
</orderedlist>

<para
>Come si riducono i requisiti di spazio di &kde;? Un modo è usare i flag di compilazione giusti, ottimizzando per ridurre lo spazio invece che per la velocità. Un altro modo che può avere un effetto notevole è rimuovere le informazioni di debug dalla generazione di &kde;. </para>

<warning
><para
>Dovresti sapere bene quello che stai facendo prima di decidere di rimuovere le informazioni di debug. Usare programmi di ultimissima generazione vuol dire che stai usando programmi potenzialmente molto più inclini ad andare in crash di un rilascio stabile. Se stai usando programmi senza informazioni di debug, potrebbe essere molto difficile creare una buona segnalazione di errori per far risolvere il problema, e probabilmente dovrai riabilitare il debug per l'applicazione affetta e rigenerarla per aiutare uno sviluppatore a correggere il problema. Quindi, rimuovi le informazioni di debug a tuo rischio e pericolo! </para
></warning>

<informalexample>
<para
>Rimuovere la cartella di generazione dopo l'installazione di un modulo. La cartella del codice sorgente è tenuta, e il debug è abilitato:</para>

<screen
>global
  configure-flags      --enable-debug
  remove-after-install builddir        # Rimuovi la cartella di generazione dopo l'installazione
end global
</screen>

<para
>Rimuovere la cartella di generazione dopo l'installazione, senza informazioni di debug, con ottimizzazione per le dimensioni.</para>

<screen
>global
  cxxflags             -Os             # Ottimizza per le dimensioni
  configure-flags      --disable-debug
  remove-after-install builddir        # Rimuovi la cartella di generazione dopo l'installazione
end global
</screen>
</informalexample>
</sect2>

</sect1>

</chapter>

<chapter id="kde-cmake">
<title
>&cmake;, il sistema di generazione di &kde;</title>

<sect1 id="kde-cmake-intro">
<title
>Introduzione a &cmake;</title>

<para
>Nel marzo 2006, il programma &cmake; sconfisse diversi concorrenti e fu selezionato per essere il sistema di generazione di &kde; 4, sostituendo il sistema basato sugli Autotools che &kde; aveva usato fin dall'inizio.</para>

<para
>È disponibile un'introduzione a &cmake; sul <ulink url="https://community.kde.org/Guidelines_HOWTOs/CMake"
>wiki della Comunità di &kde;</ulink
>. Fondamentalmente, invece di eseguire <userinput
><command
>make</command
> <option
>-f</option
> <filename
>Makefile.cvs</filename
></userinput
>, quindi <command
>configure</command
>, e quindi &make;, dobbiamo semplicemente eseguire &cmake; e poi &make;. </para>

<para
>&kdesrc-build; supporta &cmake;. Alcune funzionalità di &kdesrc-build; erano in realtà funzionalità per il sistema di generazione sottostante, incluse <link linkend="conf-configure-flags"
>configure-flags</link
> e <link linkend="conf-do-not-compile"
>do-not-compile</link
>. Quando sono disponibili funzionalità equivalenti, sono fornite. Per esempio, l'equivalente dell'opzione configure-flags è <link linkend="conf-cmake-options"
>cmake-options</link
>, e anche l'opzione <link linkend="conf-do-not-compile"
>do-not-compile</link
> è supportata per &cmake; nella versione 1.6.3 di &kdesrc-build;. </para>

</sect1>
</chapter>

<chapter id="credits-and-license">
<title
>Riconoscimenti e licenza</title>

<para
>Traduzione di Federico Zenith<email
>federico.zenith@member.fsf.org</email
> e Valter Mura<email
>valtermura@gmail.com</email
></para
> &underFDL; </chapter>

<appendix id="appendix-modules">
<title
>Moduli di &kde; e organizzazione del codice sorgente</title>
<sect1 id="module-concept">
<title
>Il <quote
>modulo</quote
></title>

<para
>&kde; raggruppa i suoi programmi in <quote
>moduli</quote
> di varie dimensioni. Questi erano inizialmente un vago raggruppamento di alcuni grandi moduli, ma con l'introduzione dei <ulink url="https://commits.kde.org/"
>depositi di codice sorgente</ulink
> basati su <ulink url="https://git-scm.com/"
>Git</ulink
> questi grandi moduli sono stati divisi in molti moduli più piccoli. </para>

<para
>Anche &kdesrc-build; usa questo concetto di modulo. Essenzialmente, un <quote
>modulo</quote
> è un raggruppamento di codice che può essere scaricato, generato, testato e installato. </para>

<sect2 id="single-modules">
<title
>Moduli singoli</title>

<para
>È facile far generare un singolo modulo a &kdesrc-build;. L'elenco seguente è un esempio di come può essere scritta una dichiarazione per un modulo basato su &subversion; nel <link linkend="kdesrc-buildrc"
>file di configurazione</link
>.</para>

<programlisting
>module <replaceable
>kdepippo</replaceable>
    <option
><replaceable
>cmake-options -DCMAKE_BUILD_TYPE=Debug</replaceable
></option>
end module
</programlisting>

<tip
><para
>Questo è un modulo basato su &subversion; perché non usa un'opzione <link linkend="conf-repository"
>repository</link
>. Inoltre, l'opzione <option
>cmake-options</option
> è elencata solo come esempio e non è necessaria.</para
></tip>

</sect2>
<sect2 id="module-groups">
<title
>Gruppi di moduli collegati</title>

<para
>La maggior parte dei moduli di &kde; sono oggi basati su &git;, e sono normalmente combinati in gruppi di moduli.</para>

<para
>&kdesrc-build; supporta pertanto anche i gruppi di moduli, con gli <link linkend="module-sets"
>insiemi di moduli</link
>. Per esempio:</para>

<programlisting
>module-set <replaceable
>moduli-base</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>kde-runtime kde-workspace kde-baseapps</replaceable>
end module-set
</programlisting>

<tip
><para
>Se preferisci, puoi lasciare il nome dell'insieme di moduli (<replaceable
>moduli-base</replaceable
>). L'impostazione di <option
>repository</option
> dice a &kdesrc-build; da dove scaricare il codice sorgente, ma puoi anche usare un URL <symbol
>git://</symbol
>.</para
></tip>

<para
>Una funzionalità speciale di <quote
><option
>repository</option
> <literal
>kde-projects</literal
></quote
> è che &kdesrc-build; includerà automaticamente tutti i moduli &git; raggruppati sotto i moduli da te elencati (nella banca dati dei progetti di &kde;).</para>
</sect2>

<sect2 id="module-branch-groups">
<title
><quote
>Gruppi di rami</quote
> dei moduli</title>

<para
>Estendendo il concetto di <link linkend="module-groups"
>gruppo di moduli</link
>, gli sviluppatori di &kde; hanno notato che sincronizzare il nome dei rami di Git in molti depositi stava diventando difficile, soprattutto durante il lavoro per le nuove infrastrutture di &kde; per &Qt; 5. </para>

<para
>È stato quindi sviluppato il concetto di <quote
>gruppi di rami</quote
>, per permettere a utenti e sviluppatori di selezionare uno tra pochi gruppi, e permettere allo script di selezionare automaticamente il ramo di Git appropriato. </para>

<para
>&kdesrc-build; supporta questa funzionalità dalla versione 1.16-pre2, attraverso l'opzione <link linkend="conf-branch-group"
>branch-group</link
>. </para>

<example id="ex-branch-group">
<title
>Esempio dell'uso dei gruppi di rami</title>

<para
>I gruppi di rami si possono usare nel file di configurazione come segue: </para>

<programlisting
>global
    # Seleziona KDE Frameworks 5 e altre applicazioni basate su Qt5
    <option
>branch-group</option
> <replaceable
>kf5-qt5</replaceable>

    # Altre opzioni globali vanno qui...
end global

module-set
    # branch-group funziona solo per kde-projects
    <option
>repository</option
> kde-projects

    # branch-group viene ereditato da quello impostato globalmente,
    # ma potrebbe essere specificato qui.

    <option
>use-modules</option
> <replaceable
>kdelibs kde-workspace</replaceable>
end module-set

# Il ramo di kdelibs sarà «frameworks»
# Il ramo di kde-workspace sarà «master» (nell'agosto 2013)
</programlisting>

<para
>In questo caso lo stesso <literal
>branch-group</literal
> produce diversi nomi di rami per ogni modulo di Git. </para>
</example>

<para
>Questa funzionalità richiede alcuni dati gestiti dagli sviluppatori di &kde; in un deposito Git chiamato <literal
>kde-build-metadata</literal
>, però questo modulo verrà incluso automaticamente da &kdesrc-build; (anche se lo potresti veder apparire nell'output dello script). </para>

<tip
><para
>I moduli di &kde; che non hanno il nome di un ramo impostato per il gruppo di rami che scegli saranno predefiniti al nome di un ramo appropriato, come se non avessi specificato <literal
>branch-group</literal
>. </para
></tip>

</sect2>

</sect1>
</appendix>

<appendix id="appendix-profile">
<title
>Procedure sostituite di configurazione dei profili</title>

<sect1 id="old-profile-setup">
<title
>Configurare in profilo d'accesso di &kde;</title>

<para
>Queste istruzioni indicano come configurare il profilo necessario per assicurare che il computer possa accedere al desktop &plasma; di &kde; appena generato. &kdesrc-build; cercherà normalmente di farlo da sé (vedi <xref linkend="session-driver"/>). Questa sezione dell'appendice può essere utile per chi non può usare il supporto di &kdesrc-build; per la configurazione del profilo di accesso. Tuttavia le istruzioni potrebbero non sempre essere aggiornate, e può essere utile consultare il file <filename
>kde-env-master.sh</filename
> incluso nel codice sorgente di &kdesrc-build;.</para>

<sect2 id="changing-profile">
<title
>Cambiare le impostazioni del profilo di avvio</title>

<important
><para
>Il file <filename
>.bash_profile</filename
> contiene le impostazioni di accesso alla popolare shell <application
>Bash</application
> usata da molte distribuzioni &Linux;. Se usi una shell diversa, potresti dover correggere i campioni forniti in questa sezione per la tua shell.</para
></important>

<para
>Apri o crea il file <filename
>.bash_profile</filename
> nella cartella Home con un qualsiasi editor di testo. Se stai generando il modulo qt (che è l'impostazione predefinita), aggiungi:<programlisting>
QTDIR=<replaceable
>(percorso a cartella qt)</replaceable
>   # Come ~/kdesrc/build/qt, predefinito
KDEDIR=<replaceable
>(percorso a cartella kde)</replaceable
> # Come ~/kde, predefinito
KDEDIRS=$KDEDIR
PATH=$KDEDIR/bin:$QTDIR/bin:$PATH
MANPATH=$QTDIR/doc/man:$MANPATH

# Fai la cosa giusta se LD_LIBRARY_PATH non è già impostata.
if [ -z $LD_LIBRARY_PATH ]; then
  LD_LIBRARY_PATH=$KDEDIR/lib:$QTDIR/lib
else
  LD_LIBRARY_PATH=$KDEDIR/lib:$QTDIR/lib:$LD_LIBRARY_PATH
fi

export QTDIR KDEDIRS PATH MANPATH LD_LIBRARY_PATH
</programlisting
> Oppure, se non stai generando qt (e stai usando le librerie &Qt; del sistema), aggiungi: <programlisting
>KDEDIR=<replaceable
>(percorso a kdedir)</replaceable
>  # Come ~/kde, predefinito.
KDEDIRS=$KDEDIR
PATH=$KDEDIR/bin:$QTDIR/bin:$PATH

# Fai la cosa giusta se LD_LIBRARY_PATH non è già impostata.
if [ -z $LD_LIBRARY_PATH ]; then
  LD_LIBRARY_PATH=$KDEDIR/lib
else
  LD_LIBRARY_PATH=$KDEDIR/lib:$LD_LIBRARY_PATH
fi

export KDEDIRS PATH LD_LIBRARY_PATH
</programlisting>
</para>

<para
>Se non stai usando un utente apposito, imposta una diversa variabile $<envar
>KDEHOME</envar
> per il nuovo ambiente nel file <filename
>.bash_profile</filename
>: <programlisting
>export KDEHOME="${HOME}/.kde-svn"

# Crealo se necessario
[ ! -e ~/.kde-svn ] &amp;&amp; mkdir ~/.kde-svn
</programlisting>
</para>

<note>
<para
>Se in seguito il menu K è vuoto o troppo affollato da applicazioni della tua distribuzione, potresti dover impostare le variabili d'ambiente <acronym
>XDG</acronym
> nel tuo <filename
>.bash_profile</filename
>: <programlisting
>XDG_CONFIG_DIRS="/etc/xdg"
XDG_DATA_DIRS="${KDEDIR}/share:/usr/share"
export XDG_CONFIG_DIRS XDG_DATA_DIRS
</programlisting>

</para>
</note>

</sect2>
<sect2 id="starting-kde">
<title
>Avviare &kde;</title>

<para
>Adesso che hai adattato le impostazioni d'ambiente per usare il &kde; giusto, è importante assicurarsi che sia usato anche lo script <command
>startkde</command
> giusto. </para>

<para
>Apri il file di testo <filename
>.xinitrc</filename
> dalla cartella Home, o crealo se necessario. Aggiungi la riga: <programlisting
><command
>exec</command
> <option
>${KDEDIR}/bin/startkde</option
>
</programlisting>
</para>

<important
><para
>Su alcune distribuzioni, potrebbe essere necessario effettuare gli stessi passi con il file <filename
>.xsession</filename
>, anch'esso nella cartella Home. Ciò è vero in particolare quando si usano gestori di accesso grafici come &kdm;, <application
>gdm</application
> o <application
>xdm</application
>.</para>
</important>

<para
>Adesso, avvia il tuo nuovo &kde;: nei sistemi &BSD; e &Linux; con supporto per i terminali virtuali, le combinazioni di tasti da <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F1</keycap
></keycombo
> a <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F12</keycap
></keycombo
>vengono usate per selezionare le console virtuali dalla 1 alla 12. Ciò permette di avere più di un ambiente desktop allo stesso tempo. Le prime sei sono terminali di testo, e le seguenti sono terminali grafici. </para>

<para
>Se invece quando avvii il computer ti viene presentato un gestore grafico, puoi usare il nuovo ambiente &kde; anche se non è elencato nelle opzioni. La maggior parte dei gestori d'accesso grafici, &kdm; incluso, hanno l'opzione di usare una <quote
>sessione personalizzata</quote
> all'accesso. Con questa opzione, vengono caricate le tue impostazioni di sessione dal file <filename
>.xsession</filename
> nella tua cartella Home. Se hai già modificato il file come descritto sopra, questa opzione dovrebbe farti entrare nella nuova installazione di &kde;. </para>

<para
>Se non lo fa, c'è qualcos'altro da provare che di solito funziona: Premi <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F2</keycap
></keycombo
>, e ti troverai davanti a un terminale testuale. Accedi con l'utente dedicato e scrivi: </para>

<screen
><command
>start</command
> <option
>--</option
> <option
>:1</option
>
</screen>

<tip>
<para
>Puoi usare il &kde; dal codice sorgente e il vecchio &kde; allo stesso tempo! accedi usando il tuo utente regolare, avvia il desktop stabile di &kde;. Premi <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F2</keycap
></keycombo
> (o <keycap
>F1</keycap
>, <keycap
>F3</keycap
>, eccetera) e ti sarà presentato un terminale testuale. Accedi con l'utente &subversion; dedicato a &kde; e scrivi:</para>

<screen
><command
>start</command
> <option
>--</option
> <option
>:1</option
>
</screen>

<para
>Puoi tornare al desktop &kde; del tuo utente regolare premendo il tasto scorciatoia per il desktop già in esecuzione. Questo è normalmente <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F7</keycap
></keycombo
>, ma potrebbe anche essere <keycap
>F6</keycap
> o <keycap
>F8</keycap
>. Per tornare al tuo &kde; compilato con &kdesrc-build;, devi usare la stessa sequenza, ma con il prossimo tasto funzione. Per esempio, se hai dovuto inserire <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F7</keycap
></keycombo
> per andare al &kde; normale, devi premere <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F8</keycap
></keycombo
> per tornare al &kde; di &kdesrc-build;.</para>
</tip>

</sect2>
</sect1>

</appendix>
</book>
