<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.5-Based Variant V1.1//EN" "dtd/kdedbx45.dtd" [
  <!--
    Documentation for kdesrc-build.
    Copyright (c) 2005-2008, 2010-2022 Michael Pyne <mpyne@kde.org>

    Copyright (c) 2005 Carlos Leonhard Woelz <carloswoelz@imap-mail.com>
    Copyright (c) 2009 Burkhard Lück <lueck@hube-lueck.de>
    Copyright (c) 2007, 2011 Federico Zenith <federico.zenith@members.fsf.org>
    Copyright (c) 2009-2011 Yuri Chornoivan <yurchor@ukr.net>
    ... and possibly others. Check the git source repository for specifics.

    Permission is granted to copy, distribute and/or modify this document under
    the terms of the GNU Free Documentation License, Version 1.2 or any later
    version published by the Free Software Foundation; with no Invariant
    Sections, no Front-Cover Texts, and no Back-Cover Texts.

    A copy of the license is included in COPYING.DOC. The license will be
    included in the generated documentation as well.
   -->
  <!ENTITY kappname "kdesrc-build">
  <!ENTITY package "kdesdk">
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % Dutch "INCLUDE"
> <!-- Change language only here -->
  <!ENTITY kdesrc-build "<application
>kdesrc-build</application
>">
  <!ENTITY BSD '<acronym
>BSD</acronym
>'>
  <!ENTITY git '<application
>Git</application
>'>
  <!ENTITY cmake '<application
>CMake</application
>'>
  <!ENTITY make '<application
>Make</application
>'>
  <!ENTITY ninja '<application
>Ninja</application
>'>
  <!ENTITY ssh '<application
>SSH</application
>'>
  <!ENTITY cron '<application
>Cron</application
>'>
  <!ENTITY subversion '<application
>Subversion</application
>'>
  <!ENTITY sudo '<application
>Sudo</application
>'>
  <!ENTITY url '<acronym
>URL</acronym
>'>

  <!-- These define shortcut entities for some of the configuration options.
       Just add them as necessary.
  -->

  <!ENTITY configure-flags '<link linkend="conf-configure-flags"
>configure-flags</link
>'>
  <!ENTITY kdedir '<link linkend="conf-kdedir"
>kdedir</link
>'>
  <!ENTITY qtdir '<link linkend="conf-qtdir"
>qtdir</link
>'>
  <!ENTITY build-dir '<link linkend="conf-build-dir"
>build-dir</link
>'>
  <!ENTITY module-base-path '<link linkend="conf-module-base-path"
>module-base-path</link
>'>
  <!ENTITY override-url '<link linkend="conf-override-url"
>override-url</link
>'>
  <!ENTITY source-dir '<link linkend="conf-source-dir"
>source-dir</link
>'>
  <!ENTITY email-address '<link linkend="conf-email-address"
>email-address</link
>'>
  <!ENTITY email-on-compile-error '<link linkend="conf-email-on-compile-error"
>email-on-compile-error</link
>'>
  <!ENTITY colorful-output '<link linkend="conf-colorful-output"
>colorful-output</link
>'>
  <!ENTITY tag '<link linkend="conf-tag"
>tag</link
>'>
  <!ENTITY branch '<link linkend="conf-branch"
>branch</link
>'>
  <!ENTITY do-not-compile '<link linkend="conf-do-not-compile"
>do-not-compile</link
>'>
  <!ENTITY checkout-only '<link linkend="conf-checkout-only"
>checkout-only</link
>'>
  <!ENTITY svn-server '<link linkend="conf-svn-server"
>svn-server</link
>'>
  <!ENTITY make-install-prefix '<link linkend="conf-make-install-prefix"
>make-install-prefix</link
>'>
  <!ENTITY niceness '<link linkend="conf-niceness"
>niceness</link
>'>
  <!ENTITY set-env '<link linkend="conf-set-env"
>set-env</link
>'>
  <!ENTITY libpath '<link linkend="conf-libpath"
>libpath</link
>'>
  <!ENTITY binpath '<link linkend="conf-binpath"
>binpath</link
>'>

  <!-- These define shortcut entities for some of the command line options.
       Just add them as necessary.
  -->
  <!ENTITY cmd-nice '<link linkend="cmdline-nice"
>--nice</link
>'>
  <!ENTITY cmd-ignore-modules '<link linkend="cmdline-ignore-modules"
>--ignore-modules</link
>'>
  <!ENTITY cmd-resume-from '<link linkend="cmdline-resume-from"
>--resume-from</link
>'>
  <!ENTITY cmd-resume-after '<link linkend="cmdline-resume-after"
>--resume-after</link
>'>
  <!ENTITY cmd-reconfigure '<link linkend="cmdline-reconfigure"
>--reconfigure</link
>'>
  <!ENTITY cmd-refresh-build '<link linkend="cmdline-refresh-build"
>--refresh-build</link
>'>
]>

<book id="kdesrc-build" lang="&language;">

<bookinfo>
<title
>Handboek scripts voor &kdesrc-build;</title>

<authorgroup id="authors">
    <author
>&Michael.Pyne; &Michael.Pyne.mail;</author>
    <author
><personname
><firstname
>Carlos</firstname
><surname
>Woelz</surname
></personname
> <email
>carloswoelz@imap-mail.com</email
> </author>

&Freek.de.Kruijf;&Ronald.Stroethoff; 

</authorgroup>

<copyright>
<year
>2006</year>
<year
>2007</year>
<year
>2008</year>
<year
>2009</year>
<year
>2010</year>
<year
>2011</year>
<year
>2012</year>
<year
>2013</year>
<year
>2014</year>
<year
>2015</year>
<year
>2016</year>
<year
>2017</year>
<year
>2018</year>
<year
>2019</year>
<holder
>Michael Pyne</holder>
</copyright>

<copyright>
<year
>2005</year>
<holder
>Carlos Woelz</holder>
</copyright>

<legalnotice
>&FDLNotice;</legalnotice>

<date
>2018-01-20</date>
<releaseinfo
>&kdesrc-build; 17.12</releaseinfo>

<abstract>
<para
>&kdesrc-build; is een script dat &kde; software bouwt en installeert direct vanaf de broncode in de broncoderepositories van het &kde; project.</para>
</abstract>

<keywordset>
<keyword
>KDE</keyword>
<keyword
>kdesdk</keyword>
<keyword
>SVN</keyword>
<keyword
>Subversion</keyword>
<keyword
>git</keyword>
<keyword
>KDE-ontwikkeling</keyword>
<!-- Older names for the software -->
<keyword
>kdesvn-build</keyword>
<keyword
>kdecvs-build</keyword>
</keywordset>

</bookinfo>

<chapter id="introduction">
<title
>Inleiding</title>

<sect1 id="brief-intro">
<title
>Een beknopte introductie in &kdesrc-build;</title>

<sect2 id="whatis-kdesrc-build">
<title
>Wat is &kdesrc-build;?</title>

<para
>&kdesrc-build; is een script om de &kde; community te helpen met het installeren van <ulink url="https://www.kde.org/"
>&kde;</ulink
> software van opslagruimten met broncode in <ulink url="https://git-scm.com/"
>&git;</ulink
> en <ulink url="https://subversion.apache.org/"
>&subversion;</ulink
>, en om daarna de software voortdurend bij te werken. Het is met name bedoelt om diegene te helpen die de &kde;-software ontwikkelen en testen, inclusief de gebruikers die bugfixes testen en de ontwikkelaars die aan nieuwe functionaliteiten werken. </para>

<para
>U kunt het script &kdesrc-build; instellen om een enkele individuele module, het complete &kde; bureaublad met alle &kde;-programma's, of iets daartussen in te onderhouden. </para>

<para
>Om te kunnen beginnen, leest u <xref linkend="getting-started"/>, of u gaat verder met lezen over de details van hoe &kdesrc-build; werkt en van een overzicht van documentatie. </para>
</sect2>

<sect2 id="operation-in-a-nutshell">
<title
>De werking van &kdesrc-build; <quote
>in een notendop</quote
></title>

<para
>&kdesrc-build; maakt gebruik van hulpmiddelen die op de opdrachtregel beschikbaar zijn voor de gebruiker, met dezelfde voor de gebruiker beschikbare interface. Wanneer &kdesrc-build; wordt uitgevoerd zal de volgende volgorde worden gebruikt: </para>

<orderedlist>
<listitem
><para
>&kdesrc-build; leest de <link linkend="cmdline"
>opdrachtregel</link
> en het <link linkend="configure-data"
>configuratiebestand</link
> om te bepalen wat te bouwen, welke opties voor compileren te gebruiken, waar te installeren, &etc;</para
></listitem>

<listitem
><para
>&kdesrc-build; voert het bijwerken van broncode voor elke <link linkend="module-concept"
>module</link
> uit. Het bijwerken gaat door totdat alle modulen zijn bijgewerkt. Modulen waarvan het bijwerken mislukt stoppen het bouwen niet &ndash; u krijgt aan het eind een melding welke modulen niet zijn bijgewerkt.</para
></listitem>

<listitem
><para
>Modules die succesvol zijn bijgewerkt, worden gebouwd, hun test suite uitgevoerd, en tenslotte geïnstalleerd. Om de totale benodigde tijd te verminderen, zal &kdesrc-build; standaard beginnen met de code te bouwen zodra de eerste module is bijgewerkt, en zal verdergaan op de achtergrond met het bijwerken van de overige updates. </para
></listitem>
</orderedlist>

<tip
><para
>Een <emphasis
>zeer informatief</emphasis
> overzicht van hoe &kde; modules worden gebouwd, inclusief informatieve diagrammen, kunt u vinden op <ulink url="https://www.davidrevoy.com/article193/guide-building-krita-on-linux-for- cats"
>een online artikel dat het &krita;-programma van &kde; beschrijft</ulink
>. Deze workflow is wat &kdesrc-build; automatiseert voor alle &kde; modules.</para>
</tip>

</sect2>
</sect1>

<sect1 id="intro-toc">
<title
>Documentatieoverzicht</title>

<para
>Deze handleiding is een overzicht om de volgende aspecten van de werking van &kdesrc-build; te beschrijven: </para>

<itemizedlist>
<listitem
><para
>Een <link linkend="getting-started"
>overzicht</link
> van de vereiste stappen om te beginnen.</para
></listitem>
<listitem
><para
>Met name <link linkend="features"
>mogelijkheden</link
>.</para
></listitem>
<listitem
><para
>De syntaxis en de opties van het <link linkend="configure-data"
>configuratiebestand</link
>.</para
></listitem>
<listitem
><para
>De <link linkend="cmdline"
>opdrachtregel-opties</link
>.</para
></listitem>
</itemizedlist>

<para
>Ook zijn de stappen die u zou moeten nemen met andere hulpmiddelen gedocumenteerd, (&ie; stappen die niet automatisch uitgevoerd worden door &kdesrc-build;). </para>

</sect1>
</chapter>

<chapter id="getting-started">
<title
>Grondbeginselen</title>

<para
>In dit hoofdstuk beschrijven we hoe u &kdesrc-build; kan gebruiken om modules uit de repositories van &kde; uitgecheckt kunnen worden en ze te bouwen. Ook bieden we een basis uitleg van de structuur van de broncode van &kde; en de stappen die u moet nemen voordat u het script gebruikt. </para>

<para
>Alle in dit hoofdstuk gepresenteerde onderwerpen worden nog meer in detail behandeld in het artikel <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source"
> Bouwen vanuit de broncode</ulink
> op de <ulink url="http://community.kde.org/"
>wiki van de &kde; gemeenschap</ulink
>. Als u &kde; voor de eerste keer compileert, is het een goed idee om het te lezen of het te raadplegen als bron voor referenties. U zult er gedetailleerde informatie vinden over hulpmiddelen voor het maken van pakketten en de vereisten, veel voorkomende valkuilen bij compilatie en strategieën en informatie over het gebruik van uw nieuwe &kde; installatie vinden. </para>

<sect1 id="before-building">
<title
>Het systeem voorbereiden voor het bouwen van &kde;</title>

<sect2 id="before-building-users">
<title
>Een nieuw gebruikersaccount instellen</title>

<para
>Het is aanbevolen dat u een aparte gebruikersaccount gebruikt om uw &kde; software in te bouwen, te installeren en uit te voeren, omdat er minder toegangsrechten zijn vereist en om conflicten met de pakketten in uw distributie te vermijden. Als u al &kde;-pakketten heeft geïnstalleerd, dan is de beste keuze om een aparte (alleen voor dat doel) gebruiker aan te maken om de nieuwe &kde; te bouwen en te gebruiken. </para>

<tip
><para
>Door de &kde; van het systeem onaangeraakt laten, heeft u de mogelijkheid om in nood op terug te vallen in het geval een gecompileerd &kde; onbruikbaar is. </para
></tip>

<para
>Maar als u het wenst dan kunt u ook het zo instellen dat u in een systeembrede map installeert (&eg; <filename class="directory"
>/usr/src/local</filename
>). Dit document beschrijft dit type installatie niet, omdat we aannemen dat u in dat geval weet wat u doet. </para>

</sect2>
<sect2 id="before-building-preparation">
<title
>Ga na of uw systeem klaar is om vanuit de &kde; software te bouwen</title>

<para
>Alvorens het script &kdesrc-build; gebruikt kan worden (of elke andere bouwstrategie) is het nodig dat u de ontwikkelomgeving en de bibliotheken nodig voor &kde; installeert. De bijna complete lijst met vereiste hulpmiddelen is te vinden op de pagina <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source#Install_required_devel_packages"
>&kde; wiki van de gemeenschap Vereisten voor bouwen</ulink
>. </para>

<para
>Hier volgt een lijst met enkele dingen die u nodig hebt:</para>
<itemizedlist>

<listitem
><para
>U heeft &cmake; nodig, deze software is wat &kde; gebruikt voor de bouwconfiguratie van de broncode en de generatie van specifieke bouwcommando's voor uw systeem. De vereiste versie is afhankelijk van welke versies van &kde; software u wilt bouwen (zie TechBase voor de specificaties), maar de met moderne distributies meegeleverde &cmake; zal goed genoeg zijn. </para
></listitem>

<listitem
><para
>U moet ook de client-software installeren die nodig is om de &kde; broncode uit te checken. Dit betekent dat u minstens het volgende nodig hebt:</para>

<itemizedlist>
<listitem
><para
>De <ulink url="https://git-scm.com/"
>Git source control manager</ulink
> die nodig is voor alle <ulink url="http://commits.kde.org/"
>broncode</ulink
> van &kde;.</para
></listitem>

<listitem
><para
>Hoewel het niet is vereist, wordt de beheerder van broncode <ulink url="http://bazaar.canonical.com/"
>Bazaar</ulink
> gebruikt voor een enkele module (libdbusmenu-qt) die nodig is voor de &kde; bibliotheken. de meeste gebruikers kunnen deze bibliotheek installeren via hun pakketten uit de distributie maar &kdesrc-build; ondersteunt ook het bouwen als u dat wilt. Maar om libdbusmenu-qt te kunnen bouwen moet Bazaar zijn geïnstalleerd.</para
></listitem>
</itemizedlist
></listitem>

<listitem
><para
>De Perl script-taal is vereist voor &kdesrc-build;, sommige &kde; repositories, en &Qt; (als u dat vanuit broncode wilt bouwen).</para>

<para
>De Perl die met uw distributie meekomt zou geschikt moeten zijn (het moet tenminste Perl 5.14 moeten zijn), maar u heeft ook enkele extra modules nodig(&kdesrc-build; geeft een waarschuwing als ze er niet zijn):</para>

<itemizedlist>
    <listitem
><para
>IO::Socket::SSL</para
></listitem>
    <listitem
><para
>JSON::PP of JSON::XS</para
></listitem>
    <listitem
><para
>YAML::PP, YAML::XS, of YAML::Syck</para
></listitem>
</itemizedlist>
</listitem>

<listitem
><para
>U heeft een volledige C++ ontwikkelomgeving (compiler, standaard library, runtime, en de nodige ontwikkelpakketten). De vereiste minimum versies variëren en hangen af van de &kde; module: de &kde; Frameworks 5 collectie ondersteunt de oudste compilers, terwijl &kde; Plasma 5 en &kde;-programma's waarschijnlijk meer recente compilers nodig hebben.</para>
<para
>We bevelen tenminste de compilers GCC 4.8 of Clang 4 aan. Bij veel distributies kunt u deze hulpmiddelen makkelijk installeren via een <quote
>build-essentials</quote
> pakket, een hulpprogramma om "build dependencies" voor &Qt; te installeren, of vergelijkbare hulpprogramma's. De KDE Community Wiki heeft een pagina <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source/Install_the_dependencies"
>met daarop voor de grote distributies de aanbevolen pakketten</ulink
>. </para>
</listitem>

<listitem
><para
>U heeft een bouwprogramma nodig dat daadwerkelijk de compilatie-stappen uitvoert (gegenereerd door &cmake;). Wij bevelen GNU Make aan dat via uw pakketbeheerder beschikbaar zou moeten zijn. &cmake; ondersteunt andere mogelijkheden, zoals het bouwprogramma &ninja;, wat u door &kdesrc-build; kan laten gebruiken via het de optie <link linkend="conf-custom-build-command"
>custom-build-command</link
> in het configuratiebestand. </para
></listitem>

<listitem
><para
>Tenslotte heeft u de juiste &Qt; libraries (inclusief de development pakketten) voor de versie van de &kde; software nodig die u gaat bouwen. &kdesrc-build; ondersteunt niet officieel het bouwen met &Qt; 5 (de huidige major versie), het wordt daarom aangeraden om de development pakketten van uw distributie te gebruiken of om de KDE Community wiki page over <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source/OwnQt5"
>self-building Qt 5</ulink
> te bestuderen. </para
></listitem>
</itemizedlist>

<note
><para
>De meeste distributies van besturingssystemen hebben een methode om makkelijk de vereiste ontwikkel-programma's te installeren. Lees de Community Wiki pagina <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source#Install_required_devel_packages"
>Required devel packages</ulink
> om uit te vinden of deze instructies al beschikbaar zijn.</para
></note>

<important
><para
>Sommige van deze pakketten zijn verdeelt in libraries (of programma's of hulpprogramma's), en ontwikkeling-pakketten U heeft in ieder geval het programma of library <emphasis
>en</emphasis
> het ontwikkeling-pakket daarvan nodig. </para
></important>

</sect2>

<sect2 id="before-building-prepare-script">
<title
>&kdesrc-build; instellen</title>

<sect3 id="get-kdesrc-build">
<title
>&kdesrc-build; installeren</title>
<para
>De &kde;-ontwikkelaars wijzigingen regelmatig &kdesrc-build; om het in de pas te laten lopen met de vorderingen van de ontwikkelingen in &kde;, voegen verbeteringen toe aan de aanbevolen &kdesrc-build;-configuratie, voegen modules toe, verbeteren &cmake; flags, &etc;</para>

<para
>Daarom bevelen we aan om de &kdesrc-build; direct op te halen uit zijn broncoderepository en het daarna regelmatig bij te werken.</para>

<para
>U kunt &kdesrc-build; ophalen uit zijn broncoderepository, door de volgende commando's uit te voeren:</para>
<programlisting
><prompt
>$ </prompt
><userinput
><command
>git <option
>clone</option
> <option
>https://invent.kde.org/sdk/kdesrc-build.git</option
> <option
><filename class="directory"
><replaceable
>~/kdesrc-build</replaceable
></filename
></option
></command
></userinput
>
</programlisting>

<para
>Vervang <option
><replaceable
>~/kdesrc-build</replaceable
></option
> door de map waarin u het wilt installeren. </para>

<para
>U kunt later &kdesrc-build; bijwerken door uit te voeren:</para>
<programlisting
><prompt
>$ </prompt
><userinput
><command
>cd <option
><filename class="directory"
><replaceable
>~/kdesrc-build</replaceable
></filename
></option
></command
></userinput>
<prompt
>$ </prompt
><userinput
><command
>git <option
>pull</option
></command
></userinput
>
</programlisting>

<tip
><para
>Wij raden aan om de &kdesrc-build; installatie-map aan uw <envar
>PATH</envar
> omgevingsvariabele toe te voegen, zodat u &kdesrc-build; kunt opstarten zonder dat u iedere keer het volledige pad daarvan hoeft op te geven.</para
></tip>
</sect3>

<sect3 id="setup-rcfile">
<title
>Het configuratiebestand voorbereiden</title>

<para
>&kdesrc-build; gebruikt een <link linkend="configure-data"
>configuratiebestand</link
> om te besturen welke modulen gebouwd zijn, waarin ze geïnstalleerd zijn, enz. Dit bestand zit in <filename
>~/.config/kdesrc-buildrc</filename
> (<filename
>$XDG_CONFIG_HOME/kdesrc-buildrc</filename
>, als <envar
>$XDG_CONFIG_HOME</envar
> is ingesteld).</para>

<para
>U kunt een met &kdesrc-build; meegeleverd programma gebruiken, genaamd <application
>kdesrc-build-setup</application
> om een eenvoudige configuratie voor kdesrc-build te maken. U kunt dan vervolgens het configuratiebestand <filename
>~/.config/kdesrc-buildrc</filename
> bewerken om de gewenste wijzigingen aan te brengen.</para>

<para
>U start <application
>kdesrc-build-setup</application
> zelf op van uit een terminal (in plaats van een grafische interface gebruik te maken ), net zoals &kdesrc-build;, zodat u het zelfs kunt gebruiken als u nog geen grafische interface heeft.</para>

<sect4 id="setup-rcfile-manually">
<title
>Handmatig instellen van het configuratiebestand</title>

<para
>U kunt ook uw configuratiebestand handmatig instellen, door het meegeleverde voorbeeld configuratiebestand <filename
>kdesrc-buildrc-kf5-sample</filename
> naar <filename
>~/.config/kdesrc-buildrc</filename
> te kopiëren en vervolgens dat bestand te bewerken. <xref linkend="kdesrc-buildrc"/> heeft een handige uitleg hierover, met name de <link linkend="conf-options-table"
>tabel met configuratieopties</link
>. </para>

<para
>&kdesrc-build; heeft vele voorbeeld configuratiebestanden voor &kde; Frameworks 5, &plasma; 5, en andere &kde;-programma's. De <application
>kdesrc-build-setup</application
> maakt referenties naar deze bestanden in het configuratiebestand dat het genereert, maar u kunt ze ook zelf gebruiken. lees <xref linkend="kdesrc-buildrc-including"/> voor informatie over hoe u andere configuratiebestanden van u eigen <filename
>kdesrc-buildrc</filename
> kunt gebruiken. </para>

<para
>U kunt meer informatie over de syntaxis van het <link linkend="configure-data"
>configuratiebestand</link
> vinden in <xref linkend="configure-data"/> en in <xref linkend="kdesrc-buildrc"/>. </para>
</sect4>
</sect3>
</sect2>
</sect1>

<sect1 id="configure-data">
<title
>Instellen van de configuratiegegevens</title>

<para
>Om &kdesrc-build; te kunnen gebruiken, moet u in uw map <filename
>~/.config</filename
> (of in <envar
>$XDG_CONFIG_HOME</envar
>, indien ingesteld) een bestand hebben genaamd <filename
>.kdesrc-buildrc</filename
> hebben, waar in u de algemene instellingen vastlegt en specificeert welke modules u wilt downloaden en bouwen. </para>

<note
><para
>Het is mogelijk om bij &kdesrc-build; verschillende configuratiebestanden te gebruiken, dit wordt beschreven in <xref linkend="kdesrc-buildrc"/>. als u verschillende configuraties nodig heeft, lees dan die sectie. Hier nemen we aan dat de configuratie is te vinden in <filename
>~/.config/kdesrc-buildrc</filename
>. </para
></note>

<para
>De makkelijkste manier om verder te gaan is door het bestand <filename
>kdesrc-buildrc-kf5-sample</filename
> als voorbeeld te gebruiken, de algemene instellingen naar wens te wijzigen, en ook de lijst met modules die u wilt bouwen aan te passen. </para>

<para
>De standaardinstellingen zouden geschikt moeten zijn om een &kde;-bouw uit te voeren. Enkele instellingen die u wellicht wilt wijzigen zijn: </para>

<itemizedlist>
<listitem
><para
><link linkend="conf-kdedir"
>kdedir</link
>, wat de doelmap wijzigt waarin de&kde;-software wordt geïnstalleerd. Standaard is dit <filename class="directory"
>~/kde</filename
>, wat voor een single-user installatie is.</para
></listitem>

<listitem
><para
><link linkend="conf-branch-group"
>branch-group</link
>, wat u kunt gebruiken om de toepasselijke ontwikkel-branch van de &kde; modules als geheel te selecteren. U kunt uit veel bouw-configuraties kiezen maar u zal waarschijnlijk <option
>kf5-qt5</option
> willen kiezen zodat &kdesrc-build; de laatste code gebaseerd op &Qt; 5 en &kde; Frameworks 5 zal downloaden.</para>

<tip
><para
>Als u er geen kiest dan zal &kdesrc-build; de standaard branch groep gebruiken, maar welke de standaard is verandert in de loop van de tijd, het is daarom beter om een te kiezen zodat de branch-groep niet onverwacht wijzigt.</para
></tip>
</listitem>

<listitem
><para
><link linkend="conf-kdedir"
>source-dir</link
>, wat de map wijzigt wat &kdesrc-build; gebruikt om de broncode naar toe te downloaden, het bouwproces uit te voeren en de logbestanden op te slaan. Standaard is dit <filename class="directory"
>~/~/kdesrc</filename
>.</para
></listitem>

<listitem
><para
><link linkend="conf-cmake-options"
>cmake-options</link
>, waar u de opties instelt die voor het bouwen van elke module aan het commando &cmake; worden doorgegeven. Normaal gebruikt u dit om te schakelen tussen <quote
>debug</quote
> en <quote
>release</quote
> bouw, om optionele functionaliteiten IN of UIT te schakelen, of om informatie over de locatie van de vereiste libraries aan het bouwproces door te geven. </para
></listitem>

<listitem
><para
><link linkend="conf-make-options"
>make-options</link
>, waar u de opties instelt die voor het bouwen van elke module (nadat &cmake; het bouwsysteem heeft ingesteld) bij het gebruik van het commando <application
>make</application
> wordt gebruikt. </para>

<para
>De meest ingestelde optie is <option
>-j<replaceable
>N</replaceable
></option
>, waar u <replaceable
>N</replaceable
> vervangt door het maximum aantal jobs dat u wilt toestaan. Een groter getal (tot aan het aantal logische CPUs dat uw systeem beschikbaar heeft) geeft sneller bouwen, maar vereist wel meer systeem-resources. </para>

<tip
><para
>&kdesrc-build; stelt de optie <option
><link linkend="conf-num-cores"
>num-cores</link
></option
> in op het gedetecteerde aantal beschikbare verwerkingskernen. U kunt deze waarde in uw eigen configuratiebestand gebruiken om te vermijden het handmatig te moeten instellen. </para
></tip>

<example id="make-options-example">
<title
>Make configureren om alle beschikbare CPU's te gebruiken, met uitzonderingen</title>
<screen
>global
    # Deze omgevingsvariabele wordt automatisch door make gebruikt, inclusief
    # make-commando's die niet direct worden uitgevoerd door kdesrc-build, zoals  configuratie van Qt
    set-env MAKEFLAGS -j<literal
>${num-cores}</literal>
    &hellip;
end global

&hellip;

module-set <replaceable
>big-module-set</replaceable>
    repository kde-projects
    use-modules <replaceable
>calligra</replaceable>
    make-options -j2 # Reduced number of build jobs for just these modules
end module-set
</screen>
</example>

<note
><para
>Sommige zeer grote Git repositories kunnen uw systeem verdrinken als u probeert om teveel bouwprocessen tegelijk uit te voeren, met name repositories zoals van &Qt; WebKit en de &Qt; WebEngine. Om het systeem interactief te houden, kan het nodig zijn dat u voor bepaalde modules het aantal bouwprocessen beperkt.</para>
<para
><xref linkend="make-options-example"/> Geeft een voorbeeld hoe u dit kunt doen.</para>
</note>

</listitem>
</itemizedlist>

<para
>U wilt waarschijnlijk andere modules selecteren om te gaan bouwen, dit is beschreven in <xref linkend="selecting-modules"/>.</para>

</sect1>

<sect1 id="building-and-troubleshooting">
<title
>Het &kdesrc-build;-script gebruiken</title>
<para
>Nu de configuratie-data is ingesteld, bent u klaar om het script op te starten. Zelfs als u nog iets wilt instellen, of u wilt nog iets wilt bestuderen, is het een goed idee om tenminste de &kde; project metadata te downloaden.</para>

<sect2 id="loading-kdesrc-build-metadata">
<title
>Laden van metagegevens van het project</title>

<para
>Vanuit een terminalvenster, logt u in als de gebruiker waarmee u &kde; software wilt compileren en start u het script op: </para>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--metadata-only</option
></userinput
>
</screen>

<para
>Dit commando zal de map voor de broncode instellen en verbinding zoeken met de KDE &git; repositories om de database van de &kde; git repositories, en de database van de dependency metadata te downloaden, zonder verdere wijzigingen uit te voeren. Het is verstandig om dit separaat uit te voeren omdat deze metadata ook handig is voor andere commando's van &kdesrc-build;. </para>

</sect2>

<sect2 id="pretend-mode">
<title
>Bekijken wat er gaat gebeuren als u kdesrc-build opstart</title>

<para
>Met de metadata van het project geïnstalleerd, is het mogelijk om te bekijken van wat &kdesrc-build; zal gaan doen als het wordt opgestart. Dit kunt u doen met de commandoregelparameter <option
><link linkend="cmdline-pretend"
>--pretend</link
></option
>.</para>

<screen
><prompt
>&percnt; </prompt
><command
>./kdesrc-build</command
> <option
>--pretend</option
>
</screen>

<para
>U zou een melding moeten zien dat sommige pakketten succesvol zijn gebouwd (ofschoon er niets daadwerkelijk is gebouwd). Als er geen belangrijke problemen zijn te zien, dan kunt u verder gaan door het script daadwerkelijk te starten.</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--stop-on-failure</option
></userinput
>
</screen>

<para
>Dit commando zal de juiste broncode downloaden, en elke module in de opgedragen volgorde bouwen en installeren, maar het zal stoppen als het niet lukt om een module te bouwen (vanwege de optie <option
>--stop-on-failure</option
>). Naderhand zou u een uitvoer moeten zien vergelijkbaar met dat in <xref linkend="example-build-sequence"/>:</para>

<example id="example-build-sequence">
<title
>Voorbeeld uitvoer van een uitgevoerde kdesrc-build</title>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
></userinput>
Updating kde-build-metadata (to branch master)
Updating sysadmin-repo-metadata (to branch master)

Building libdbusmenu-qt (1/200)
        No changes to libdbusmenu-qt source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building taglib (2/200)
        Updating taglib (to branch master)
        Source update complete for taglib: 68 files affected.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building extra-cmake-modules from &lt;module-set at line 32&gt; (3/200)
        Updating extra-cmake-modules (to branch master)
        Source update complete for extra-cmake-modules: 2 files affected.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

        ...

Building kdevelop from kdev (200/200)
        Updating kdevelop (to branch master)
        Source update complete for kdevelop: 29 files affected.
        Compiling... succeeded (after 1 minute, and 34 seconds)
        Installing.. succeeded (after 2 seconds)

&lt;&lt;&lt;  PACKAGES SUCCESSFULLY BUILT  &gt;&gt;&gt;
Built 200 modules

Your logs are saved in /home/kde-src/kdesrc/log/2018-01-20-07
</screen>
</example>
</sect2>

<sect2 id="fixing-build-failures">
<title
>Het oplossen van een mislukte bouw</title>

<para
>Afhankelijk van hoeveel modules u download, is het mogelijk dat &kdesrc-build; het de eerste keer dat u &kde; software compileert niet lukt. Wanhoop niet! </para>

<para
>&kdesrc-build; logt de uitvoer van elk uitgevoerd commando. Standaard worden de logbestanden bewaard in <filename class="directory"
>~/kdesrc/log</filename
>. Om uit te vinden wat de oorzaak van een fout bij een module in de laatste &kdesrc-build; commando is, is het meestal voldoende om <filename class="directory"
>~/kdesrc/log/latest/<replaceable
>module-name</replaceable
>/error.log</filename
> te bestuderen.</para>

<tip
><para
>Misschien is de eenvoudigste manier om uit te vinden welke fout de oorzaak was dat een module niet lukte om te bouwen, het naar achteren hoofdletter-ongevoelig zoeken, aan het eind van het bestand startend naar het woord <literal
>error</literal
>. Als u die heeft gevonden, scrolt u omhoog om er zeker van te zijn dat er geen andere foutmeldingen in de buurt zijn. De eerste foutmelding in een groep is meestal het onderliggende probleem.</para
></tip>

<para
>In dat bestand kunt u de fout vinden waardoor het bouwen van die module mislukte. Als het bestand (onderaan) zegt dat er bij u enkele pakketten ontbreken, probeer dan het pakket (inclusief toepasselijke -dev pakketten) voordat u opnieuw probeert dat pakket te bouwen. Zorg ervoor dat wanneer u &kdesrc-build; opnieuw opstart, de optie <link linkend="cmdline-reconfigure"
>--reconfigure</link
> toevoegt om daarmee &kdesrc-build; te forceren om bij de module opnieuw te controleren voor de ontbrekende pakketten.</para>

<para
>Of, als de fout een fout in het bouwproces lijkt te zijn (zoals een syntax error, <quote
>incorrect prototype</quote
>, <quote
>unknown type</quote
>, of iets dergelijks) dan is het waarschijnlijk een fout in de &kde;-broncode, wat hopelijk in een paar dagen opgelost zal zijn. Als het niet in die tijd opgelost is, aarzel dan niet om een email te sturen naar de <email
>kde-devel@kde.org</email
> mailing list (het kan nodig zijn om eerst in te schrijven) om melding te maken van de build failure.</para>

<para
>U kunt meer vaak voorkomende voorbeelden van dingen die fout kunnen gaan en de oplossingen daarvoor, met daarnaast algemene tips en strategieën voor het bouwen van &kde; software vinden in de <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source"
> Bouwen vanuit de broncode</ulink
>. </para>

<para
>Aan de andere kant, aangenomen dat alles goed is gegaan, dan zou een nieuwe &kde; op uw computer geïnstalleerd moeten zijn, en is het nu een kwestie van eenvoudig opstarten, zoals hierna beschreven in <xref linkend="environment"/>.</para>

<note
><para
>Meer informatie over de mogelijkheden van &kdesrc-build; voor het loggen, leest u in <xref linkend="kdesrc-build-logging"/>.</para
></note>
</sect2>

</sect1>

<sect1 id="building-specific-modules">
<title
>Specifieke modules bouwen</title>

<para
>In plaats van alle modules elke keer te bouwen, wilt u wellicht alleen een enkele module bouwen, of een andere kleine verzameling. In plaats van uw configuratiebestand aan te passen, kunt u op de commandoregel gewoon de namen van de te bouwen modules of module sets opgegeven.</para>

<example id="example-subset-build">
<title
>Voorbeeld uitvoer van de bouw van een specifieke module door kdesrc-build gebouwd</title>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--include-dependencies</option
> <replaceable
>dolphin</replaceable
></userinput>
Updating kde-build-metadata (to branch master)
Updating sysadmin-repo-metadata (to branch master)

Building extra-cmake-modules from frameworks-set (1/79)
        Updating extra-cmake-modules (to branch master)
        No changes to extra-cmake-modules source, proceeding to build.
        Running cmake...
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building phonon from phonon (2/79)
        Updating phonon (to branch master)
        No changes to phonon source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

Building attica from frameworks-set (3/79)
        Updating attica (to branch master)
        No changes to attica source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

        ...

Building dolphin from base-apps (79/79)
        Updating dolphin (to branch master)
        No changes to dolphin source, proceeding to build.
        Compiling... succeeded (after 0 seconds)
        Installing.. succeeded (after 0 seconds)

&lt;&lt;&lt;  PACKAGES SUCCESSFULLY BUILT  &gt;&gt;&gt;
Built 79 modules

Your logs are saved in /home/kde-src/kdesrc/log/2018-01-20-07
</screen>
</example>

<para
>Ofschoon in dit geval alleen het programma <replaceable
>dolphin</replaceable
> was opgegeven, zorgde de flag <option
>--include-dependencies</option
> flag n dit geval ervoor dat &kdesrc-build; ook de voor <replaceable
>dolphin</replaceable
> opgegeven dependencies (door de optie <link linkend="conf-include-dependencies"
>include-dependencies</link
> op yes te zetten). </para>

<note
><para
>De oplossing voor de dependency werkte in dit geval alleen omdat <replaceable
>dolphin</replaceable
> toevallig in een  <literal
>kde-projects</literal
>-gebaseerde module set is gespecificeerd (in dit geval namelijk <literal
>base-apps</literal
>). Zie <xref linkend="module-sets-kde"/>. </para
></note>

</sect1>

<sect1 id="environment">
<title
>De omgeving instellen om uw &kde; &plasma; Desktop te starten</title>

<para
>Aangenomen dat u een speciale gebruiker heeft gebruikt om &kde; &plasma; te bouwen, en u al een geïnstalleerde &plasma; versie heeft, dan kan het starten van uw nieuwe &plasma; een beetje tricky zijn, omdat de nieuwe &plasma; voorrang moet krijgen over de oude. U moet de omgevingsvariabele van uw login scripts wijzigen om er voor te zorgen dat de nieuw gebouwde desktop wordt gebruikt. </para>

<sect2 id="session-driver">
<title
>Automatisch een login driver installeren</title>

<para
>Vanaf versie 1.16, zal &kdesrc-build; proberen om een geschikte login driver te installeren, waarmee u kunt inloggen naar uw &kdesrc-build;-gebouwde &kde; desktop vanaf uw inlog manager. Dit kunt u uitschakelen door de optie <option
><link linkend="conf-install-session-driver"
>install-session-driver</link
></option
> in het configuratiebestand te gebruiken.</para>

<note
><para
>Als &kdesrc-build; in de pretend mode zal de sessie niet ingesteld worden.</para
></note>

<para
>Deze driver werkt door een aangepaste <quote
><literal
>xsession</literal
></quote
> sessie-type op te zetten. Dit sessie-type zou standaard moeten werken met &kdm; inlog manager (waar het verschijnt als een <quote
>Aangepast</quote
> sessie), maar voor andere inlog managers (zoals <application
>LightDM</application
> en <application
>gdm</application
>) kan het nodig zijn dat u extra bestanden moet installeren om <literal
>xsession</literal
> mogelijk te maken.</para>

<sect3 id="xsession-distribution-setup">
<title
>Xsession ondersteuning voor distributies toevoegen</title>

<para
>De standaard login managers van sommige distributies kunnen extra pakketten nodig hebben om <literal
>xsession</literal
> logins te kunnen ondersteunen.</para>

<itemizedlist>
<listitem
><para
>De <ulink url="https://getfedora.org/"
>Fedora</ulink
> &Linux; distributie verlangt dat het <literal
>xorg-x11-xinit-session</literal
> pakket geïnstalleerd is voor aangepaste <literal
>xsession</literal
> login support.</para
></listitem>

<listitem
><para
><ulink url="https://www.debian.org/"
>Debian</ulink
> en van Debian-afgeleide &Linux; distributies zouden aangepaste <literal
>xsession</literal
> logins moeten ondersteunen, maar vereisen wel dat de <option
><userinput
>allow-user-xsession</userinput
></option
> optie is ingesteld in <filename
>/etc/X11/Xsession.options</filename
>. Zie ook de Debian <ulink url="https://www.debian.org/doc/manuals/debian-reference/ch07.en.html#_customizing_the_x_session_classic_method"
>documentatie over het aanpassen van de X sessie.</ulink
></para
></listitem>

<listitem
><para
>Ga voor andere distributies naar <xref linkend="xsession-manual-setup"/>.</para
></listitem>
</itemizedlist>

</sect3>

<sect3 id="xsession-manual-setup">
<title
>Handmatig ondersteuning voor xsession toevoegen</title>

<para
>Als er voor uw distributie geen distributie-specifieke aanwijzingen aanwezig zijn in <xref linkend="xsession-distribution-setup"/>, dan kunt u als volgt handmatig een <quote
>Custom xsession login</quote
> entry aan de lijst van sessie-types voor uw distributie toevoegen:</para>

<procedure id="proc-adding-xsession-type">
<title
>Een .xsession login sessie type toevoegen.</title>

<note
><para
>Deze procedure heeft waarschijnlijk administratieve privileges nodig om uitgevoerd te kunnen worden. </para
></note>

<step performance="required">
<para
>Creëer het bestand <filename
>/usr/share/xsessions/kdesrc-build.desktop</filename
>.</para>
</step>

<step performance="required">
<para
>Zorg ervoor dat in het zojuist aangemaakte bestand de volgende tekst voorkomt:</para>
<literallayout
><userinput>
Type=XSession
Exec=<co id="session-homedir"/><replaceable
>$HOME</replaceable
>/.xsession
Name=KDE Plasma Desktop (unstable; kdesrc-build)
</userinput
></literallayout>

<calloutlist>
<callout arearefs="session-homedir"
><para
>De entry <replaceable
>$HOME</replaceable
> moet u vervangen door het volledige pad naar uw persoonlijke map (voorbeeld, <filename class="directory"
>/home/<replaceable
>user</replaceable
></filename
>). De desktop entry specificatie is niet toegestaan in algemene (user-generic) bestanden. </para
></callout>

</calloutlist>
</step>

<step performance="optional"
><para
>Als de login manager opnieuw is gestart, dan zou het een nieuw sessie type moeten tonen, <quote
>KDE Plasma Desktop (unstable; kdesrc-build)</quote
> in zijn lijst met sessies, die zou moeten proberen om de <filename
>.xsession</filename
>-bestand geïnstalleerd door &kdesrc-build; op te starten als u die selecteert bij het inloggen.</para>

<note
><para
>Het is wellicht het makkelijkste de computer te herstarten om de login manager te herstarten, als de login manager de updates van de <filename class="directory"
>/usr/share/xsessions</filename
> map niet opmerkt.</para
></note>

</step>

</procedure>

</sect3>

</sect2>

<sect2 id="old-profile-instructions">
<title
>De omgeving handmatig instellen</title>
<para
>Deze documentatie had instructies over welke omgevingsvariabele u moest instellen om de nieuw gebouwde desktop te laden. Deze instructies zijn verplaatst naar een appendix (<xref linkend="old-profile-setup"/>).</para>

<para
>Als u de intentie heeft om uw eigen login support in te stellen dan kunt die appendix consulteren of het bestand <filename
>sample-kde-env-master.sh</filename
> bekijken dat met de &kdesrc-build;-broncode is meegeleverd.</para>

</sect2>

</sect1>

<sect1 id="kde-modules-and-selection">
<title
>Organisatie en selectie van modulen</title>

<sect2 id="kde-layers">
<title
>Organisatie van KDE Software</title>

<para
>&kde; software is opgesplitst in verschillende onderdelen, veel daarvan kan door &kdesrc-build; worden gebouwd. Begrip van de indeling hiervan helpt u bij het correct selecteren van de software modules die u wilt bouwen. </para>

<orderedlist>
<listitem
><para
>Op het laagste niveau komt de &Qt; library, wat een erg krachtige, cross-platform <quote
>toolkit</quote
> library is. &kde; is gebaseerd op &Qt;, en sommige van de niet-&kde; libraries die vereist zijn door &kde; zijn ook gebaseerd op &Qt;. &kdesrc-build; kan &Qt; bouwen, of diegene gebruiken die al op uw systeem is geïnstalleerd als deze recent genoeg is.</para
></listitem>

<listitem
><para
>Boven op die van &Qt; zijn er meer vereiste libraries die nodig zijn voor &kde; software om te kunnen werken. Sommige van deze libraries worden niet als onderdeel van &kde; zelf beschouwt vanwege hun algemene inzetbaarheid, maar zijn toch essentieel voor het &kde; Platform. Deze libraries zijn verzameld in een <literal
>kdesupport</literal
> module maar worden toch niet als een onderdeel van  <quote
>Frameworks</quote
> beschouwt.</para>
</listitem>

<listitem
><para
>Boven op deze essentiële libraries komen de <ulink url="https://community.kde.org/Frameworks"
>&kde; Frameworks</ulink
>, soms afgekort als KF5, wat essentiële libraries zijn voor de &kde; Plasma desktop, &kde; programma's, en software van anderen. </para
> </listitem>

<listitem
><para
>Boven op het Platform, komen verschillende anderen dingen:</para>
    <itemizedlist>
        <listitem
><para
><quote
>Third-party</quote
> programma's. Dit zijn programma's die het &kde; Frameworks wel gebruiken maar niet door het &kde; project zijn geprogrammeerd of daarmee geassocieerd zijn.</para
></listitem>

        <listitem
><para
>Plasma, wat een volledige <quote
>workspace</quote
> desktop omgeving is. Dit is wat gebruikers normaal gesproken zien als ze <quote
>inloggen bij &kde;</quote
>.</para
></listitem>

        <listitem
><para
>Het programma-pakket van &kde;. Dit is een verzameling van handige software dat met het Platform en de &plasma; Desktop wordt meegeleverd, onderverdeelt in aparte modules, waaronder ook hulpprogramma's zoals &dolphin;, spelletjes zoals <application
>KSudoku</application
>, en  produktie software gereleased door&kde; zoals &kontact;.</para
></listitem>

        <listitem
><para
>Tenslotte, is er een verzameling software (ook in modules verzameld) waarvan de ontwikkeling door &kde; resources wordt ondersteunt (zoals vertalingen, source control, bug tracking, &etc;) maar niet door &kde; is gereleased als onderdeel van Plasma of de verzameling programma's. Deze modules staan bekent als <quote
>Extragear</quote
>. </para
></listitem>
    </itemizedlist>
</listitem>
</orderedlist>
</sect2>

<sect2 id="selecting-modules">
<title
>Selectie van te bouwen modules</title>

<para
>De selectie van de mogelijke modules voor het bouwen, regelt u in <link linkend="kdesrc-buildrc"
>het configuratiebestand</link
>. Na de sectie <literal
>global</literal
> is een lijst van te bouwen modules, Omsloten door module ... end module regels. Een voorbeeld van een module is te zien in <xref linkend="conf-module-example"/>.</para>

<example id="conf-module-example">
<title
>Voorbeeld van een module-item in het configuratiebestand</title>
<programlisting
>module <replaceable
>kdesrc-build-git</replaceable>
    # Opties voor deze module komen hier, voorbeeld:
    <link linkend="conf-repository"
>repository</link
> kde:kdesrc-build
    <link linkend="conf-make-options"
>make-options</link
> -j4 # Voer 4 compilaties tegelijk uit
end module
</programlisting>
</example>

<note
><para
>In de praktijk wordt deze module constructie meestal niet direct gebruikt. In plaats daarvan zijn de meeste modules zoals hierboven beschreven gespecificeerd via module-sets.</para
></note>

<para
>Als u alleen <literal
>module</literal
> entries gebruikt, dan zal &kdesrc-build; ze in de opgegeven volgorde bouwen, en zal niet proberen om andere dan de door u opgegeven repositories te downloaden. </para>

</sect2>

<sect2 id="module-sets">
<title
>Module Sets</title>

<para
>De broncode van &kde; is onderverdeelt in een groot aantal relatief kleine op Git gebaseerde repositories. Om het grote aantal repositories dat nodig is bij een op &kde;-gebaseerde installatie makkelijk te beheren, ondersteunt &kdesrc-build; het groeperen van meerdere modules en behandelt een dergelijke groep als een <quote
>module set</quote
>. </para>

<sect3 id="module-set-concept">
<title
>Het basisidee module set</title>

<para
>Door een module set te gebruiken, kunt u op een snelle manier declareren welke Git modules u wilt downloaden en bouwen, net alsof u voor elk een aparte module declaratie heeft getyped. De optie <link linkend="conf-repository"
>repository</link
> is speciaal bedoelt om in te stellen waar elke module vandaan moet worden gedownload, en elke andere optie die in de module set voorkomt op dezelfde manier naar elke andere module wordt gekopieerd.</para>

<example id="example-using-module-sets">
<title
>Modulen sets gebruiken</title>
<programlisting
>global
    <option
><link linkend="conf-git-repository-base"
>git-repository-base</link
></option
> <replaceable
>kde-git</replaceable
> <replaceable
>kde:</replaceable>
end global

module <replaceable
>qt</replaceable>
    # Opties verwijderd voor beknoptheid
end module

module-set <replaceable
>kde-support-libs</replaceable>
    <option
><link linkend="conf-repository"
>repository</link
></option
> <replaceable
>kde-git</replaceable>
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>automoc</replaceable
> <replaceable
>attica</replaceable
> <replaceable
>akonadi</replaceable>
end module-set

# Andere modules indien nodig...
module <replaceable
>kdesupport</replaceable>
end module
</programlisting>
</example>

<para
>In <xref linkend="example-using-module-sets"/> ziet u een kleine module set. Als &kdesrc-build; deze module set tegenkomt, dan handelt het alsof, bij elke module opgegeven in <option
>use-modules</option
>, dat een individuele module is gedeclareerd met zijn <option
>repository</option
> overeenkomstig met de module-set's <option
>repository</option
> onmiddellijk gevolgd door de opgegeven modulenaam.</para>

<para
>Daarnaast kunt u in een module set andere opties opgegeven, die naar elke nieuwe module wordt gekopieerd dat op deze manier wordt gecreëerd. Door module-set te gebruiken, is het mogelijk om op een snelle manier veel Git modules te declareren die alle op dezelfde repository URL zijn gebaseerd. Daarnaast is het mogelijk om een bepaalde module-sets een naam te geven (zoals in het voorbeeld te zien is), zodat u vanaf de commandoregel makkelijk naar een hele groep van modules kunt refereren.</para>

</sect3>
<sect3 id="module-sets-kde">
<title
>Speciale ondersteuning voor KDE module sets</title>

<para
>De tot nu toe beschreven ondersteuning voor module set is voor alle op Git gebaseerde modules. Voor de Git repositories van &kde;, heeft &kdesrc-build; extra functionaliteiten om het makkelijker voor de gebruikers en de ontwikkelaars te maken. U schakelt deze functionaliteit in door <literal
>kde-projects</literal
> te specificeren voor de <option
>repository</option
> in de module set. </para>

<para
>&kdesrc-build; bouwt normaal gesproken alleen de modules die u heeft opgegeven in uw configuratiebestand, in de opgegeven volgorde. Maar bij een <literal
>kde-projects</literal
> module set, kan &kdesrc-build; de dependency van de &kde;-specifieke modules oplossen, en kan automatisch modules aan de bouw toevoegen zelfs als ze indirect zijn gespecificeerd.</para>

<example id="example-using-kde-module-sets">
<title
>kde-projects module sets gebruiken</title>
<programlisting
># Voegt alleen een module voor juk toe (de kde/kdemultimedia/juk repo)
module-set <replaceable
>juk-set</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>juk</replaceable>
end module-set

# Voegt alle modules toe die in kde/multimedia/* aanwezig zijn, inclusief juk,
# maar geen andere dependencies
module-set <replaceable
>multimedia-set</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>kde/multimedia</replaceable>
end module-set

# Voegt alle modules toe die in kde/multimedia/* aanwezig zijn, en all kde-projects
# dependencies die buiten kde/kdemultimedia zijn
module-set <replaceable
>multimedia-deps-set</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>kde/multimedia</replaceable>
    <option
>include-dependencies</option
> <replaceable
>true</replaceable>
end module-set

# Alle modules die in deze drie module sets zijn gecreëerd worden automatisch in
# juiste dependency volgorde gezet, onafhankelijk van de instellingen voor de include-dependencies
</programlisting>
</example>

<tip
><para
>Deze  module set constructie <literal
>kde-projects</literal
> is de belangrijkste methode om te declareren welke modules u wilt bouwen.</para
></tip>

<para
>Alle module sets gebruiken de opties <link linkend="conf-repository"
>repository</link
> en <link linkend="conf-use-modules"
>use-modules</link
>. <link linkend="kde-projects-module-sets"
><literal
>kde-projects</literal
></link
> module sets hebben de voorgedefinieerde waarde <option
>repository</option
>, maar andere types module sets kunnen ook de optie <link linkend="conf-git-repository-base"
>git-repository-base</link
> gebruiken. </para>
</sect3>

</sect2>

<sect2 id="kde-projects-module-sets">
<title
>De officiële database voor &kde;-modulen</title>

<para
>Bij de Git repositories van &kde; is mogelijk om bij elkaar horende Git modules te groeperen in verzamelingen van bij elkaar horen modules (b.v. kdegraphics). Git herkent deze groeperingen niet, maar &kdesrc-build; kan deze groepen wel begrijpen, door <link linkend="module-sets"
>module sets</link
> met de optie <option
>repository</option
> ingesteld op <quote
><literal
>kde-projects</literal
></quote
>.</para>

<para
>&kdesrc-build; zal herkennen dat de <literal
>kde-projects</literal
> repository een speciale behandeling vereist, en zal het bouwproces aanpassen. Naast andere dingen, zal &kdesrc-build;:</para>

<itemizedlist>

<listitem
><para
>De laatste modulendatabase vanaf het <ulink url=" https://commits.kde.org/"
>Git-archief van &kde;</ulink
> downloaden.</para
></listitem>

<listitem
><para
>In die database een module proberen te vinden met de naam opgegeven in de <option
>use-modules</option
> instelling van de moduleset.</para
></listitem>

<listitem
><para
>Voor elke gevonden module, zal &kdesrc-build; de juisterepository in de database opzoeken, gebaseerd op de instelling <link linkend="conf-branch-group"
>branch-group</link
>. Als een repository bestaat en geldig is voor de branch group, dan zal &kdesrc-build; deze automatisch gebruiken om de broncode te downloaden of up te daten. </para
></listitem>

</itemizedlist>

<note
><para
>In de huidige database, hebben sommige module groepen niet alleen een verzameling modules, maar ze declareren <emphasis
>ook</emphasis
> hun eigen &git; repository. In zulke situaties zal &kdesrc-build; op dit moment de voorkeur geven aan de &git; repository van de groep in plaats van de repositories van de onderdelen. </para
></note>

<para
>Het volgende voorbeeld toont hoe u de &kde; module database moet gebruiken om de Phonon multimedia library te installeren.</para>

<informalexample>
<programlisting
>module-set <replaceable
>media-support</replaceable>
    # Deze optie moet kde-projects zijn om de module database te gebruiken.
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # Deze optie geeft aan naar welke modules gezocht moet worden in de database.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>phonon/phonon</replaceable
> <replaceable
>phonon-gstreamer</replaceable
> <replaceable
>phonon-vlc</replaceable>
end module-set
</programlisting>
</informalexample>

<tip
><para
><literal
>phonon/phonon</literal
> is gebruikt omdat (met de huidige project database) &kdesrc-build; anders moet kiezen tussen de groep projecten genaamd <quote
>phonon</quote
> en het individuele project genaamd <quote
>phonon</quote
>. Op dit moment zal &kdesrc-build; de eerste selecteren, zodat er veel meer backends dan nodig worden gebouwd.</para
></tip>

<para
>Het volgende voorbeeld is misschien realistischer, en toont een functionaliteit die alleen bij de &kde; module database beschikbaar is: het met alleen maar een enkele declaratie bouwen van alle &kde; grafische programma's.</para>

<informalexample>
<programlisting
>module-set <replaceable
>kdegraphics</replaceable>
    # Deze optie moet kde-projects zijn om de module database te gebruiken.
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # Deze optie geeft aan naar welke modules gezocht moet worden in de database.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <literal
>kdegraphics/libs</literal
> <literal
>kdegraphics/*</literal>
end module-set
</programlisting>
</informalexample>

<para
>Er worden hier twee belangrijke mogelijkheden gedemonstreerd:</para>

<orderedlist>

<listitem
><para
>&kdesrc-build; staat het u toe dat u modules opgeeft die afstammen van een bepaalde module, zonder dat de ouder module gebouwd moet worden, door gebruik van de syntax <userinput
><replaceable
>module-name</replaceable
>/*</userinput
>. In dit geval is dat eigenlijk vereist omdat de basismodule, kdegraphics, als inactief is gemarkeerd zodat het niet per ongeluk samen met zijn kinderen gebouwd kan worden. Door de afstammende modules op te geven, kan &kdesrc-build; de uitgeschakelde module overslaan. </para
></listitem>

<listitem
><para
>&kdesrc-build; zal een bepaalde module niet meer dan een keer aan de bouwlijst toevoegen. Hierdoor kunnen wij handmatig <literal
>kdegraphics/libs</literal
> bovenaan de lijst toevoegen, voor de rest van <literal
>kdegraphics</literal
>, zonder dat geprobeerd wordt om <literal
>kdegraphics/libs</literal
> twee keer te bouwen. Dit was vroeger nodig voor het afhandelen van de juiste dependencies, en is nu een reserve voor het geval dat de dependency metadata in de &kde; project database ontbreekt.  </para
></listitem>
</orderedlist>
</sect2>

<sect2 id="ignoring-project-modules">
<title
>&kde; project modules uitfilteren</title>

<para
>U zou kunnen besluiten dat u alle programma's in een &kde; module groep wilt bouwen <emphasis
>behalve</emphasis
> een bepaald programma.</para>

<para
>Bijvoorbeeld, in de groep <literal
>kdeutils</literal
> is ook een programma genaamd<application
>kremotecontrol</application
>. Als uw computer niet de juiste hardware heeft om de door een afstandsbediening verzonden signalen te ontvangen, dan zou u kunnen besluiten dat u <application
>kremotecontrol</application
> niet iedere keer wilt downloaden, compileren en installeren als u <literal
>kdeutils</literal
> update.</para>

<para
>U kunt dit bereiken door de configuratieoptie <link linkend="conf-ignore-modules"
>modules negeren</link
> te gebruiken. Op de opdrachtregel doet de <link linkend="ignoring-modules"
>optie &cmd-ignore-modules;</link
> hetzelfde, maar het is gemakkelijker om een module eenmalig uit te filteren. </para>

<example id="example-ignoring-a-module">
<title
>Voorbeeld van het negeren van een kde-project module in een groep</title>
<programlisting
>module-set <replaceable
>utils</replaceable>
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # Hier stelt u in welke modules in de database worden opgezocht.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>kdeutils</replaceable>

    # Hier stelt u in welke modules worden "uitgefilterd" van de modules gekozen via use-modules, hierboven.
    <option
><link linkend="conf-ignore-modules"
>ignore-modules</link
></option
> <replaceable
>kremotecontrol</replaceable>
end module-set

module-set <replaceable
>graphics</replaceable>
    <option
><link linkend="conf-repository"
>repository</link
></option
> <literal
>kde-projects</literal>

    # Hier stelt u in welke modules in de database worden opgezocht.
    <option
><link linkend="conf-use-modules"
>use-modules</link
></option
> <replaceable
>extragear/graphics</replaceable>

    # Hier stelt u in welke modules worden "uitgefilterd" van de modules gekozen via use-modules, hierboven.
    # In dit geval, zijn *zowel* extragear/graphics/kipi-plugins en
    # extragear/graphics/kipi-plugins/kipi-plugins-docs genegeerd
    <option
><link linkend="conf-ignore-modules"
>ignore-modules</link
></option
> <replaceable
>extragear/graphics/kipi-plugins</replaceable>
end module-set
</programlisting>
</example>

</sect2>

</sect1>

<sect1 id="quick-start-conclusion">
<title
>Samenvatting Grondbeginselen</title>
<para
>Dit zijn de belangrijkste mogelijkheden en ideeën die u nodig heeft om te starten met &kdesrc-build;</para>

<para
>Voor meer informatie, kunt u blijven lezen in deze documentatie. Met name zijn de <link linkend="supported-cmdline-params"
>lijst met opties voor de commandoregel</link
> en de <link linkend="conf-options-table"
>tabel met opties voor in het configuratiebestand</link
> belangrijk.</para>

<para
>De &kde; Community onderhoud ook <ulink url="https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source"
>een Wiki reference op het internet over hoe u de broncode kunt bouwen</ulink
>, met beschrijvingen van &kdesrc-build; en tips en andere richtlijnen over hoe u dit hulpprogramma kunt gebruiken.</para>

</sect1>

</chapter>

<chapter id="features">
<title
>Mogelijkheden van het script</title>

<sect1 id="features-overview">
<title
>Overzicht van de mogelijkheden</title>

<para
>&kdesrc-build; heeft de volgende mogelijkheden: </para>

<itemizedlist>

<listitem
><para
>U kunt <quote
>net doen als of</quote
> u de operaties uitvoert. Als u <option
>--pretend</option
> of <option
>-p</option
> op de commandoregel meegeeft, dan zal het script een uitvoerige omschrijving van de commando's geven die het gaat uitvoeren, zonder ze daadwerkelijk uit te voeren. Maar als u nog nooit &kdesrc-build; heeft uitgevoerd, dan wilt u waarschijnlijk eerst het commando <command
>kdesrc-build <option
><link linkend="cmdline-metadata-only"
>--metadata-only</link
></option
></command
> uitvoeren voordat u <option
>--pretend</option
> uitvoert. <tip
><para
>Als u een nog uitvoeriger omschrijving wilt hebben van wat &kdesrc-build; aan het doen is, dan kunt u het gebruik van de optie <option
>--debug</option
> uitproberen. </para
></tip>

</para
></listitem>

<listitem
><para
>&kdesrc-build; kan (met assistentie van de &kde; FTP server) de checkouts van sommige Subversion modules versnellen. Als de module die u wilt uitchecken al is ingepakt in de website, dan zal &kdesrc-build; de snapshot downloaden en het voor gebruik op uw computer gereedmaken. </para>

<tip
><para
>In het algemeen zijn er geen speciale voorbereidingen nodig om de eerste checkout van een Git module uit te kunnen voeren, omdat de hele Git repository toch moet worden gedownload, het is dus voor de server makkelijk vast te stellen wat het moet versturen.</para
></tip>

<para
>Dit is voor u sneller, en helpt om de belasting van de kde.org anonymous &subversion; servers te verminderen.</para>
</listitem>

<listitem
><para
>Een andere manier van sneller werken krijgt u door het bouwproces van een module onmiddellijk te starten nadat de broncode van die module is gedownload. (beschikbaar vanaf versie 1.6) </para
></listitem>

<listitem
><para
>Uitgebreide ondersteuning voor het bouwen van de &Qt; library (in het geval dat de &kde; software die u probeert te bouwen, afhankelijk is van een recente &Qt; die beschikbaar is bij uw distributie). </para
></listitem>

<listitem
><para
>&kdesrc-build; vereist niet dat een <acronym
>GUI</acronym
> aanwezig is om te kunnen werken. Daardoor kunt u &kde; software bouwen zonder dat u een alternatieve grafische omgeving nodig heeft. </para
></listitem>

<listitem
><para
>Ondersteunt het instellen van standaard opties voor alle modules (zoals de compilatie-instellingen of de configuratie-instellingen). Dergelijke opties kunt u normaal gesproken ook voor specifieke modules instellen.</para>

<para
>Daarnaast zal &kdesrc-build; indien van toepassing <link linkend="kdesrc-build-std-flags"
>standaard flags toevoegen</link
> om het u makkelijker te maken en mogelijke typefouten te voorkomen als u ze zelf invoert. Opmerking: dit is niet van toepassing wanneer een (aangepaste) toolchain is geconfigureerd via bijv.: <link linkend="conf-cmake-toolchain"
>cmake-toolchain</link
> </para
></listitem>

<listitem
><para
>&kdesrc-build; kan een specifieke <link linkend="using-branches"
>branch of tag</link
> van een module uitchecken. U kunt daarmee ervoor zorgen dat een specifieke <link linkend="conf-revision"
>revisie</link
> van een module is uitgecheckt. </para
></listitem>

<listitem
><para
>&kdesrc-build; kan automatisch van broncoderepository omschakelen om van een andere repository, branch, of tag uit te checken. Dit gebeurt automatisch als u een optie wijzigt die invloed heeft op wat de repository &url; zou moeten zijn, maar u moet de optie <link linkend="cmdline-src-only"
>--src-only</link
> gebruiken op het &kdesrc-build; te laten weten dat het acceptabel is om de switch uit te voeren. </para
></listitem>

<listitem
><para
>&kdesrc-build; kan <link linkend="partial-builds"
>alleen gedeeltes van een module uitchecken</link
>, in die situaties dat u alleen een programma uit een grote module nodig heeft. </para
></listitem>

<listitem
><para
>Voor ontwikkelaars: &kdesrc-build; zal <link linkend="ssh-agent-reminder"
>u er aan herinneren</link
> als u svn+ssh:// gebruikt terwijl <application
>ssh-agent</application
> niet is opgestart, omdat dit er toe zal leiden tot herhaaldelijke verzoeken om het wachtwoord van &ssh;. </para
></listitem>

<listitem
><para
>Kan <link linkend="deleting-build-dir"
>de build-map verwijderen</link
> van een module na een installatie om ruimte te besparen, ten koste van toekomstige compilatie tijd. </para
></listitem>

<listitem
><para
>De locaties van door &kdesrc-build; gebruikte mappen zijn instelbaar (zelfs per module). </para
></listitem>

<listitem
><para
>Kan &sudo; gebruiken, of een andere user-specified commando voor het <link linkend="root-installation"
>installeren van modules</link
> zo dat &kdesrc-build; niet als de super user hoeft te worden opgestart. </para
></listitem>

<listitem
><para
>&kdesrc-build; start standaard <link linkend="build-priority"
>met lagere prioriteit</link
> zodat u uw computer nog steeds kan gebruiken terwijl &kdesrc-build; aan het werk is. </para
></listitem>

<listitem
><para
>Kan gebruik maken van &kde;'s <link linkend="using-branches"
>tags en branches</link
>. </para
></listitem>

<listitem
><para
>Het is mogelijk om <link linkend="resuming"
>een bouw te vervolgen</link
> van een bepaalde module. U kunt zelfs tijdelijk <link linkend="ignoring-modules"
>enkele modules negeren</link
> voor een bepaalde bouw. </para
></listitem>

<listitem
><para
>&kdesrc-build; zal de <link linkend="build-progress"
>voortgang van uw bouwproces</link
>tonen als het &cmake; gebruikt, en zal altijd de tijd opnemen van het bouwproces zodat u later weet hoelang het heeft geduurd. </para
></listitem>

<listitem
><para
>Komt met een handige set van standaardinstellingen geschikt om een basis &kde; installatie voor een enkele gebruiker te bouwen vanuit anonieme broncoderepositories. </para
></listitem>

<listitem
><para
>Tilde-expansie voor uw configuratie-opties. U kunt bijvoorbeeld opgegeven: <programlisting
>qtdir ~/kdesrc/build/qt</programlisting>
</para
></listitem>

<listitem
><para
>Stelt automatisch een bouwstrategie op, waarbij de broncode-map niet dezelfde is als de bouw-map, om de broncode-map maagdelijk te houden. </para
></listitem>

<listitem
><para
>U kunt globale opties opgeven die geldig is voor elke module die u uitcheckt, maar u kunt ook opties opgeven die voor individuele modules gelden. </para
></listitem>

<listitem
><para
>Forceer volledige rebuilds, als u &kdesrc-build; opstart met de optie <option
>--refresh-build</option
>. </para
></listitem>

<listitem
><para
>U kunt verschillende omgevingsvariabelen voor de bouw opgeven, waaronder <envar
>KDEDIR</envar
>, <envar
>QTDIR</envar
>, <envar
>DO_NOT_COMPILE</envar
>, en <envar
>CXXFLAGS</envar
>. </para
></listitem>

<listitem
><para
>Commando logging. Logs zijn gedateerd en genummerd zodat u altijd een log heeft van een script run. Daarnaast is er een speciale symlink genaamd latest die altijd naar de meest recente log entry in de log-map wijst. </para
></listitem>

<listitem
><para
>U kunt ook alleen een gedeelte van een &kde; &subversion;-module uitchecken. U kunt bijvoorbeeld alleen de <application
>taglib</application
> van<application
>kdesupport</application
> uitchecken. </para
></listitem>

</itemizedlist>

</sect1>

<sect1 id="kdesrc-build-logging">
<title
>Log van het bouwproces van &kdesrc-build;</title>

<sect2 id="logging-overview">
<title
>Overzicht logging</title>

<para
>Logging is een functionaliteit van &kdesrc-build; waarbij de uitvoer van elke commando die &kdesrc-build; uitvoert wordt opgeslagen voor later onderzoek, indien noodzakelijk. Dit is gedaan omdat vaak nodig is om de uitvoer van deze programma's te hebben als het bouwen is mislukt, op de eerste plaats omdat er zo veel verschillende redenen kunnen zijn waarom een bouwproces kan mislukken.</para>

<sect3 id="log-directory-layout">
<title
>Indeling logging-map</title>

<para
>De logs worden altijd opgeslagen in de log-map. De locatie van de log-map stelt u in met de optie <link linkend="conf-log-dir"
>log-dir</link
>, die standaard wijst naar <filename class="directory"
><symbol
>${source-dir}</symbol
>/log</filename
> (waar <symbol
>${source-dir}</symbol
> de waarde is van de optie <link linkend="conf-source-dir"
>source-dir</link
>. Hierna in deze sectie, wordt naar deze waarde gerefereerd als <symbol
>${log-dir}</symbol
>).</para>

<para
>In <symbol
>${log-dir}</symbol
>, is een set van mappen, een voor elke keer dat &kdesrc-build; is opgestart. Elke map heeft als naam de datum, en een startnummer. Als voorbeeld, de tweede keer dat &kdesrc-build; is opgestart op 26 mei, 2004, creëert het een map genaamd <filename
>2004-05-26-02</filename
>, waar de 2004-05-26 voor de datum staat, en de -02 is het startnummer.</para>

<para
>Om het u gemakkelijk te maken, zal &kdesrc-build; ook een link naar de logs van uw laatste run creëren, genaamd <filename class="directory"
>latest</filename
>. Zodat de logs van de meest recente &kdesrc-build; run altijd te vinden zijn onder <filename class="directory"
><symbol
>${log-dir}</symbol
>/latest</filename
>. </para>

<para
>Nu zal in elke map van een &kdesrc-build; run zelf een set mappen aanwezig zijn, een voor elke &kde; module dat &kdesrc-build; probeert te bouwen. Ook zal er een bestand genaamd <filename
>build-status</filename
> in de map aanwezig zijn, waarmee u kunt bepalen bij welke modules het gelukt is en bij welke het mislukt is om ze te bouwen.</para>

<note
><para
>Als een module zelf weer een submodule (zoals extragear/multimedia, playground/utils, of KDE/kdelibs) heeft, dan zal er een vergelijkbare layout in de log map aanwezig zijn. Bijvoorbeeld, de logs voor KDE/kdelibs zullen na de laatste&kdesrc-build; run te vinden zijn in <filename class="directory"
><symbol
>${log-dir}</symbol
>/latest/KDE/kdelibs</filename
>, en niet in <filename class="directory"
><symbol
>${log-dir}</symbol
>/latest/kdelibs</filename
>. </para
></note>

<para
>In elke module log-map ,vindt u een set bestanden voor elke operatie die &kdesrc-build; uitvoert. Als &kdesrc-build; een module update, dan zal bestanden zien zoals <filename
>svn-co.log</filename
> (voor een module checkout) of <filename
>svn-up.log</filename
> (bij het updaten van een module dat al uitgecheckt is). Als het commando <command
>configure</command
> is opgeroepen, dan kunt u een <filename
>configure.log</filename
> in die map verwachten.</para>

<para
>Als er een fout is opgetreden, dan zou u in een van de bestanden moeten kunnen zien waardoor de fout is opgetreden. Om u te helpen bij het bepalen in welk bestand de foutmelding is te vinden, zal &kdesrc-build; een link creëren naar het bestand met de foutmelding (zoals <filename
>build-1.log</filename
> genaamd <filename
>error.log</filename
>).</para>

<para
>Het uiteindelijke doel van dit alles is om te zien waarom een module na uw laatste &kdesrc-build; heeft gefaald om te bouwen, het bestand waar u als eerste naar moet kijken is <filename
><symbol
>${log-dir}</symbol
>/latest/<replaceable
>module-name</replaceable
>/error.log</filename
>. </para>

<tip
><para
>Als het bestand <filename
>error.log</filename
> leeg is (met name na een installatie), dan was er misschien geen fout. Sommige van de hulpprogramma's die het &kde; bouwsysteem gebruikt, kan soms bij vergissing een fout rapporteren terwijl er geen een was.</para>

<para
>Het kan ook gebeuren dat sommige commando's de &kdesrc-build;'s uitvoer redirection ontwijken en het logbestand in bepaalde omstandigheden bypassen (meestal bij het uitvoeren van de eerste &subversion; checkout), en is in dat geval de foutmelding niet in het logbestand maar in plaats daarvan in de &konsole; of de terminal waarin u &kdesrc-build; opstartte.</para>
</tip>

</sect3>
</sect2>
</sect1>

</chapter>

<chapter id="kdesrc-buildrc">
<title
>De &kdesrc-build; configureren</title>

<sect1 id="kdesrc-buildrc-overview">
<title
>Overzicht van de &kdesrc-build; configuratie</title>

<para
>Om het script te gebruiken, moet u een bestand in uw thuismap hebben genaamd <filename
>.kdesrc-buildrc</filename
>, welke beschrijft welke modules u wilt downloaden en bouwen, en welke opties of configuratiegegevens u voor deze modules wilt gebruiken. </para>

<sect2 id="kdesrc-buildrc-layout">
<title
>Indeling van het configuratiebestand</title>

<sect3 id="kdesrc-buildrc-layout-global">
<title
>Globale configuratie</title>

<para
>Het configuratiebestand start met de globale optie, die als volgt is gespecificeerd: </para>

<programlisting
>global
<replaceable
>option-name option-value</replaceable>
<replaceable
>[...]</replaceable>
end global
</programlisting>

</sect3>
<sect3 id="kdesrc-buildrc-layout-modules">
<title
>Module configuratie</title>

<para
>Het wordt dan gevolgd door een of meer module secties, gespecificeerd in een van de volgende twee vormen: </para>

<itemizedlist>
<listitem>
<programlisting
>module <replaceable
>module-name</replaceable>
<replaceable
>option-name option-value</replaceable>
<replaceable
>[...]</replaceable>
end module
</programlisting>
</listitem>

<listitem>
<programlisting
>module-set <replaceable
>module-set-name</replaceable>
  repository <userinput
>kde-projects</userinput
> or <userinput
><replaceable
>git://host.org/path/to/repo.git</replaceable
></userinput>
  use-modules <replaceable
>module-names</replaceable>

# Andere opties zijn ook instelbaar als
<replaceable
>option-name option-value</replaceable>
<replaceable
>[...]</replaceable>
end module-set
</programlisting>
</listitem>
</itemizedlist>

<important
><para
>Merk op dat de tweede vorm, module sets, <emphasis
>alleen werkt bij Git-gebaseerde modules</emphasis
>.</para
></important>

<para
>Bij Subversion modules, moet <replaceable
>module-name</replaceable
> een module zijn uit de &kde; &subversion; repository (bijvoorbeeld, kdeartwork of kde-wallpapers), ofschoon het mogelijk is om dit te omzeilen als u <link linkend="conf-override-url"
>handmatig de &subversion; URL specificeert</link
>. </para>

<para
>Bij Git modules, kunt u de module naam naar wens kiezen, zolang het geen duplicaat is van een andere module naam in de configuratie. Vergeet niet dat de layout van de broncode-map en de bouwmap gebaseerd zijn op de modulenaam als u de optie <link linkend="conf-dest-dir"
>dest-dir</link
> niet gebruikt. </para>

<para
>Echter, bij Git <emphasis
>module sets</emphasis
> moeten de <replaceable
>module-names</replaceable
> overeenkomen met de daadwerkelijke git modules in de gekozen <option
>repository</option
>. Zie <link linkend="conf-git-repository-base"
>git-repository-base</link
> of <link linkend="conf-use-modules"
>use-modules</link
> voor meer informatie. </para>

</sect3>

<sect3 id="kdesrc-buildrc-option-values">
<title
>Verwerken van optiewaarden</title>

<para
>In het algemeen wordt de gehele inhoud van de regel na de <replaceable
>optienaam</replaceable
> gebruikt als de <replaceable
>optiewaarde</replaceable
>.</para>

<para
>Eén wijziging die &kdesrc-build; uitvoert is dat een reeks <userinput
>${<replaceable
>naam-van-optie</replaceable
>}</userinput
> vervangen wordt door de waarde van die optie uit de globale configuratie. Dit biedt u om naar de waarde van bestaande opties te refereren, inclusief opties die al ingesteld zijn door &kdesrc-build;.</para>

<para
>Om een voorbeeld van dit gebruik te zien, zie <xref linkend="make-options-example"/>.</para>

</sect3>

<sect3 id="kdesrc-buildrc-options-groups">
<title
><quote
>options</quote
> modules</title>

<para
>Er is tenslotte een laatste type entry in een configuratiebestand, <literal
>options</literal
> groups, welke u kunt gebruiken waar een <literal
>module</literal
> of <literal
>module-set</literal
> kan worden gebruikt.</para>

<programlisting
>options <replaceable
>module-name</replaceable>
<replaceable
>option-name option-value</replaceable>
<replaceable
>[...]</replaceable>
end options
</programlisting>

<para
>In een <literal
>options</literal
> group kunt u opties ingesteld hebben net zoals bij een module declaratie, en hoort bij een bestaande module. De hierin ingestelde opties <emphasis
>overschrijven</emphasis
> de in de bijbehorende module ingestelde opties.</para>

<important
><para
>De bijbehorende module naam <emphasis
>moet</emphasis
> overeenkomen met de opgegeven naam in de <literal
>options</literal
> declaratie. Let op het mistypen van de naam.</para
></important>

<para
>Dit is handig bij het declareren van een complete <literal
>module-set</literal
> van modules, die allemaal dezelfde opties gebruiken, om daarna <literal
>options</literal
> groups te gebruiken voor individuele wijzigingen.</para>

<para
><literal
>options</literal
> groups kunt u ook toepassen op benoemde module sets. Hierdoor kunnen expert gebruikers een algemene configuratiebestand (waarin <literal
>module-set</literal
> declaraties voorkomen) als startpunt gebruiken, en vervolgens wijzigingen op de opties toepassen die door die module-sets in configuratiebestanden worden gebruikt die het commando <literal
><link linkend="kdesrc-buildrc-including"
>include</link
></literal
> gebruiken om naar het basisconfiguratie te refereren.</para>

<example id="ex-options-group">
<title
>Voorbeeld van het gebruik van options</title>

<para
>In dit voorbeeld kiezen we ervoor om alle modules uit de &kde; multimedia software groepen te bouwen. Maar we willen verschillende versies van het programma &kmix; (misschien voor het testen van een bug fix) gebruiken. Dat gaat dan als volgt:</para>

<programlisting
>module-set <replaceable
>kde-multimedia-set</replaceable>
  repository <userinput
>kde-projects</userinput>
  use-modules <replaceable
>kde/kdemultimedia</replaceable>
  branch <replaceable
>master</replaceable>
end module-set

# kmix is een onderdeel van kde/kdemultimedia groep, ook als we 
# kmix nooit eerder in dit bestand hebben genoemd, zal &kdesrc-build; de wijziging ontdekken.
options <replaceable
>kmix</replaceable>
  branch <replaceable
>KDE/4.12</replaceable>
end options
</programlisting>

<para
>Wanneer u nu &kdesrc-build; wilt uitvoeren, dan zullen alle &kde; multimedia programma's worden gebouwd vanuit de <quote
>master</quote
> branch van de broncoderepository, maar &kmix; zal worden gebouwd van de oudere <quote
>KDE/4.12</quote
> branch. Door <literal
>options</literal
> te gebruiken, hoeft u niet individueel alle <emphasis
>andere</emphasis
> &kde; multimedia programma's op te noemen om ze de juiste branch optie te geven.</para>

</example>

<note>
<para
>Merk op dat deze mogelijkheid pas beschikbaar is in &kdesrc-build; vanaf versie 1.16, of als u de development versie van &kdesrc-build; gebruikt van na 2014-01-12.</para
></note>

</sect3>

</sect2>

<sect2 id="kdesrc-buildrc-including">
<title
>Naar andere configuratiebestanden verwijzen</title>

<para
>In een configuratiebestand, mag u verwijzen naar andere bestanden door het keyword <literal
>include</literal
> met een bestand te gebruiken, zodat het zal reageren alsof het bestand waarnaar is verwezen, vanaf dat punt in het configuratiebestand is geplakt. </para>

<informalexample
><para
>Bijvoorbeeld, u kunt zoiets als het volgende hebben gedaan:</para>
<programlisting
>global
    include <replaceable
>~/common-kdesrc-build-options</replaceable>

    # Voeg specifieke opties hier toe.

end global
</programlisting>
</informalexample>

<note
><para
>Als u niet het volledige pad opgeeft naar het bestand waarvan u een verwijzing wilt opnemen, dan zal naar het bestand worden gezocht vanuit de map waarin het bestand met de broncode staat. Dit werkt ook recursief.</para
></note>

</sect2>

<sect2 id="kdesrc-buildrc-common">
<title
>De belangrijkste configuratieopties </title>

<para
>Hier volgt een lijst met de belangrijkste opties. klik op de optie om meer erover te lezen. Voor de volledige lijst met opties, zie <xref linkend="conf-options-table"/>. </para>

<itemizedlist>
<listitem
><para
><link linkend="conf-cmake-options"
>cmake-options</link
> voor het definiëren welke flags te gebruiken bij het configureren van een module bij het gebruik van &cmake;.</para
></listitem>
<listitem
><para
><link linkend="conf-branch"
>branch</link
>, voor het uitchecken van een branch in plaats van /trunk (bij &subversion;) of <literal
>master</literal
> (bij Git).</para
></listitem>
<listitem
><para
><link linkend="conf-configure-flags"
>configure-flags</link
> voor het definiëren welke flags te gebruiken bij het configureren van &Qt;.</para
></listitem>
<listitem
><para
><link linkend="conf-kdedir"
>kdedir</link
>, voor het instellen naar welke map &kde; wordt geïnstalleerd.</para
></listitem>
<listitem
><para
><link linkend="conf-make-options"
>make-options</link
>, voor het instellen welke opties naar het &make; programma (zoals hoeveel te gebruiken CPU's) worden doorgegeven.</para
></listitem>
<listitem
><para
><link linkend="conf-qtdir"
>qtdir</link
>, voor het instellen van het pad naar &Qt;.</para
></listitem>
<listitem
><para
><link linkend="conf-source-dir"
>source-dir</link
>, voor het wijzigen van waar de broncode naar toe moet worden gedownload.</para
></listitem>
</itemizedlist>

</sect2>
</sect1>
<sect1 id="conf-options-table">
<title
>Tabel met beschikbare configuratieopties</title>

<para
>Hieronder is een tabel met de verschillende opties, met de volgende informatie:</para>

<itemizedlist>

<listitem
><para
>Naam van optie</para
></listitem>

<listitem
><para
>Een beschrijving van hoe &kdesrc-build; reageert als de optie is ingesteld in zowel de global section, en de module section van het <link linkend="configure-data"
>configuratiebestand</link
> bij het bouwen van een module.</para
></listitem>

<listitem
><para
>Speciale opmerkingen over het doel en het gebruik van de optie.</para
></listitem>

</itemizedlist>

<table id="option-table">
<title
>Tabel met opties</title>
<tgroup cols="3">

<thead>
<row>
<entry
>Naam optie</entry>
<entry
>Module -&gt; Globaal gedrag</entry>
<entry
>Opmerkingen</entry>
</row>
</thead>

<tbody>

<row>
<entry
>apidox</entry>
<entry
></entry>
<entry
><para
>Deze optie werd gebruikt voor het bouwen van de KDE module API documentatie. Het is verwijderd in &kdesrc-build; 1.6.3 omdat het niet werd gebruikt. Online API documentatie is beschikbaar in <ulink url="https://api.kde.org/"
>kde.org</ulink
>. Daarnaast is mogelijk om KDE API documentatie te bouwen met de hulp van het <command
>kdedoxygen.sh</command
> script dat is meegeleverd met de kde-dev-scripts module. Zie <ulink url="https://techbase.kde.org/Development/Tools/apidox"
>KDE TechBase</ulink
> voor meer details.</para>
</entry>
</row>

<row>
<entry
>apply-qt-patches</entry>
<entry
></entry>
<entry
>Deze optie is verwijderd in kdesrc-build 1.10. Om hetzelfde effect te krijgen, zie <xref linkend="using-qt"/> en de optie <link linkend="conf-repository"
>repository</link
>.</entry>
</row>

<row id="conf-async">
<entry
>async</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
><para
>Deze optie maakt een asynchrone operatiemodus mogelijk, waar het parallel uitvoeren van de update van de broncode en het bouwproces mogelijk is, in plaats dat er gewacht op dat alle broncode geupdated is voordat het bouwproces start. De standaardinstelling van deze optie is dat de asynchrone modus ingeschakeld is. Om dit uit te schakelen, stelt u deze optie in op <userinput
>false</userinput
></para>
<para
>Deze optie is vanaf de 1.6 release beschikbaar.</para
></entry>
</row>

<row id="conf-binpath">
<entry
>binpath</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Gebruik deze optie om de omgevingsvariabele PATH in te stellen voor tijdens het bouwen. U kunt deze instelling niet met een module-optie overschrijven. De standaardinstelling is de $<envar
>PATH</envar
> dat is ingesteld als het script start. Deze omgevingsvariabele zou ook de door dubbele punt (:) gescheiden paden van uw development toolchain moeten hebben. De paden <filename class="directory"
>$<envar
>KDEDIR</envar
>/bin</filename
> en <filename class="directory"
>$<envar
>QTDIR</envar
>/bin</filename
> worden automatisch toegevoegd. U mag in elk pad dat u toevoegt de tilde (~) gebruiken.</para>
</entry>
</row>

<row id="conf-branch">
<entry
>branch</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Stel deze optie in om een checkout te doen van een branch van &kde; in plaats van de standaard <replaceable
>master</replaceable
> (bij &git; modules) of <replaceable
>trunk</replaceable
> (bij &subversion;), waar de &kde; ontwikkeling gebeurt.</para>

<para
>Bijvoorbeeld, om de &kde; 4.6 branch uit te checken, zou u deze optie in willen stellen op <replaceable
>4.6</replaceable
>.</para>

<para
>Als het &kdesrc-build; niet lukt om met deze optie een branch goed te downloaden, dan moet u wellicht handmatig de &url; opgegeven waarvan te downloaden met behulp van de opties <link linkend="conf-module-base-path"
>module-base-path</link
> of <link linkend="conf-override-url"
>override-url</link
>.</para>

<note
><para
>Bij de meeste &kde; modules wilt u waarschijnlijk in plaats daarvan de optie <link linkend="conf-branch-group"
>branch-group</link
> gebruiken en deze optie gebruiken voor de uitzonderingen.</para
></note>

</entry>
</row>

<row id="conf-branch-group">
<entry
>branch-group</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry>

<para
>Gebruik deze optie om een algemene groep in te stellen waarvan u de modules wilt selecteren.</para>

<para
>Voor de ondersteunde &git; module types, zal &kdesrc-build; bepalen welke branch automatisch daadwerkelijk gebruikt zal worden, gebaseerd op door de &kde; ontwikkelaars bepaalde regels (deze regels zijn te bekijken in de <literal
>kde-build-metadata</literal
> broncoderepository in uw broncode-map). Nadat een branch is gekozen, zal die branch worden gebruikt alsof u het zelf had opgegeven met de optie <link linkend="conf-branch"
>branch</link
>. </para>

<para
>Dit is handig als u alleen maar probeert om bij te blijven met sommige gewone ontwikkelingen zonder dat u aandacht hoeft te geven aan alle naamswijzigingen van branches.</para>

<para
>De huidige branch groups (op of 2013-08-11) zijn:</para>

<itemizedlist>

<listitem
><para
><literal
>stable-qt4</literal
>, voor het volgen van bugfixes van de op &Qt; 4-gebaseerde &kde; bibliotheken en programma's.</para
></listitem>

<listitem
><para
><literal
>latest-qt4</literal
>, voor de huidige ontwikkelingen en nieuwe mogelijkheden van de &Qt; 4-gebaseerde &kde; bibliotheken en programma's.</para
></listitem>

<listitem
><para
><literal
>kf5-qt5</literal
>, voor het volgen van <quote
>bleeding-edge</quote
> ontwikkelingen van de komende &Qt; 5-gebaseerde &kde; Frameworks 5, &plasma; Workspace 2, &etc;</para
></listitem>

</itemizedlist>

<para
>Merk op dat als u <emphasis
>daadwerkelijk zelf </emphasis
> een <literal
>branch</literal
> kiest, dat het deze instelling overschrijft. Datzelfde geldt ook voor andere branch-selectie opties zoals <link linkend="conf-tag"
>tag</link
>.</para>

<para
>Deze optie is toegevoegd in &kdesrc-build; 1.16-pre2.</para>

<note
><para
>deze optie is alleen geldig voor <literal
>kde-projects</literal
> &git; modules (de algemene geval). Zie ook <xref linkend="kde-projects-module-sets"/>. </para
></note>

</entry>
</row>

<row id="conf-build-dir">
<entry
>build-dir</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Gebruik deze optie om de map te wijzigen waarin het compilatieresultaat geplaatst wordt. Er zijn drie verschillende manieren om het te gebruiken: <orderedlist
> <listitem
><para
>Relatief ten opzichte van de &kde; &subversion; map met broncode (zie <link linkend="conf-source-dir"
>de optie source-dir</link
>). Deze is de standaard, en wordt geselecteerd als u een naam van een map invoert die niet een tilde (~) of een slash (/) begint.</para
> <para
>De standaard waarde is <filename class="directory"
>build</filename
>.</para
></listitem
> <listitem
><para
>Absoluut pad. Als u een pad specificeert dat begint met een /, dan wordt dat pad in deze vorm gebruikt. Bijvoorbeeld, <filename class="directory"
>/tmp/kde-obj-dir/</filename
>.</para
></listitem
> <listitem
><para
>Relatief ten opzichte van uw thuismap. Als u een pad specificeert dat begint met een ~, dan is het opgegeven pad relatief ten opzichte van uw thuismap, overeenkomend met de tilde-expansie in het terminalvenster. Bijvoorbeeld, <filename class="directory"
>~/builddir</filename
> zal de bouwmap instellen naar <filename class="directory"
>/home/user-name/builddir</filename
>.</para
></listitem
> </orderedlist
> Verrassend misschien, maar deze optie is per module instelbaar. </entry>
</row>

<row id="conf-build-when-unchanged">
<entry
>build-when-unchanged</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Gebruik deze om in te stellen of &kdesrc-build; altijd probeert om een module te bouwen die geen broncode update heeft gehad.</para>

<para
>Door <option
>build-when-unchanged</option
> naar <userinput
>true</userinput
> in te stellen, zal &kdesrc-build; altijd het bouwproces voor een module proberen, zelfs als er voor de module geen updates van de broncode zijn. Dit is de standaardinstelling omdat dit een grotere kans geeft op een correcte bouw.</para>

<para
>Door <option
>build-when-unchanged</option
> naar <userinput
>false</userinput
> in te stellen, zal &kdesrc-build; alleen het bouwproces voor een module proberen als er voor de module updates van de broncode zijn, of in andere situaties waar het waarschijnlijk is dat opnieuw bouwen daadwerkelijk nodig is. Dit kan tijd besparen, met name als u &kdesrc-build; dagelijks, of nog vaker uitvoert.</para>

<important
><para
>Deze mogelijkheid is er alleen als optimalisatie. Zoals zoveel andere optimalisaties, is er een afweging wat betreft de correctheid van uw installatie. Bijvoorbeeld, bij wijzigingen van de qt of kdelibs modules kan een herbouw van andere modules nodig zijn, zelfs als de broncode daarvan helemaal niet is verandert.</para
></important>
</entry>
</row>

<row id="conf-checkout-only">
<entry
>checkout-only</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Deze optie is in januari 2022 verwijderd. Het gaf de mogelijkheid om subsets uit te checken van een module uit een Subversion-opslagruimte.</para>
</entry>
</row>

<row id="conf-cmake-generator">
<entry
>cmake-generator</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Deze optie gebruiken om te specificeren welke generator samen met &cmake; te gebruiken. Op dit moment worden beiden <literal
>Ninja</literal
> en <literal
>Unix Makefiles</literal
> evenals extra generators op hen gebaseerd zoals <literal
>Eclipse CDT4 - Ninja </literal
> ondersteund. Ongeldige (niet-ondersteunde) waarden worden genegeerd en behandeld alsof ze niet zijn ingesteld. Indien niet ingesteld zal <literal
>Unix Makefiles</literal
> als standaard worden gebruikt. </para>

<para
>Merk op dat als een geldige generator ook is gespecificeerd via <link linkend="conf-cmake-options"
>cmake-options</link
> het de waarde voor <literal
>cmake-generator</literal
> zal overschrijven.</para
></entry>
</row>

<row id="conf-cmake-toolchain">
<entry
>cmake-toolchain</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Deze optie gebruiken om een toolchain-bestand te specificeren om te gebruiken met &cmake;. </para>
<para
>Wanneer een geldig toolchain-bestand is geconfigureerd zal &kdesrc-build; <emphasis
>niet langer automatisch omgevingsvariabelen instellen</emphasis
>. U kunt &set-env;, &binpath; en &libpath; gebruiken om de omgeving handmatig bij te werken als uw toolchain-bestand niet zomaar werkt met &kdesrc-build;. Kijk in <link linkend="kdesrc-build-std-flags"
>het overzicht van standaard vlaggen toegevoegd door &kdesrc-build;</link
> voor meer informatie. </para>
<para
>Merk op dat als een geldige toolchain ook is gespecificeerd via <link linkend="conf-cmake-options"
>cmake-options</link
> het de waarde voor <literal
>cmake-toolchain</literal
> zal overschrijven.</para
></entry>
</row>

<row id="conf-cmake-options">
<entry
>cmake-options</entry>
<entry
>Voegt toe aan de global options voor het standaard bouwproces, overschrijft global voor andere bouwprocessen.</entry>
<entry
><para
>Gebruik deze optie om op te geven welke flags aan &cmake; worden doorgegeven bij het creëren van het bouwsysteem voor de module. Als u dit gebruikt als een global optie, dan wordt het toegepast bij alle modules dat dit script bouwt. Als u dit als een module optie gebruikt, dan wordt het aan het eind van de global opties toegevoegd. Hierdoor kunt u algemene &cmake; opties in het global sectie specificeren.</para>

<para
>Deze optie is niet van toepassing op qt (wat &cmake; niet gebruikt). Gebruik in plaats daarvan <link linkend="conf-configure-flags"
>configure-flags</link
>.</para>

<para
>Als een geldige generator is gespecificeerd onder de gegeven opties het de waarde van <link linkend="conf-cmake-generator"
>cmake-generator</link
> zal overschrijven. Ongeldige (niet-ondersteunde) generators worden genegeerd en zullen niet worden doorgegeven aan &cmake;. </para>

<para
>Als een geldige toolchain-bestand is gespecificeerd onder de gegeven opties het de waarde van <link linkend="conf-cmake-toolchain"
>cmake-toolchain</link
> zal overschrijven. Ongeldige (niet-ondersteunde) toolchains worden genegeerd en zullen niet worden doorgegeven aan &cmake;. </para>

<para
>Omdat deze opties direct worden doorgegeven naar &cmake; commandoregel, moet u ze opgegeven alsof u intikt bij &cmake;. bijvoorbeeld:</para>

<screen
>cmake-options -DCMAKE_BUILD_TYPE=RelWithDebInfo
</screen>

<para
>Omdat dit altijd een probleem is, neemt &kdesrc-build; de zorg op zich om er voor te zorgen dat zolang de rest van de opties correct zijn ingesteld, u deze optie leeg zou moeten kunnen laten. (Met andere woorden, <emphasis
>vereiste</emphasis
> &cmake; parameters worden voor u automatisch ingesteld)</para
></entry>
</row>

<row id="conf-colorful-output">
<entry
>colorful-output</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
>Stel deze optie in op <userinput
>false</userinput
> om de gekleurde uitvoer van &kdesrc-build; uit te schakelen. De standaardinstelling van deze optie is <replaceable
>true</replaceable
>. Merk op dat &kdesrc-build; de kleurcodes alleen naar het terminalvenster (zoals xterm, &konsole;, of de normale &Linux; console) uitvoert. </entry>
</row>

<row id="conf-compile-commands-export">
<entry
>compile-commands-export</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry>
<para
>Schakelt de generatie van een <literal
>compile_commands.json</literal
> in via CMake in de bouwmap. Deze optie is standaard <replaceable
>true</replaceable
>, zet het op <userinput
>false</userinput
> om dit gedrag uit te schakelen. </para>
</entry>
</row>

<row id="conf-compile-commands-linking">
<entry
>compile-commands-linking</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry>
<para
>Schakelt het aanmaken van een symbolische koppeling in van <literal
>compile_commands.json</literal
> in gegenereerd via CMake in de bouwmap naar de broncodemap. Deze optie is standaard <replaceable
>false</replaceable
>, zet het op <userinput
>true</userinput
> om het maken van de symbolische koppeling in te schakelen. </para>
</entry>
</row>

<row id="conf-configure-flags">
<entry
>configure-flags</entry>
<entry
>Voegt toe aan de global options voor het standaard bouwproces, overschrijft global voor andere bouwprocessen.</entry>
<entry
><para
>Gebruik deze optie om op te geven welke flags naar ./configure moeten worden doorgegeven bij het creëren van het bouwsysteem van de module. Als u dit gebruikt als een global-optie, dan is het van toepassing op alle modules dat dit script bouwt. <emphasis
>Deze optie is alleen van toepassing op qt.</emphasis
></para>

<para
>Voor het wijzigen van configuratiegegevens voor KDE modules, zie <link linkend="conf-cmake-options"
>cmake-options</link
>. </para>
</entry>
</row>

<row id="conf-custom-build-command">
<entry
>custom-build-command</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global (build system optie)</entry>
<entry>
    <para
>U kunt deze optie zo instellen dat het een ander commando uitvoert (ander dan <command
>make</command
>, bijvoorbeeld) in om het bouwproces uit te voeren. &kdesrc-build; zou in het algemeen de juiste actie uit moeten voeren, daarom zou het niet nodig moeten zijn om deze optie in te stellen. Maar het kan handig zijn om alternatieve bouwsystemen te gebruiken. </para>

    <para
>De inhoud van deze optie wordt als commando op de commandoregel gebruikt, normaal gesproken gemodificeerd door de optie <link linkend="conf-make-options"
>make-options</link
>. </para>
</entry>
</row>

<row id="conf-cxxflags">
<entry
>cxxflags</entry>
<entry
>Voegt toe aan de global options voor het standaard bouwproces, overschrijft global voor andere bouwprocessen.</entry>
<entry
><para
>Gebruik deze optie om te specificeren welke flags gebruikt worden voor het bouwen van de module. Deze optie wordt hier gespecificeerd en niet bij <link linkend="conf-configure-flags"
>configure-flags</link
> of <link linkend="conf-cmake-options"
>cmake-options</link
> omdat deze optie de omgevingsvariabele <envar
>CXXFLAGS</envar
> instelt tijdens het bouwproces.</para>

<para
>Noot: merk op dat voor &kde; 4 en elke andere modules die gebruik maken van &cmake;, het nodig is om de optie CMAKE_BUILD_TYPE in te stellen op <userinput
>none</userinput
> bij het configureren van de module. Dit kunt u doen door de optie <link linkend="conf-cmake-options"
>cmake-options</link
> te gebruiken. </para>
</entry>
</row>

<row id="conf-dest-dir">
<entry
>dest-dir</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Gebruik deze optie om de naam van een module gebruikt op de harde schijf te wijzigen. Bijvoorbeeld, als uw module was extragear/network, dan zou u het met deze optie kunnen hernoemen naar extragear-network. Merk wel op dat ofschoon dit wel de naam op de harde schijf wijzigt, het geen goed idee is om mappen of map-scheidingen in de naam op te nemen omdat dit interfereert met de <link linkend="conf-build-dir"
>build-dir</link
> of <link linkend="conf-source-dir"
>source-dir</link
> opties. </entry>
</row>

<row id="conf-disable-agent-check">
<entry
>disable-agent-check</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
>Als u normaal gesproken &ssh; gebruikt om de broncode uit &subversion; te downloaden (als of u het svn+ssh protocol gebruikt), dan zal &kdesrc-build; er voor zorgen dat als u ssh-agent gebruikt, het daadwerkelijk enkele &ssh;-identiteiten gebruikt. Dit is om te voorkomen dat &ssh; voor elke module weer om uw wachtwoord vraagt. U kunt deze controle uitschakelen door <option
>disable-agent-check</option
> in te stellen op <userinput
>true</userinput
>. </entry>
</row>

<row id="conf-do-not-compile">
<entry
>do-not-compile</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Gebruik deze optie om een specifieke set van mappen op te geven die niet in een module gebouwd moeten worden (in plaats van allemaal). De niet te bouwen modules moeten door spaties gescheiden zijn.</para>

<para
>Merk op dat de broncode voor de programma's toch gewoon worden gedownload.</para>

<para
>Bijvoorbeeld, om het bouwen van de <literal
>codeeditor</literal
> en mappen <literal
>minimaltest</literal
> van het framework <literal
>syntaxhighlighting</literal
> uit te schakelen, zou u <userinput
>do-not-compile codeeditor minimaltest</userinput
> compileren toevoegen, u zou "do-not-compile juk kscd" aan uw syntaxhighlighting opties moeten toevoegen.</para>

<para
>Zie <xref linkend="not-compiling"/> voor een voorbeeld.</para>
</entry>
</row>

<row id="conf-email-address">
<entry
>email-address</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry>
<para
>Deze optie is verwijderd in &kdesrc-build; 1.14. </para>
</entry>
</row>

<row id="conf-email-on-compile-error">
<entry
>email-on-compile-error</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry>
<para
>Deze optie is verwijderd in &kdesrc-build; 1.14. </para>
</entry>
</row>

<row>
<entry
>inst-apps</entry>
<entry
></entry>
<entry
>Deze optie is verwijderd in versie 1.10 </entry>
</row>

<row id="conf-git-desired-protocol">
<entry
>git-desired-protocol</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
><para
>Deze optie is alleen van toepassing op modules van een <link linkend="kde-projects-module-sets"
>&kde; project</link
> repository.</para>

<para
>Wat deze optie eigenlijk doet is het instellen van welk netwerk-protocol de voorkeur heeft bij het opsturen van de broncode voor deze modules. Normaal gesproken wordt het zeer efficiënte <literal
>git</literal
> protocol gebruikt, maar bij sommige netwerken (b.v. intranetten van bedrijven, publieke Wi-Fi) kan deze geblokkeerd worden. Een alternatief protocol welke veel beter wordt ondersteund is het <literal
>https</literal
> protocol gebruikt voor Internet web sites.</para>

<para
>Als u een van deze beperkende netwerken moet gebruiken dan kunt u deze optie op <userinput
>http</userinput
> instellen om aan <literal
>https</literal
> communicatie de voorkeur te geven.</para>

<tip
><para
>U heeft wellicht ook de optie <link linkend="conf-http-proxy"
>http-proxy</link
> nodig omdat ook een HTTP proxy nodig is voor netwerkverkeer.</para
></tip>

<para
>In alle andere situaties zou u deze optie niet moeten instellen omdat het standaardprotocol het meeste efficient is.</para>

<para
>Deze optie is toegevoegd in &kdesrc-build; 1.16. Vóór 20.06 werd deze optie gebruikt om ophaal-URL te configuren in plaats van de opstuur-URL. Vanaf 20.06 wordt <literal
>https</literal
> altijd gebruikt bij het bijwerken van KDE-projecten.</para>
</entry>
</row>

<row id="conf-git-repository-base">
<entry
>git-repository-base</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
><para
>Deze optie, toegevoegd in versie 1.12.1, gebruikt u voor het creëren van een verkorte naam om naar een specifieke Git-repository gebaseerde URL te refereren in latere <link linkend="module-sets"
>module set</link
> declaraties, wat handig is bij het snel declareren van veel te bouwen Git modules.</para>

<para
>U moet twee dingen (gescheiden door een spatie) specificeren: De naam waaraan de basis URL wordt toegekend en de actuele basis URL zelf. Bijvoorbeeld:</para>

<para>
<informalexample>
<programlisting
>global
   # andere opties

   # Dit is het algemene pad naar alle anonieme Git server modules.
   git-repository-base <replaceable
>kde-git</replaceable
> <replaceable
>kde:</replaceable>
end global

# Module declaraties

module-set
   # Nu kunt u de alias gebruiken die u eerder definieerde, maar <emphasis
>alleen</emphasis>
   # in een module-set.
   repository <replaceable
>kde-git</replaceable>

   <link linkend="conf-use-modules"
>use-modules</link
> <replaceable
>module1.git</replaceable
> <replaceable
>module2.git</replaceable>
end module-set
</programlisting>
</informalexample>
</para>

<para
>De module-instelling <literal
>use-modules</literal
> optie creëerde twee modules intern, waardoor &kdesrc-build; zich gedraagt alsof het heeft ingelezen:</para>

<programlisting
>module module1
    repository kde:<replaceable
>module1.git</replaceable>
end module

module module2
    repository kde:<replaceable
>module2.git</replaceable>
end module
</programlisting>

<para
>Het hierboven gebruikte &git; repository voorvoegsel <literal
>kde:</literal
> is een afkorting die automatisch door &kdesrc-build; wordt opgezet. Zie het artikel <ulink url="https://techbase.kde.org/Development/Git/Configuration#URL_Renaming"
>URL Renaming</ulink
> in de TechBase voor meer informatie. Merk op dat in tegenstelling tot andere opties, u deze optie meerdere keren kan specificeren om net zoveel aliassen als nodig te creëren.</para>

<tip
><para
>Het is geen vereiste om deze optie te gebruiken om de module-set handig te gebruiken, deze optie bestaat om makkelijk dezelfde repository in veel verschillende module sets te gebruiken.</para
></tip>
</entry>
</row>

<row id="conf-git-user">
<entry
>git-user</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry>
<para
>Deze optie is bedoeld voor &kde;-ontwikkelaars. Indien ingesteld, zal het gebruikt worden om automatisch identiteitsinformatie voor de besturingssoftware voor broncode &git; in te stellen voor <emphasis
>nieuw gedownloade</emphasis
> &git;-modules (inclusief de grote meerderheid van &kde;-modules).</para>

<para
>Specifiek, de velden voor de naam en email van de gebruiker voor elk nieuw &git; repository moet u invullen bij deze optie.</para>

<para
>De waarde moet gespecificeerd worden in de vorm <option
><replaceable
>Naam gebruiker</replaceable
> &lt;<replaceable
>email@voorbeeld.com</replaceable
>&gt;</option
>.</para>

<para>
<informalexample>
<para
>Een ontwikkelaar genaamd <quote
>Foo Barbaz</quote
> met het e-mailadres <quote
>foo@abc.xyz</quote
> zou bijvoorbeeld gebruiken:</para>

<screen
><symbol
>git-user</symbol
> <replaceable
>Foo Barbaz</replaceable
> &lt;<replaceable
>foo@abc.xyz</replaceable
>&gt;
</screen>
</informalexample>
</para>

<para
>Deze optie was geïntroduceerd in &kdesrc-build; 15.09. </para>
</entry>
</row>

<row id="conf-http-proxy">
<entry
>http-proxy</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>

<entry
><para
>Deze optie, indien ingesteld, gebruikt de gespecificeerde URL als een proxy server voor elk HTTP netwerk-communicatie (bijvoorbeeld, voor het downloaden van snapshots voor nieuwe modules, of de <link linkend="kde-projects-module-sets"
>KDE project database</link
>).</para>

<para
>Daarnaast zal &kdesrc-build; proberen om de hulpprogramma's waarvan het afhankelijk is, ook die proxy server te laten gebruiken, indien mogelijk, door de omgevingsvariabele <envar
>http_proxy</envar
> naar de aangegeven server te laten wijzen, <emphasis
>als die omgevingsvariabele niet al is ingesteld</emphasis
>.</para>

<para
>Deze optie was geïntroduceerd in &kdesrc-build; 1.16.</para>
</entry>
</row>

<row id="conf-ignore-kde-structure">
<entry
>ignore-kde-structure</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry>
<para
>Deze optie is verouderd en zal (opnieuw) verwijderd worden in een volgende release.</para>

<para
>Gebruik in plaats daarvan de <option
><link linkend="conf-directory-layout"
>indeling-mappen</link
></option
>, wat meer mogelijkheden voor selectie biedt.</para>
</entry>
</row>

<row id="conf-directory-layout">
<entry
>indeling-mappen</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Deze optie wordt gebruikt om de indeling die &kdesrc-build; zou moeten gebruiken bij het aanmaken van de broncode- en bouwmappen.</para>
<para
>Op dit moment zijn er drie mogelijke waarden: <userinput
>flat</userinput
>, <userinput
>invent</userinput
> en <userinput
>metadata</userinput
></para>
<para
>De indeling <userinput
>flat</userinput
> is de standaard waarde en zal alle modulen direct onder het topniveau broncode en bouwmappen groeperen. Bijvoorbeeld <literal
>source/extragear/network/telepathy/ktp-text-ui</literal
> zou in de indeling <userinput
>metadata</userinput
> zijn en <literal
>source/ktp-text-ui</literal
> in plaats daarvan in de indeling <userinput
>flat</userinput
>. </para>
<para
>De indeling <userinput
>invent</userinput
> maakt een hiërarchie in mappen aan de de de relatieve paden van opslagruimten spiegelt op <ulink url="https://invent.kde.org/"
>invent.kde.org</ulink
>. Bijvoorbeeld <literal
>source/kde/applications/kate</literal
> in de indeling <userinput
>metadata</userinput
> zou zijn <literal
>source/utilities/kate</literal
> in plaats daarvan in de indeling <userinput
>invent</userinput
>. Deze indeling heeft alleen effect op KDE projecten. Het is een goede keuze voor mensen die beginnen met &kdesrc-build;. </para>
<para
>Tenslotte, de indeling <userinput
>metadata</userinput
> is hetzelfde als het oude standaard gedrag. Deze indeling organiseert KDE projecten volgens de projectpaden gespecificeerd in de projectmetadata voor deze modules. Dit is een goede keuze als u een indeling van mappen wilt die bepaalde KDE-processen volgt, maar merk op dat dit pad daarom niet altijd stabiel is. Als resultaat kan &kdesrc-build; een oude kopie van de opslagruimte verlaten en een nieuwe klonen voor een project vanwege wijzigingen in de projectmetadata.</para>
</entry>
</row>

<row id="conf-ignore-modules">
<entry
>ignore-modules</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
><para
>De in deze optie genoemde modules, welke door &kdesrc-build; worden geselecteerd wegens de optie <link linkend="conf-use-modules"
>use-modules</link
>, worden echter compleet overgeslagen. Gebruik deze optie als u een complete <link linkend="kde-projects-module-sets"
>kde-projects</link
> project wilt bouwen <emphasis
>behalve</emphasis
> enkel specifieke modules.</para>

<para
>De instellingswaarde hoeft niet noodzakelijkerwijs direct de modulenaam te hebben. Alle modules waarvan het <link linkend="kde-projects-module-sets"
>&kde; projects module pad</link
> overeenkomt met een onderdeel van de optiewaarden zal overgesloten worden, zodat u op die manier meerdere modules kan overslaan.</para>

<para
>Bijvoorbeeld, een instellingswaarde met <replaceable
>libs</replaceable
> zal als resultaat hebben dat zowel<symbol
>kde/kdegraphics/libs</symbol
> en <symbol
>playground/libs</symbol
> worden overgeslagen worden (maar niet <symbol
>kde/kdelibs</symbol
> omdat het complete <quote
>kdelibs</quote
> wordt vergeleken).</para>

<tip
><para
>Zie ook <xref linkend="example-ignoring-a-module"/>.</para
></tip>

<para
>Deze optie was geïntroduceerd in &kdesrc-build; 1.16.</para>
</entry>
</row>

<row id="conf-include-dependencies">
<entry
>include-dependencies</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry>
<para
>Deze optie zal, indien ingesteld op <userinput
>true</userinput
> aan &kdesrc-build; vragen om ook bekende afhankelijkheden van deze module tijdens het bouwen mee te nemen, zonder dat er van u verlangt word om deze afhankelijkheden te noemen (zelfs indirect).</para>

<note
><para
>Deze optie werkt alleen voor op <link linkend="kde-projects-module-sets"
><literal
>kde-project</literal
>-gebaseerde modules</link
>, en vereist dat de metadata die door &kde; ontwikkelaars is ingevuld accuraat is voor de door u geselecteerde <link linkend="conf-branch-group"
>branch-group</link
>.</para
></note>

<para
>Deze optie is standaard ingeschakeld om het bouwen van toepassingen die recentere versies van &Qt; of &plasma; nodig hebben dan ondersteund op gebruikelijke besturingssystemen.</para>
</entry>
</row>

<row id="conf-install-after-build">
<entry
>install-after-build</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Met deze optie stelt u in of het pakket geïnstalleerd moet worden als de bouw succesvol is. Deze optie is standaard ingeschakeld. Als u dit wilt uitschakelen, dan moet u deze optie instellen op <userinput
>false</userinput
> in het <link linkend="configure-data"
>configuratiebestand</link
>. U kunt ook op de commandoregel de parameter <link linkend="cmdline-no-install"
><option
>--no-install</option
></link
> gebruiken. </entry>
</row>

<row id="conf-install-environment-driver">
<entry
>install-environment-driver</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
><para
>Standaard zal &kdesrc-build; een shell script installeren dat u kunt gebruiken in setup scripts voor een gebruikers-profiel om makkelijk de nodige omgevingsvariabelen in te stellen om de door &kdesrc-build; gebouwde Plasma desktop te gebruiken.</para>

<para
>Dit stuurprogramma zal de volgende bestanden veranderen:</para>

<itemizedlist>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-master.sh</filename
> (normaal gesproken gevonden als <filename
>~/.config/kde-env-master.sh</filename
>).</para
></listitem>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-user.sh</filename
> (normaal gesproken gevonden als <filename
>~/.config/kde-env-user.sh</filename
>).</para
></listitem>
</itemizedlist>

<para
>Het bestand <filename
>kde-env-user.sh</filename
> is optioneel. Het is bedoeld voor aanpassingen door de gebruiker (zie de sectie <ulink url="https://userbase.kde.org/KDE_System_Administration/Environment_Variables#Troubleshooting_and_Debugging"
>Troubleshooting and Debugging</ulink
> van de &kde; UserBase voor voorbeelden van aanpasbare instellingen), maar deze instellingen zijn ook door de gebruiker elders in te stellen in zijn bestaande profiel setup scripts.</para>

<para
>U kunt deze mogelijkheid uitschakelen door deze optie in te stellen op <replaceable
>false</replaceable
>, en er voor zorg te dragen dat de optie <link linkend="conf-install-session-driver"
>install-session-driver</link
> ook is uitgeschakeld.</para>

<para
>Deze optie was geïntroduceerd in &kdesrc-build; 17.08.</para>

<tip
><para
>&kdesrc-build; zal niet uw bestaande bestanden (indien aanwezig) overschrijven tenzij u ook de parameter <option
><link linkend="cmdline-delete-my-settings"
>--delete-my-settings</link
></option
> op de commandoregel meegeeft.</para
></tip>
</entry>
</row>

<row id="conf-install-session-driver">
<entry
>install-session-driver</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
><para
>Indien ingeschakeld, zal &kdesrc-build; proberen om een driver voor de grafische login manager te installeren zodat u kunt inloggen naar de door uw &kdesrc-build;-gebouwde &kde;-desktop.</para>

<para
>Dit stuurprogramma zal de volgende bestanden veranderen:</para>

<itemizedlist>
<listitem
><para
><filename
>~/.xsession</filename
></para
></listitem>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-master.sh</filename
> (normaal gesproken gevonden als <filename
>~/.config/kde-env-master.sh</filename
>).</para
></listitem>
<listitem
><para
><filename
>$XDG_CONFIG_HOME/kde-env-user.sh</filename
> (normaal gesproken gevonden als <filename
>~/.config/kde-env-user.sh</filename
>).</para
></listitem>
</itemizedlist>

<para
>Als u uw eigen login driver wilt blijven gebruiken, dan kunt u deze instelling uitschakelen door deze optie in te stellen op <replaceable
>false</replaceable
>. Indien ingeschakeld, zal deze mogelijkheid ook het onderdeel <link linkend="conf-install-environment-driver"
>install-environment-driver</link
> inschakelen.</para>

<para
>Deze optie was geïntroduceerd in &kdesrc-build; 1.16.</para>

<tip
><para
>&kdesrc-build; zal niet uw bestaande bestanden (indien aanwezig) overschrijven tenzij u ook de parameter <option
><link linkend="cmdline-delete-my-settings"
>--delete-my-settings</link
></option
> op de commandoregel meegeeft.</para
></tip>
</entry>
</row>

<row id="conf-kdedir">
<entry
>kdedir</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Met deze optie stelt u de map in waar &kde; zal worden geïnstalleerd na het bouwproces. De standaardinstelling is <filename class="directory"
>~/kde</filename
>. Als u dit wijzigt naar een map die root-rechten nodig heeft, dan wilt u wellicht meer lezen over de optie <link linkend="conf-make-install-prefix"
>make-install-prefix</link
>.</entry>
</row>

<row id="conf-kde-languages">
<entry
>kde-languages</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
><para
>Met deze optie kunt u ervoor kiezen om localization pakketten samen &kde; te downloaden en te installeren. U wilt dit waarschijnlijk doen als u niet in de Verenigde Staten leeft en &kde; in uw eigen taal vertaald wilt gebruiken.</para>

<para
>Om deze optie te gebruiken, vult u hier een lijst in met te installeren talen gescheiden door spaties. Bij elke taal hoort een bijbehorende taalcode, die u kunt opzoeken op deze pagina: <ulink url="http://l10n.kde.org/teams-list.php"
>http://l10n.kde.org/teams-list.php</ulink
>. </para>

<para
>Het is geen probleem als u maar een taal selecteert. Standaard wordt er geen gedownload, wat inhoud dat &kde; alles in Amerikaans Engels toont.</para>

<para
>Bijvoorbeeld, als u er voor kiest om de Franse taal te installeren, dan zou u deze optie kunnen instellen op zo iets als: <userinput
><option
>kde-languages</option
> <replaceable
>fr</replaceable
></userinput
>. U moet echter nog steeds &systemsettings; gebruiken om de Franse taal te selecteren.</para>
</entry>
</row>

<row id="conf-libpath">
<entry
>libpath</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Gebruik deze optie om de omgevingsvariabele <envar
>LD_LIBRARY_PATH</envar
> voor gebruik tijdens het bouwen in te stellen. U kunt in een module option deze instelling niet overschrijven. De standaardinstelling is blank, maar de paden <filename class="directory"
>$<envar
>KDEDIR</envar
>/lib</filename
> en <filename class="directory"
>$<envar
>QTDIR</envar
>/lib</filename
> worden automatisch toegevoegd. U mag in deze optie bij elk pad dat u toevoegt de tilde (~) gebruiken. </entry>
</row>

<row id="conf-log-dir">
<entry
>log-dir</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Gebruik deze optie om de map te wijzigen waarin de door het script gegenereerde logbestanden worden opgeslagen. </entry>
</row>

<row id="conf-make-install-prefix">
<entry
>make-install-prefix</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Vul deze variabele met een door spaties gescheiden lijst, wat zal worden geïnterpreteerd als een commando en de daarbij horende opties die de voor het installeren van modules gebruikte commando <userinput
><command
>make</command
> <option
>install</option
></userinput
> voorafgaan. Dit is handig bijvoorbeeld bij het met &sudo; installeren van pakketten, maar wees wel voorzichtig bij het gebruik van root privileges.</entry>
</row>

<row id="conf-make-options">
<entry
>make-options</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global (build system optie)</entry>
<entry
><para
>Vul deze variabele met commandoregelparameters die u wilt doorgeven aan het commando <command
>make</command
>. Dit is handig bij programma's zoals <ulink url="https://github.com/distcc/distcc"
><application
>distcc</application
></ulink
> of bij systemen met meer dan een processor core.</para>
<para
>Merk op dat niet alle ondersteunde bouwsystemen <command
>make</command
> gebruiken. Voor bouwsystemen die <command
>ninja</command
> voor bouwen gebruiken (zoals het <link linkend="conf-override-build-system"
><application
>Meson</application
> bouwsysteem</link
>), zie de instelling <link linkend="conf-ninja-options"
>ninja-opties</link
>.</para>
</entry>
</row>

<row id="conf-manual-build">
<entry
>manual-build</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Zet de instellingswaarde op <userinput
>true</userinput
> om te voorkomen dat het bouwproces gaat proberen om deze module te bouwen. Het blijft echter wel up-to-date bij het updating met &subversion;. Deze optie is het exacte equivalent van de commandoregelparameter <link linkend="cmdline-no-build"
><option
>--no-build</option
></link
>. </entry>
</row>

<row id="conf-manual-update">
<entry
>manual-update</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Zet de instellingswaarde op <userinput
>true</userinput
> om te voorkomen dat het bouwproces gaat proberen om deze module up te daten (en daarop volgend, bouwen of installeren). Als u dit voor een module instelt, dan heeft u het in essentie uitgecomment. </entry>
</row>

<row id="conf-module-base-path">
<entry
>module-base-path</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Stel deze optie in om het standaard pad van &kdesrc-build; naar de betreffende module te overschrijven. Dit kunt u bijvoorbeeld gebruiken, om specifieke branches of getagde versies van libraries te downloaden. <ulink url="https://websvn.kde.org/"
>De &kde; Source Viewer</ulink
> is onmisbaar bij het zoeken naar het juiste pad.</para>

<para
>Vergeet niet dat &kdesrc-build; het uiteindelijke pad samenstelt uit de volgende onderdelen: <filename class="directory"
><varname
>$svn-server</varname
>/home/kde/<varname
>$module-base-path</varname
></filename
>. </para>

<para
>De standaardwaarde is naar keuze <filename class="directory"
>trunk/<varname
>$module</varname
></filename
> of <filename class="directory"
>trunk/KDE/<varname
>$module</varname
></filename
>, afhankelijk van de module naam.</para>

<tip
><para
>Gebruik in plaats daarvan waar mogelijk de opties <link linkend="conf-branch"
>branch</link
> of <link linkend="conf-tag"
>tag</link
>. </para
></tip>
</entry>
</row>

<row id="conf-niceness">
<entry
>niceness</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
>Stel deze optie in op een getal tussen de 20 en de 0. Hoe hoger het getal is, hoe lager de prioriteit is die &kdesrc-build; voor zich zelf zal instellen, d.w.z. hoe hoger het getal, hoe "aardiger" het programma is. de standaardinstelling is 10. </entry>
</row>

<row id="conf-ninja-options">
<entry
>ninja-options</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global (build system optie)</entry>
<entry
><para
>Stel deze variabele in om opdrachtregelopties door te geven aan het bouwcommando <command
>ninja</command
>. Dit kan nuttig zijn om <quote
>verbose</quote
> uitvoer in te schakelen of om handmatig het aantal parallelle bouwjobs te verminderen die <command
>ninja</command
> zou gebruiken.</para>

<note
><para
>Merk op dat deze instelling alleen ninja bestuurt bij gebruik door &kdesrc-build;. De module &Qt;-<quote
>webengine</quote
> gebruikt <command
>ninja</command
> indirect, maar ondersteunt alleen officieel het bouwen door <command
>make</command
>. In deze situatie kunt u <literal
>NINJAFLAGS</literal
> instellen als een manier om <command
>make</command
> de toepasselijke vlaggen door te egeven wanneer het later <command
>ninja</command
> aanroept, door <link linkend="conf-make-options"
>make-options</link
> te gebruiken.</para>

<informalexample>
<programlisting
>opties <replaceable
>qtwebengine</replaceable>
    # Beperk make en ninja om niet meer dan 6 aparte compileerjobs te gebruiken
    # zelfs wanneer meer CPU's beschikbaar zijn, om een tekort aan geheugen te vermijden
    <option
><link linkend="conf-make-options"
>make-options</link
></option
> -j<replaceable
>6</replaceable
> NINJAFLAGS=-j<replaceable
>6</replaceable>
einde opties
</programlisting>
</informalexample>
</note>
</entry>
</row>

<row id="conf-no-svn">
<entry
>no-svn</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Als u deze optie op true heeft gezet dan zal &kdesrc-build; de broncode voor de module niet automatisch updaten. Maar het zal wel proberen om de module zoals altijd te bouwen.</entry>
</row>

<row>
<entry
>no-rebuild-on-fail</entry>
<entry
></entry>
<entry
>Deze optie is verwijderd in versie 1.10, omdat dit gedrag niet meer behulpzaam is vanwege fixes in het onderliggende bouwsysteem.</entry>
</row>

<row id="conf-num-cores">
<entry
>aantal-kernen</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry>
<para
>Deze optie wordt gedefinieerd door &kdesrc-build; (bij gebruik van het hulpmiddel kdesrc-build-setup van <command
>kdesrc-build --initial-setup</command
>), ingesteld om het aantal beschikbare CPU's te zijn (zoals aangegeven door de externe toepassing <application
>nproc</application
>). Als &kdesrc-build; het aantal CPU's niet kan detecteren, wordt deze waarde ingesteld op 4.</para>

<para
>Zie <xref linkend="make-options-example"/> voor een voorbeeld van het gebruik van deze optie. Deze optie is toegevoegd in versie 20.07.</para>
</entry>
</row>

<row id="conf-num-cores-low-mem">
<entry
>aantal-kernen-laag-geheugen</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry>
<para
>Deze optie is gedefinieerd door &kdesrc-build; (bij gebruik van het hulpmiddel kdesrc-build-setup of <command
>kdesrc-build --initial-setup</command
>), ingesteld om het aantal CPU's te zijn dat is geacht wordt veilig te zijn voor zwaargewicht of andere zeer intensieve modulen, zoals <literal
>qtwebengine</literal
>, om te vermijden uit geheugen te lopen tijdens het bouwen.</para>

<para
>De typische berekening is één CPU kern voor elke 2 gigabytes (GiB) totaal geheugen. Minstens 1 kern zal gespecificeerd worden en niet meer dan <option
><link linkend="conf-num-cores"
>aantal-kernen</link
></option
> kernen zal gespecificeerd worden.</para>

<para
>Hoewel deze optie bedoeld is om &Qt;-modules te ondersteunen kunt u het gebruiken voor elke module op dezelfde manier waarop <option
>aantal-kernen</option
> wordt gebruikt.</para>

<para
>Als &kdesrc-build; het beschikbare geheugen niet kan detecteren dan zal deze waarde ingesteld worden op 2.</para>

<para
>Deze optie is toegevoegd in versie 20.07.</para>
</entry>
</row>

<row id="conf-override-build-system">
<entry
>override-build-system</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Dit is een geavanceerde optie, toegevoegd in &kdesrc-build; 1.16.</para>

<para
>Normaal gesproken zal &kdesrc-build; na een download detecteren welk bouwsysteem het moet gebruiken voor een module. Dit wordt gedaan door te controleren op de aanwezigheid van bepaalde bestanden in de map met de broncode van de module.</para>

<para
>Sommige modules kunnen meerdere vereiste sets bestanden hebben, wat de auto-detectie in verwarring kan brengen. In een dergelijk geval kan u handmatig de correcte bouw type specificeren.</para>

<para
>De op dit moment ondersteunde bouwtypes die u kunt instellen zijn:</para>

<variablelist>
    <varlistentry>
        <term
>KDE</term>
        <listitem
><para
>Gebruikt om &kde; modules te bouwen. In werkelijkheid kunt u het gebruiken om bijna elke module te bouwen dat gebruik maakt van &cmake; maar het is het verstandigst om niet ervan afhankelijk te zijn.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>Qt</term>
        <listitem
><para
>Gebruikt om de &Qt; bibliotheek zelf te bouwen.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>qmake</term>
        <listitem
><para
>Gebruikt om &Qt; modules te bouwen die gebruik maken van <application
>qmake</application
>-style <literal
>.pro</literal
>-bestanden.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>generic</term>
        <listitem
><para
>Gebruikt om modules te bouwen die gebruik maken van gewone Makefiles en die geen speciale configuratie nodig hebben.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>autotools</term>
        <listitem
><para
>Dit is de standaard configuratie hulpprogramma dat door de meeste vrije en open-source programma's die niet in een van de andere categorieën vallen gebruikt wordt.</para
></listitem>
    </varlistentry>
    <varlistentry>
        <term
>meson</term>
        <listitem
><para
>Dit is een <ulink url="https://mesonbuild.com"
>relatief nieuw hulpmiddel</ulink
> die populariteit wint als een vervanging voor de autotools en kan vereist worden voor sommige niet-&kde; modules.</para
></listitem>
    </varlistentry>
</variablelist>

</entry>
</row>

<row id="conf-override-url">
<entry
>override-url</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Als u deze optie instelt, dan zal &kdesrc-build; de waarde daarvan gebruiken als de &url; die doorgegeven wordt aan &subversion; <emphasis
>compleet ongewijzigd</emphasis
>. In het algemeen zal u dit willen gebruiken als u een specifieke release wilt downloaden en &kdesrc-build; niet kan vaststellen wat u bedoelt als u <link linkend="conf-branch"
>branch</link
> gebruikt. </entry>
</row>

<row id="conf-persistent-data-file">
<entry
>persistent-data-file</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
><para
>Gebruik deze optie om de locatie te wijzigen waar &kdesrc-build; zijn persistente data opslaat. De standaard is dat deze data wordt opgeslagen in een bestand genaamd <filename
>.kdesrc-build-data</filename
> geplaatst in de dezelfde map als waar het gebruikte configuratiebestand is. Als het globale configuratiebestand wordt gebruikt, zal het opgeslagen worden in <filename
>~/.local/state/kdesrc-build-data</filename
> (<filename
>$XDG_STATE_HOME/kdesrc-build-data</filename
>, als <envar
>$XDG_STATE_HOME</envar
> is ingesteld). Als u in dezelfde map meerdere configuraties beschikbaar heeft, dan wilt u deze optie handmatig instellen zodat de verschillende configuraties niet eindigen met conflicterende persistente data. </para>

<para
>Deze optie is toegevoegd in &kdesrc-build; 1.15.</para>
</entry>
</row>

<row id="conf-prefix">
<entry
>prefix</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Met deze optie stelt u in waar de module wordt geïnstalleerd (normaal wordt de instelling <option
><link linkend="conf-kdedir"
>kdedir</link
></option
> gebruikt). Door deze optie te gebruiken kunt u een module in een andere map installeren dan waar de KDE Platform libraries zijn geïnstalleerd, in het geval dat u &kdesrc-build; gebruikt om alleen programma's te bouwen.</para>
<para
>U kunt <varname
>${MODULE}</varname
> of <varname
>$MODULE</varname
> in het pad gebruiken om ze te expanderen tot de naam van de module.</para>
</entry>
</row>

<row id="conf-purge-old-logs">
<entry
>purge-old-logs</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Hiermee stelt u in of oude log mappen automatisch worden verwijderd. De standaardwaarde is <replaceable
>true</replaceable
>.</para>
</entry>
</row>

<row id="conf-qmake-options">
<entry
>qmake-options</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>

<entry
><para
>Alle hier gespecificeerde opties worden doorgegeven aan het commando <command
>qmake</command
>, bij modules die het <symbol
>qmake</symbol
> bouwsysteem gebruiken. Bijvoorbeeld, u kunt de optie <userinput
>PREFIX=/path/to/qt</userinput
> gebruiken om bij qmake te overschrijven waar het de module installeert. </para>
<para
>Deze optie is toegevoegd in &kdesrc-build; 1.16.</para>
</entry>
</row>

<row id="conf-qtdir">
<entry
>qtdir</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Gebruik deze optie om de omgevingsvariabele <envar
>QTDIR</envar
> in te stellen voor bij het bouwen. Als u deze optie niet instelt, dan zal &kdesrc-build; aannemen dat &Qt; wordt geleverd door het besturingssysteem. </entry>
</row>

<row id="conf-remove-after-install">
<entry
>remove-after-install</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Als u weinig harde schijfruimte heeft, dan wilt u wellicht deze optie gebruiken om automatisch de bouwmap te verwijderen (of zowel de broncode-map als de bouwmap bij eenmalige installaties) nadat de module succesvol is geïnstalleerd. </para>
<para
>Mogelijke waarden voor deze optie zijn: <itemizedlist>
<listitem
><para
>none - Verwijder niets (Dit is de standaard).</para
></listitem>
<listitem
><para
>builddir - verwijder de bouwmap, maar niet de broncode.</para
></listitem>
<listitem
><para
>all - verwijder zowel de broncode en de bouwmap.</para
></listitem>
</itemizedlist>
</para>

<para
>Merk op dat het gebruik van deze optie een ongunstige impact kan hebben op zowel het gebruik van uw bandbreedte (als u <replaceable
>all</replaceable
> gebruikt) en op de tijd die nodig is voor het compileren van &kde; software, omdat &kdesrc-build; geen incrementele bouw kan uitvoeren.</para>
</entry>
</row>

<row id="conf-repository">
<entry
>repository</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Deze optie was geïntroduceerd bij versie 1.10, en kunt u gebruiken om de &git; repository te specificeren waar u de broncode voor de module kunt downloaden. &Qt; (en dus ook qt) heeft de informatie uit deze optie nodig, net zoals verschillende &kde; modules die in het proces van conversie naar het gebruik van &git; zitten.</para
></entry>
</row>

<row id="conf-revision">
<entry
>revision</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Als deze optie een andere waarde heeft dan 0 (nul),dan zal &kdesrc-build; de update van de broncode forceren met exact de opgegeven revisie, zelfs als opties zoals <link linkend="conf-branch"
>branch</link
> zijn ingesteld. als de module al de opgegeven revisie heeft dan zal het verder niet worden geupdate tenzij deze optie is gewijzigd of verwijderd uit de configuratie.</para>

<note
><para
>Deze optie werkte niet bij git-gebaseerde modules (inclusief <link linkend="kde-projects-module-sets"
>kde-projects</link
> modules) tot &kdesrc-build; versie 1.16.</para
></note>

</entry>
</row>

<row id="conf-run-tests">
<entry
>run-tests</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global (build system optie)</entry>
<entry
>indien ingesteld op <userinput
>true</userinput
>, dan zal de module worden gebouwd met ondersteuning voor gebruik van zijn test suite, en zal de test suite worden uitgevoerd als onderdeel van het bouwproces. &kdesrc-build; zal een eenvoudig rapport met de testresultaten tonen. Dit is handig voor ontwikkelaars en diegene die zeker willen zijn dat hun systeem correct is opgezet.</entry>
</row>

<row id="conf-set-env">
<entry
>set-env</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Deze optie accepteert een door spaties gescheiden lijst met waarden, waar de eerste waarde de in te stellen omgevingsvariabele is, en de overige waarden is waarnaar toe u de variabele in wilt stellen. Bijvoorbeeld, om de variabele <envar
>RONALD</envar
> naar McDonald in te stellen, moet u in het betreffende sectie het volgende commando zetten:</para>
<screen
><command
>set-env</command
> <envar
>RONALD</envar
> <userinput
>McDonald</userinput
></screen>
<para
>Deze optie is speciaal omdat u het kan herhalen zonder dat u eerder in dezelfde sectie van het <link linkend="configure-data"
>configuratiebestand</link
> ingestelde set-env instellingen overschrijft. Op deze manier kunt u meerdere omgevingsvariabelen per module (of globaal) instellen.</para>
</entry>
</row>

<row id="conf-source-dir">
<entry
>source-dir</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Deze gebruikt u om de map op uw computer in te stellen waar de &kde;-broncode uit &subversion; wordt opgeslagen. Als u deze waarde niet instelt, dan wordt de standaardinstelling <filename class="directory"
>~/kdesrc</filename
> gebruikt. U mag bij deze optie de tilde (~) die de persoonlijke map voorstelt gebruiken. </entry>
</row>

<row id="conf-ssh-identity-file">
<entry
>ssh-identity-file</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry>
<para
>Stel bij deze optie in welke private SSH key bestand wordt doorgegeven aan het commando <command
>ssh-add</command
> als &kdesrc-build; broncode gaat downloaden van repositories die authentificatie vereisen. zie ook: <xref linkend="ssh-agent-reminder"/>.</para>

<para
>Deze optie is toegevoegd in versie 1.14.2.</para>
</entry>
</row>

<row id="conf-stop-on-failure">
<entry
>stop-on-failure</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Stel de waarde van deze optie in op <userinput
>true</userinput
> om te zorgen dat de uitvoering van het script stopt als er een fout optreed tijdens het bouwproces of het installatieproces. Deze optie staat standaard op uit. </entry>
</row>

<row id="conf-svn-server">
<entry
>svn-server</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Deze optie gebruikt u om de server in te stellen die u gebruikt om van &subversion; uit te checken. De standaardinstelling is de anonieme &subversion; repository, <filename
>svn://anonsvn.kde.org/</filename
></para>
<note
><para
>Als u programmeert voor KDE, gebruik dan de &subversion; repository die aan u is toegewezen toen u uw developer account ontving, in plaats van de anonieme repository.</para
></note>
</entry>
</row>

<row id="conf-tag">
<entry
>tag</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
><para
>Gebruik deze optie om een specifieke release van een module te downloaden.</para>
<para
><emphasis
>Opmerking:</emphasis
> De kans is groot dat u deze optie <emphasis
>niet wilt </emphasis
> gebruiken. &kde; releases zijn in tarball vorm vanaf de <ulink url="https://download.kde.org/"
>&kde; download site</ulink
> beschikbaar.</para>

<note
><para
>Deze optie is alleen ondersteund voor op git gebaseerde modulen sinds &kdesrc-build; 1.16.</para
></note>
</entry>
</row>

<row id="conf-use-clean-install">
<entry
>use-clean-install</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global (build system optie)</entry>
<entry
><para
>Stel de waarde van deze optie in op <userinput
>true</userinput
> om te zorgen dat &kdesrc-build; het commando <command
>make uninstall</command
> uitvoert direct voordat het <command
>make install</command
> uitvoert.</para>

<para
>Dit kan handig zijn om te zorgen dat er geen vergeten oude library-bestanden, &cmake; metadata, enz. meer zijn die problemen kunnen veroorzaken in lang-levende &kde; installaties. Maar dit werkt alleen bij bouwsystemen waar ook <command
>make uninstall</command
> is.</para>

<para
>Deze optie is toegevoegd in &kdesrc-build; 1.12, maar bleef ongedocumenteerd tot &kdesrc-build; 1.16.</para>
</entry>
</row>

<row>
<entry
>use-cmake</entry>
<entry
></entry>
<entry
>Deze optie is verwijderd in &kdesrc-build; 1.4 omdat alle &kde; 4 modulen &cmake; vereisen en het gebruik van &cmake; niet niet is toegestaan bij alle andere modules. </entry>
</row>

<row id="conf-use-idle-io-priority">
<entry
>use-idle-io-priority</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
>Deze optie, toegevoegd in &kdesrc-build; 1.12, zal een lagere prioriteit geven aan schijf en andere I/O gebruik, wat de responsiviteit van de rest van het systeem significant kan verbeteren ten koste van een beetje tragere uitvoering van &kdesrc-build;. Standaard is dit uitgeschakeld, voor een lagere prioriteit van de harde schijf stelt u dit in op <userinput
>true</userinput
>. </entry>
</row>

<row id="conf-use-inactive-modules">
<entry
>use-inactive-modules</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry
>Deze optie indien ingeschakeld staat kdesrc-build toe om ook uit opslagruimten die als inactief zijn gemarkeerd te klonen en op te halen. De standaard is om uitgeschakeld te zijn, om inactieve modulen dit op <userinput
>true</userinput
> te kunnen instellen. </entry>
</row>

<row id="conf-use-modules">
<entry
>use-modules</entry>
<entry
>Is alleen te gebruiken in <link linkend="module-sets"
>module-set</link
></entry>
<entry
><para
>Met deze optie, toegevoegd in &kdesrc-build; 1.12.1, kunt u makkelijk meerdere te bouwen modules op een punt in <link linkend="kdesrc-buildrc"
>het configuratiebestand</link
> specificeren.</para>

<para
>Deze optie <emphasis
>moet</emphasis
> u gebruiken in een <literal
>module-set</literal
>. Elke via deze optie opgegeven identifier, is intern geconverteerd naar een &kdesrc-build; module, wordt met de <link linkend="conf-repository"
><option
>repository</option
></link
> optie van de module-set's repository gecombineerd met de identifier-naam om de uiteindelijke repository te krijgen waarvan gedownload wordt. Alle andere opties opgegeven in de module-set worden ongewijzigd naar de gegenereerde modules doorgegeven.</para>

<para
>De volgorde waarin die modules in deze optie zijn gedefinieerd is belangrijk, omdat dat ook de volgorde is waarmee &kdesrc-build; de gegenereerde modules zal behandelen bij het updaten, bouwen en installeren. Alle modules gedefinieerd in de opgegevenmodule-set zullen worden verwerkt voordat &kdesrc-build; naar de volgende module gaat na deze module-set.</para>

<para
>Als u de opties voor een gegenereerde module moet wijzigen, declareer dan de module gewoon opnieuw nadat het is gedefinieerd in de module-set, en stel uw opties in zoals gewenst. Al hoe wel u op deze manier de opties voor de module wijzigt, zal de module gewoon in de module-set in de ingestelde volgorde worden geupdate en gebouwd (d.w.z. u kunt de bouwvolgorde niet op deze manier wijzigen).</para>

<important
><para
>De te gebruiken naam voor de module als u dit deze methode gebruikt is eenvoudig de naam die u bij <option
>use-modules</option
> heeft opgegeven, met die verstande dat elke <literal
>.git</literal
> wordt verwijderd.</para
></important>

<para
>Zie <xref linkend="module-sets"/> en <link linkend="conf-git-repository-base"
>git-repository-base</link
> voor een beschrijving van het gebruik daarvan en een voorbeeld.</para>
</entry>
</row>

<row id="conf-use-qt-builddir-hack">
<entry
>use-qt-builddir-hack</entry>
<entry
>Instelling bij Module overschrijft de instelling bij global</entry>
<entry
>Deze optie is verwijderd vanwege verbeteringen in het &Qt; bouwsysteem. </entry>
</row>

<row id="conf-use-stable-kde">
<entry
>use-stable-kde</entry>
<entry
>Is niet overschrijfbaar</entry>
<entry>
<para
>Deze optie is verouderd en zal (opnieuw) verwijderd worden in een volgende release.</para>

<para
>Gebruik in plaats daarvan de <option
><link linkend="conf-branch-group"
>branch-group</link
></option
>, wat meer mogelijkheden voor selectie bied.</para>
</entry>
</row>

</tbody>

</tgroup>
</table>

</sect1>
</chapter>

<chapter id="cmdline">
<title
>Opdrachtregel-opties en omgevingsvariabelen (Environment Variables)</title>

<sect1 id="cmdline-usage">
<title
>Gebruik van de commandoregel</title>

<para
>&kdesrc-build; is ontworpen om als volgt te worden gebruikt:</para>

<cmdsynopsis
><command
>kdesrc-build</command
> <arg rep="repeat"
><replaceable
>--opties</replaceable
></arg
> <arg rep="repeat"
><replaceable
>te bouwen modules</replaceable
></arg
> </cmdsynopsis>

<para
>Als u op de commandoregel geen modules specificeert, dan zal kdesrc-build alle in de het configuratiebestand gedefinieerde modules bouwen, in de in dat bestand opgegeven volgorde (maar dit kan via verschillende bestand-opties gewijzigd worden).</para>

<sect2 id="cmdline-usage-options">
<title
>Veel gebruikte opdrachtregel-opties</title>

<para
>De complete lijst met opties voor op de commandoregel vindt u in <xref linkend="supported-cmdline-params"/>. De meest gebruikte opties zijn:</para>

<variablelist>
  <varlistentry>
    <term
><option
>--pretend</option
> (of <option
>-p</option
>)</term>
    <listitem
><para
>Deze optie zorgt er voor dat &kdesrc-build; aangeeft welke acties het zou uitvoeren, zonder dat het ze daadwerkelijk uitvoert. Dit kan handig zijn om vast te stellen dat de modules die u denkt te gaan bouwen, ook daadwerkelijk zullen worden gebouwd.</para
></listitem>
  </varlistentry>

  <varlistentry>
    <term
><option
>--refresh-build</option
></term>
    <listitem
><para
>Deze optie forceert dat &kdesrc-build; de opgegeven modules van een absoluut vers startpunt bouwt. Elke bestaande bouwmap voor die module wordt verwijderd en opnieuw gebouwt. Deze optie is handig als er fouten optreden bij het bouwen van een module, en is soms nodig als &Qt; of &kde; libraries wijzigen.</para
></listitem>
  </varlistentry>

  <varlistentry>
    <term
><option
>--no-src</option
></term>
    <listitem
><para
>Deze optie slaat het bijwerk-proces over. U kan dit gebruiken als u zeer recent de broncode heeft bijgewerkt (misschien deed u dit handmatig of gebruikte u recent &kdesrc-build;) maar u wilt toch sommige modules herbouwen.</para
></listitem>
  </varlistentry>

  <varlistentry>
    <term
><option
>--no-build</option
></term>
    <listitem
><para
>Deze optie is vergelijkbaar met <option
>--no-src</option
> hierboven, maar deze keer wordt het bouwproces overgeslagen.</para
></listitem>
  </varlistentry>
</variablelist>

</sect2>

<sect2 id="cmdline-usage-modules">
<title
>Specificatie van te bouwen modules</title>

<para
>In het algemeen is het specificeren van de te bouwen modules eenvoudig het opgeven van hun modulenaam zoals u het heeft gedefinieerd in het configuratiebestand. U kunt ook modules opgegeven die onderdeel zijn van een module set, zowel benoemd in <link linkend="conf-use-modules"
>use-modules</link
>, als de naam van de hele module set zelf, als u deze een naam heeft gegeven.</para>

<para
>In het specifieke geval van module sets gebaseerd op de <link linkend="kde-projects-module-sets"
>KDE project database</link
>, zal &kdesrc-build; de module-naam van van componenten uitbreiden om te bepalen welke module u precies wilt hebben. Bijvoorbeeld, &kdesrc-build;'s KDE project entry bepaalt de locatie van het onderdeel in <literal
>extragear/utils/kdesrc-build</literal
>. U kunt elk van de volgende manieren van specificeren gebruiken om &kdesrc-build; te laten bouwen:</para>

<informalexample>
<screen
><prompt
>&percnt;</prompt
> <command
>kdesrc-build</command
> <option
><replaceable
>+extragear/utils/kdesrc-build</replaceable
></option>
<prompt
>&percnt;</prompt
> <command
>kdesrc-build</command
> <option
><replaceable
>+utils/kdesrc-build</replaceable
></option>
<prompt
>&percnt;</prompt
> <command
>kdesrc-build</command
> <option
><replaceable
>+kdesrc-build</replaceable
></option
>
</screen>
</informalexample>

<note
><para
>De in het voorgaande voorbeeld gebruikte commando's gaan de module-naam vooraf, gescheiden door een <symbol
>+</symbol
>. Dit forceert dat de module-naam wordt geïnterpreteerd als een module uitde KDE project database, zelfs als die module niet in uw configuratiebestand is gedefinieerd. </para
></note>

<para
>Wees voorzichtig met het specificeren van zeer algemene onderdelen (bijv. <literal
>extragear/utils</literal
> zelf), omdat dit er toe kan leiden dat een groot aantal modules wordt gebouwd. U zou de optie <option
>--pretend</option
> kunnen gebruiken voordat u een nieuwe module set gaat bouwen om er zeker van te zijn dat het alleen de gewenste modules gaat bouwen.</para>

</sect2>
</sect1>

<sect1 id="supported-envvars">
<title
>Ondersteunde omgevingsvariabelen</title>

<para
>&kdesrc-build; gebruikt geen omgevingsvariabelen. Als het nodig is dat u omgevingsvariabelen instelt voor het bouwproces of het installatieproces, lees dan eerst over de optie <link linkend="conf-set-env"
>set-env</link
>. </para>

</sect1>

<sect1 id="supported-cmdline-params">
<title
>Ondersteunde commandoregelparameters</title>

<para
>Het script accepteert de volgende commandoregelopties: </para>

<variablelist>

<varlistentry id="cmdline-async">
<term
><parameter
>--async</parameter
></term>
<listitem
><para
>Schakelt de <link linkend="conf-async"
>asynchronous modus</link
> in, zodat de update van de broncode en het bouwproces van modules tegelijk kan gebeuren. Dit is de standaardinstelling, u hoeft deze optie alleen op te geven als u het in het configuratiebestand heeft uitgeschakeld. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-help">
<term
><parameter
>--help</parameter
></term>
<listitem
><para
>Toont voor dit script alleen een eenvoudige hulp. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-version">
<term
><parameter
>--version</parameter
> (of <parameter
>-v</parameter
>)</term>
<listitem
><para
>Toont de programma-versie. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-show-info">
<term
><parameter
>--show-info</parameter
></term>
<listitem
><para
>Toont informatie over &kdesrc-build; en het besturingssysteem wat nuttig kan zijn in bugrapporten of bij vragen om hulp in forums of op e-maillijsten. </para>
<para
>Beschikbare sinds versie 18.11.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-initial-setup">
<term
><parameter
>--initial-setup</parameter
></term>
<listitem
><para
>Laat &kdesrc-build; de eenmalige initiële instelling doen nodig om het systeem voor te bereiden om &kdesrc-build; te laten werken en om de nieuw geïnstalleerde &kde; software uit te voeren. </para>
<para
>Dit omvat:</para>
<itemizedlist>
<listitem
><para
>Bekende afhankelijkheden worden geïnstalleerd (op ondersteunde &Linux; distributies)</para
></listitem>
<listitem
><para
>Vereiste omgevingsvariabelen worden aan <literal
>~/.bashrc</literal
> toegevoegd</para
></listitem>
<listitem
><para
>Het <link linkend="setup-rcfile"
>configuratiebestand</link
> instellen.</para
></listitem>
</itemizedlist>

<para
>Beschikbare sinds versie 18.11.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-author">
<term
><parameter
>--author</parameter
></term>
<listitem
><para
>Toont contactinformatie van de auteur. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-color">
<term
><parameter
>--color</parameter
></term>
<listitem
><para
>Kleurrijke uitvoer inschakelen (dit is de standaard voor interactieve terminals). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-nice">
<term
><parameter
>--nice=<replaceable
>waarde</replaceable
></parameter
></term>
<listitem
><para
>Deze waarde wijzigt de prioriteit voor de computer CPU zoals verlangt door &kdesrc-build;, en zou in de range van 0-20 moeten liggen. 0 is de hoogste prioriteit (omdat dat het minste <quote
>nice</quote
> is), 20 is de laagste prioriteit. De standaardinstelling van &kdesrc-build; is 10. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-async">
<term
><parameter
>--no-async</parameter
></term>
<listitem
><para
>Schakelt de <link linkend="conf-async"
>asynchronous modus</link
> van de update uit. In plaats daarvan zal de update in zijn geheel worden uitgevoerd voordat de bouw start. Deze optie vertraagt het gehele proces, maar als u last heeft van IPC fouten tijdens het gebruik van &kdesrc-build;, probeer dan het gebruik van deze optie, en dien een <ulink url="https://bugs.kde.org/"
>bug rapport</ulink
> in. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-color">
<term
><parameter
>--no-color</parameter
></term>
<listitem
><para
>Schakelt "gekleurde uitvoer" uit. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-pretend">
<term
><parameter
>--pretend</parameter
> (of <parameter
>-p</parameter
>)</term>
<listitem
><para
>&kdesrc-build; zal door het update en bouwproces gaan, maar in plaats van enige actie voor het updaten en bouwen daadwerkelijk uit te voeren, zal het de uitvoer tonen van wat het script zou hebben gedaan (b.v. welke commando's uit te voeren, welke algemene stappen zijn genomen, enz.).</para>

<note
><para
>Eenvoudige alleen-lezen commando's (zoals het lezen van bestandsinformatie) worden nog steeds uitgevoerd om de uitvoer meer relevant te maken (zoals het correct simuleren of broncode uitgecheckt of upgedate kan worden). </para
></note>

<important
><para
>Voor deze optie is het nodig dat sommige benodigde metadata beschikbaar is, wat normaal gesproken automatisch gedownload is,maar downloads zijn in de pretend modus uitgeschakeld. Als u nog nooit &kdesrc-build; eerder heeft gebruikt (en daarom deze metadata niet heeft), dan moet u eerst <command
>kdesrc-build <option
>--metadata-only</option
></command
> opstarten om eerst de benodigde metadata te downloaden. </para
></important>
</listitem>
</varlistentry>

<varlistentry id="cmdline-quiet">
<term
><parameter
>--quiet</parameter
> (of <parameter
>-q</parameter
>)</term>
<listitem
><para
>Wees niet zo luidruchtig met de uitvoer. Met dit ingeschakeld zal alleen het minimum in de uitvoer te zien zijn. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-really-quiet">
<term
><parameter
>--really-quiet</parameter
></term>
<listitem
><para
>Alleen waarschuwingen/fouten worden getoond. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-verbose">
<term
><parameter
>--verbose</parameter
></term>
<listitem
><para
>Beschrijft uitgebreid wat er gebeurt, en wat &kdesrc-build; aan het doen is. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-src-only">
<term
><parameter
>--src-only</parameter
> (of <parameter
>--svn-only</parameter
>)</term>
<listitem
><para
>Voert alleen de update van de broncode uit. (De <parameter
>--svn-only</parameter
> parameter is alleen ondersteund vanwege compatibiliteit met oudere versies van het script). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-build-only">
<term
><parameter
>--build-only</parameter
></term>
<listitem
><para
>Voert alleen het bouwproces uit. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-install-only">
<term
><parameter
>--install-only</parameter
></term>
<listitem
><para
>Voert alleen het installatieproces uit. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-metadata-only">
<term
><parameter
>--metadata-only</parameter
></term>
<listitem
><para
>Voert alleen het metadata downloadproces uit. &kdesrc-build; doet dit normaal automatisch, maar u wilt dit wellicht handmatig doen zodat de commandoregelparameter <option
><link linkend="cmdline-pretend"
>--pretend</link
></option
> kan werken. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-rebuild-failures">
<term
><parameter
>--rebuild-failures</parameter
></term>
<listitem
><para
>Gebruik deze optie om alleen die modules te bouwen die eerder mislukt zijn bij uitvoeren van &kdesrc-build;. Dit is handig als een belangrijk aantal mislukkingen optraden gemend met succesvol bouwen. Na het repareren van de oorzaken van de mislukkingen kunt u dan gemakkelijk alleen de modulen bouwen die eerder mislukten.</para>

<note
><para
>Merk op dat de lijst met <quote
>eerder mislukte modules</quote
> wordt gereset elke keer dat het uitvoeren van &kdesrc-build; eindigt met enige mislukkingen. Het wordt niet gereset door een volledig succesvol bouwen, u kunt dus met succes een paar modules bouwen en dan zal deze vlag nog steeds werken.</para
></note>

<para
>Deze optie is toegevoegd in &kdesrc-build; 15.09.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-include-dependencies">
<term
><parameter
>--include-dependencies</parameter
></term>
<term
><parameter
>--no-include-dependencies</parameter
></term>
<listitem
><para
>Deze optie veroorzaakt dat &kdesrc-build; automatisch andere &kde; en &Qt; modulen invoegt in het bouwen, indien vereist voor de modulen die u hebt gevaagd om te bouwen op de opdrachtregel of in uw <link linkend="configure-data"
>configuratiebestand</link
>.</para>

<para
>De modulen die zijn toegevoegd zijn zoals opgenomen in de broncode van het &kde; beheersysteem. Zie <xref linkend="kde-projects-module-sets"/>.</para>

<para
>Het corresponderende configuratiebestandsoptie is <link linkend="conf-include-dependencies"
>include-dependencies</link
>.</para>

<para
>U kunt ook <parameter
>--no-include-dependencies</parameter
> gebruiken, die automatisch invoegen van extra afhankelijkheidsmodulen uitsluitent.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-ignore-modules">
<term
><parameter
>--ignore-modules</parameter
></term>
<listitem
><para
>Neem niet de modulen mee die in de rest van de commandoregel worden doorgegeven in het bijwerken/bouwprocess (dit is handig als u de meeste modulen in uw <link linkend="configure-data"
>configuratiebestand</link
> wilt bouwen en alleen een paar overslaan). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-src">
<term
><parameter
>--no-src</parameter
> (of <parameter
>--no-svn</parameter
>)</term>
<listitem
><para
>Slaat het contact maken met de &subversion; server over. (De <parameter
>--no-svn</parameter
> parameter is alleen ondersteund vanwege compatibiliteit met oudere versies van het script). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-build">
<term
><parameter
>--no-build</parameter
></term>
<listitem
><para
>Het bouwproces overslaan. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-metadata">
<term
><parameter
>--no-metadata</parameter
></term>
<listitem
><para
>Download niet automatisch de voor &kde; git modules benodigde extra metadata. De updates van de broncode voor de modules zelf zal nog gewoon gebeuren tenzij u ook <link linkend="cmdline-no-src"
>--no-src</link
> opgeeft. </para
><para
>Dit kan handig zijn als u frequent &kdesrc-build; herhaalt omdat de metadata niet vaak wijzigt. Maar merk op dat het voor veel andere functionaliteiten nodig is dat de metadata beschikbaar is. U kunt overwegen om eenmalig &kdesrc-build; met de optie <link linkend="cmdline-metadata-only"
>--metadata-only</link
> te gebruiken en daarna deze optie voor de daaropvolgende runs te gebruiken. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-install">
<term
><parameter
>--no-install</parameter
></term>
<listitem
><para
>Installeert niet automatisch pakketten nadat ze zijn gebouwd. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-build-when-unchanged">
<term
><parameter
>--no-build-when-unchanged</parameter
></term>
<term
><parameter
>--force-build</parameter
></term>
<listitem
><para
>Deze optie schakelt expliciet het overslaan van het bouwproces uit (een optimalisatie gecontroleerd door de optie <link linkend="conf-build-when-unchanged"
>build-when-unchanged</link
>). Dit is handig om te zorgen dat &kdesrc-build; het bouwproces uitvoert als u iets heeft gewijzigd dat &kdesrc-build; niet kan controleren.</para>

<para
><parameter
>--force-build</parameter
> heeft dezelfde functie, en is misschien makkelijker te onthouden.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-debug">
<term
><parameter
>--debug</parameter
></term>
<listitem
><para
>Schakelt de debug modus van het script in. Op dit moment houd dat in dat alle uitvoer naast dat het zoals normaal naar de log-map gaat ook naar de gewone uitvoer gaat. Daarnaast geven veel functies in de debug modus meer commentaar over wat ze aan het doen zijn. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-query">
<term
><parameter
>--query</parameter
>=<userinput
><replaceable
>modus</replaceable
></userinput
></term>
<listitem
><para
>Dit commando veroorzaakt dat &kdesrc-build; een parameter opvraagt van de modules in de bouwlijst (ofwel doorgegeven op de commandoregel of gelezen uit het configuratiebestand), waarna het resultaat op het scherm wordt getoond (één module per regel).</para>

<para
>Deze optie moet geleverd worden met een <quote
>query-modus</quote
>, die één van de volgende zou moeten zijn:</para>
    <itemizedlist>
    <listitem
><para
><option
>source-dir</option
>, die zorgt dat &kdesrc-build; het volledige pad opgeeft waar de broncode van de module is opgeslagen. </para
></listitem>
    <listitem
><para
><option
>build-dir</option
>, die zorgt dat &kdesrc-build; het volledige pad opgeeft waar het bouwproces van de broncode van de module gebeurt. </para
></listitem>
    <listitem
><para
><option
>install-dir</option
>, die zorgt dat &kdesrc-build; het volledige pad opgeeft waar de module zal worden geïnstalleerd. </para
></listitem>
    <listitem
><para
><option
>project-path</option
>, die zorgt dat &kdesrc-build; de locatie van de module in de hierarchy van KDE broncoderepositories opgeeft. Zie <xref linkend="kde-projects-module-sets"/> voor meer informatie over de hiërarchie. </para
></listitem>
    <listitem
><para
><option
>branch</option
>, die zorgt dat &kdesrc-build; de opgeloste git-branch opgeeft die voor elke module zal worden gebruikt, gebaseerd op de effectieve instellingen van <option
>tag</option
>, <option
>branch</option
> en <option
>branch-group</option
>. </para
></listitem>
    <listitem
><para
>Anders kunnen optie-namen gebruikt worden die geldig zijn voor modulen in het <link linkend="conf-options-table"
>configuratiebestand</link
>, de opgeloste waarde daarvan zal voor elke module worden getoond. </para
></listitem>
    </itemizedlist>

<para
>Als een enkele module wordt doorgegeven op de opdrachtregel, dan is de uitvoer gewoon de waarde van de parameter die wordt afgevraagd. Als meerdere (of geen) modulen worden doorgegeven op de opdrachtregel, dan wordt elke regel voorafgegaan door de naam van de module. In alle gevallen zal &kdesrc-build; stoppen met de uitvoering wanneer elke waarde is uitgevoerd. </para>

<para
>Deze optie is toegevoegd in &kdesrc-build; 16.05.</para>

<informalexample>
<para
>Bijvoorbeeld, het commanddo <quote
><command
>kdesrc-build</command
> <parameter
>--query</parameter
> <parameter
><replaceable
>branch</replaceable
></parameter
> <parameter
><replaceable
>kactivities</replaceable
></parameter
> <parameter
><replaceable
>kdepim</replaceable
></parameter
></quote
> zou kunnen eindigen met meldingen zoals:</para>
<screen
>kactivities: master
kdepim: master
</screen>
</informalexample>
</listitem>
</varlistentry>

<varlistentry id="cmdline-no-rebuild-on-fail">
<term
><parameter
>--no-rebuild-on-fail</parameter
></term>
<listitem
><para
>Probeert niet meer modules te herbouwen nadat het de eerste keer is mislukt om ze te bouwen. &kdesrc-build; zal dit nooit proberen bij een module waarbij het al de eerste keer is geprobeerd om te bouwen. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-refresh-build">
<term
><parameter
>--refresh-build</parameter
></term>
<listitem
><para
>Maakt het bouwsysteem en make opnieuw vanaf het begin aan. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-reconfigure">
<term
><parameter
>--reconfigure</parameter
></term>
<listitem
><para
>Start <command
>cmake</command
> (voor &kde; modules) of <command
>configure</command
> (voor &Qt;) opnieuw, zonder de bouwmap op te ruimen. U zou normaal gesproken dit niet hoeven te specificeren, omdat &kdesrc-build; het zal detecteren als u relevante optiewaarden heeft gewijzigd en automatisch de build setup opnieuw zal uitvoeren. Deze optie is wordt uitgevoerd als u <parameter
><link linkend="cmdline-refresh-build"
>--refresh-build</link
></parameter
> gebruikt. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-resume-from">
<term
><parameter
>--resume-from</parameter
></term>
<listitem
><para
>Deze optie gebruikt u om de bouw te hervatten vanaf de opgegeven module, wat de volgende optie op de commandoregel zou zijn. Specificeer geen andere modulenamen op de commandoregel. </para>

<note
><para
>Deze optie voegde vroeger <link linkend="cmdline-no-src"
><parameter
>--no-src</parameter
></link
> toe, maar doet dit niet meer (vanaf &kdesrc-build; 1.13). Als u het updaten van broncode wilt vermijden bij het verdergaan, voeg dan naast de andere opties gewoon<option
><userinput
>--no-src</userinput
></option
> toe. </para
></note>

<para
>Zie ook: <xref linkend="cmdline-resume-after"/> en <xref linkend="resuming-failed"/>. U geeft waarschijnlijk de voorkeur aan deze commandoregelparameter als u het probleem met het bouwen heeft opgelost en wilt dat &kdesrc-build; verder gaat met het bouwen.</para
></listitem>
</varlistentry>

<varlistentry id="cmdline-resume-after">
<term
><parameter
>--resume-after</parameter
></term>
<listitem
><para
>Deze optie gebruikt u om de bouw te hervatten na de opgegeven module, wat de volgende optie op de commandoregel zou zijn. Specificeer geen andere modulenamen op de commandoregel. </para>

<note
><para
>Deze optie voegde vroeger <link linkend="cmdline-no-src"
><parameter
>--no-src</parameter
></link
> toe, maar doet dit niet meer (vanaf &kdesrc-build; 1.13). Als u het updaten van broncode wilt vermijden bij het verdergaan, voeg dan naast de andere opties gewoon<option
><userinput
>--no-src</userinput
></option
> toe. </para
></note>

<para
>Zie ook: <xref linkend="cmdline-resume-after"/> en <xref linkend="resuming-failed"/>. U geeft waarschijnlijk de voorkeur aan deze commandoregeloptie als u het probleem met het bouwen heeft opgelost en de module zelf heeft gebouwd en geïnstalleerd, en wilt dat &kdesrc-build; verder gaat met het bouwen van de volgende module.</para
></listitem>
</varlistentry>

<varlistentry id="cmdline-resume">
<term
><parameter
>--resume</parameter
></term>
<listitem
><para
>Deze optie kan gebruikt worden om &kdesrc-build; uit te voeren nadat het bouwen is mislukt. </para
><para
>Het hervat het bouwen vanaf de module die is mislukt, met gebruik van de lijst van modules die eerder wachten om te worden gebouwd en schakelt eveneens het bijwerken van broncode en metagegevens uit. Dit is te gebruiken wanneer een eenvoudige vergissing of ontbrekende afhankelijkheid het bouwen laat mislukken. Nadat u de fout hebt gerepareerd kunt u snel terug gaan naar het bouwen van de modules die u eerder aan het bouwen was, zonder te rommelen met <option
><link linkend="cmdline-resume-from"
>--resume-from</link
></option
> en <option
><link linkend="cmdline-stop-before"
>--stop-before</link
></option
>. </para
><para
>Dit is zelfs nog handiger als u het combineert met commandoregelparameter <option
><link linkend="cmdline-stop-on-failure"
>--stop-on-failure</link
></option
>, met name als u initieel uw ontwikkelomgeving opzet. </para
><para
>Deze optie is toegevoegd in &kdesrc-build; 1.16. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-stop-before">
<term
><parameter
>--stop-before</parameter
></term>
<listitem
><para
>Deze commandoregeloptie gebruikt u om het bouwproces te stoppen net <emphasis
>voor</emphasis
> een module normaal gesproken zou worden gebouwd. </para
><para
>Bijvoorbeeld, als het normale bouwproces is <simplelist type="inline"
> <member
>moduleA</member
><member
>moduleB</member
><member
>moduleC</member
></simplelist
>, dan zal <option
>--stop-before=<replaceable
>moduleB</replaceable
></option
> veroorzaken dat &kdesrc-build; alleen <literal
>moduleA</literal
> zal bouwen. </para
><para
>Deze optie voor de opdrachtregel is toegevoegd in &kdesrc-build; 1.16. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-stop-after">
<term
><parameter
>--stop-after</parameter
></term>
<listitem
><para
>Deze commandoregeloptie gebruikt u om het bouwproces te stoppen net <emphasis
>na</emphasis
> een module normaal gesproken zou worden gebouwd. </para
><para
>Bijvoorbeeld, als het normale bouwproces is <simplelist type="inline"
> <member
>moduleA</member
><member
>moduleB</member
><member
>moduleC</member
></simplelist
>, dan zal <option
>--stop-after=<replaceable
>moduleB</replaceable
></option
> veroorzaken dat &kdesrc-build; zowel <literal
>moduleA</literal
> en <literal
>moduleB</literal
> zal bouwen. </para
><para
>Deze optie voor de opdrachtregel is toegevoegd in &kdesrc-build; 1.16. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-stop-on-failure">
<term
><parameter
>--stop-on-failure</parameter
></term>
<listitem
><para
>Deze optie zorgt er voor dat het bouwen wordt afgebroken zodra er iets mislukt. Nuttig wanneer u initieel uw ontwikkelomgeving aan het instellen bent. Zonder deze vlag zal &kdesrc-build; proberen door te gaan met de rest van de modules in het bouwen om tijdverspilling te voorkomen in het geval er een probleem is met een enkele module. </para
><para
>Deze optie is toegevoegd in &kdesrc-build; 1.16. Zie ook de optie <link linkend="conf-stop-on-failure"
>stop-on-failure</link
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-rc-file">
<term
><parameter
>--rc-file</parameter
></term>
<listitem
><para
>Dit interpreteert de volgende commandoregelparameter als het bestand waarvan de configuratiegegevens moeten worden ingelezen. De standaardwaarde voor deze parameter is <filename
>kdesrc-buildrc</filename
> (deze wordt in de huidige werkmap gezocht). Als dit bestand niet bestaat, zal <filename
>~/.config/kdesrc-buildrc</filename
> (<filename
>$XDG_CONFIG_HOME/kdesrc-buildrc</filename
>, als <envar
>$XDG_CONFIG_HOME</envar
> is ingesteld) in plaats daarvan worden gebruikt. Zie ook <xref linkend="kdesrc-buildrc"/>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-print-modules">
<term
><parameter
>--print-modules</parameter
></term>
<listitem>
<para
>Neemt alle acties tot en met opnieuw ordenen van moduleafhankelijkheid gespecificeerd op de opdrachtregel (of configuratiebestand), toont één per regel de modules die verwerkt zouden worden en eindigt dan zonder verdere actie. </para>
<para
>De metagegevens van <literal
>kde-project</literal
> wordt eerst gedownload (maar, zie <link linkend="cmdline-pretend"
><option
>--pretend</option
></link
> of <link linkend="cmdline-no-src"
><option
>--no-src</option
></link
>). </para>
<para
>De meldingen zijn niet volledig compatibel met gebruik door scripts omdat andere meldingen gegenereerd kunnen worden totdat de lijst met modules wordt getoond. </para>
<para
>Dit is vooral handig om snel te bepalen wat &kdesrc-build; begrijpt wat de afhankelijkheden van een module zijn, wat inhoud dat het alleen bruikbaar is bij modules van <link linkend="kde-projects-module-sets"
><literal
>kde-projects</literal
></link
>. Deze optie is ook te combineren met <link linkend="cmdline-resume-from"
><option
>--resume-from</option
></link
>, <link linkend="cmdline-resume-after"
><option
>--resume-after</option
></link
>, <link linkend="cmdline-stop-before"
><option
>--stop-before</option
></link
>, <link linkend="cmdline-stop-after"
><option
>--stop-after</option
></link
>. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-list-build">
<term
><parameter
>--list-build</parameter
></term>
<listitem>
<para
>Maakt een lijsts met de modules die gebouwd zouden worden, in de volgorde waarin ze gebouwd worden. Indien van toepassing, bevat de uitvoerlijst ook welke commit/branch/tag geselecteerd zou worden voor checkout. </para>
<para
>Deze optie is gelijk aan <link linkend="cmdline-print-modules"
><option
>--print-modules</option
></link
>. Voor meer gedetailleerde informatie over hoe modules in relatie staan tot elkaar, zie ook: <link linkend="cmdline-dependency-tree"
><option
>--dependency-tree</option
></link
>. </para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-dependency-tree">
<term
><parameter
>--dependency-tree</parameter
></term>
<listitem>
<para
>Drukt informatie over afhankelijkheden af over de modulen die gebouwd zouden worden in boomstructuurformaat (recursief). Getoonde informatie omvat ook waarvan specifieke commit/branch/tag afhankelijk is en of wel of niet de afhankelijkheid zou worden gebouwd. Let op: de gegenereerde uitvoer kan behoorlijk groot worden voor toepassingen met veel afhankelijkheden. </para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-run">
<term
><parameter
>--run</parameter
></term>
<listitem
><para
>Deze optie interpreteert het volgende item op de commandoregel als een uit te voeren programma, en &kdesrc-build; zal dan het inlezen van het configuratiebestand beëindigen, de omgevingsvariabelen zoals normaal bijwerken, en het opgegeven programma opstarten.</para>

<para
>Dit zal in de meeste gevallen echter geen shell met de omgevingsvariabelen van &kdesrc-build; opstarten, omdat interactieve shells tijdens de start standaard tenminste een gedeelte van de omgevingsvariabelen (zoals <envar
>PATH</envar
> en <envar
>KDEDIRS</envar
>) resetten. </para>

<tip
><para
>Als u de de omgevingsvariabelen wilt zien die door &kdesrc-build; wordt gebruikt, dan kunt het commando <command
>printenv</command
> gebruiken:</para>
<informalexample>
<screen
>$ <command
>kdesrc-build</command
> <parameter
>--run</parameter
> <parameter
>printenv</parameter>
KDE_SESSION_VERSION=4
SDL_AUDIODRIVER=alsa
LANGUAGE=
XCURSOR_THEME=Oxygen_Blue
LESS=-R -M --shift 5
QMAIL_CONTROLDIR=/var/qmail/control
... etc.
</screen>
</informalexample
></tip>
</listitem>
</varlistentry>

<varlistentry id="cmdline-prefix">
<term
><parameter
>--prefix=&lt;/path/to/kde&gt;</parameter
></term>
<listitem
><para
>Hiermee kunt u de map wijzigen waar in &kde; vanaf de commandoregel zal worden geïnstalleerd. Deze optie houd <link linkend="cmdline-reconfigure"
><parameter
>--reconfigure</parameter
></link
> in, maar het gebruik van <link linkend="cmdline-refresh-build"
><parameter
>--refresh-build</parameter
></link
> kan nodig zijn. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-revision">
<term
><parameter
>--revision</parameter
></term>
<listitem
><para
>Deze optie zorgt ervoor dat &kdesrc-build; voor elke &subversion; module een specifieke genummerde revisie uitcheckt, daarmee alle voor deze modules ingestelde <link linkend="conf-branch"
>branch</link
>, <link linkend="conf-tag"
>tag</link
>, of <link linkend="conf-revision"
>revision</link
> optie's overschrijvent.</para>

<para
>Deze optie is waarschijnlijk geen good idee, en is alleen ondersteund vanwege compatibiliteit met oudere versies van het script. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-build-system-only">
<term
><parameter
>--build-system-only</parameter
></term>
<listitem
><para
>Deze optie zorgt er voor dat &kdesrc-build; het bouwen van een module afbreekt net voordat het commando <command
>make</command
> zou worden opgestart. Dit wordt alleen ondersteund vanwege de compatibiliteit met oudere versies, Deze functionaliteit is niet behulpzaam bij het huidige &kde; build systeem. </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-install"
><term
><parameter
>--install</parameter
></term>
<listitem
><para
>Als dit de enige commandoregelparameter is, dan probeert het alle modules te installeren die voorkomen in <filename
>log/latest/build-status</filename
>. Als u commandoregelparameters specificeert na <parameter
>--install</parameter
>, dan wordt aangenomen dat dit allemaal te installeren modules zijn (zelfs als ze bij de laatste run niet succesvol gebouwd zijn). </para
></listitem>
</varlistentry>

<varlistentry id="cmdline-no-snapshots"
><term
><parameter
>--no-snapshots</parameter
></term>
<listitem
><para
>Deze optie zorgt er voor dat &kdesrc-build; altijd een normale initiële checkout van een module doet in plaats van een quick-start snapshot (alleen beschikbaar voor Git modules uit de <literal
>kde-projects</literal
> repository). Merk op dat u deze optie alleen moet gebruiken als het gebruiken van snapshots mislukt, omdat de quick-start snapshot minder belastend zijn voor de KDE broncoderepositories. </para>

<note
><para
>Module snapshots <emphasis
>zijn</emphasis
> echte checkouts. Normaal gesproken heeft u deze optie niet nodig, het is alleen een hulpmiddel voor troubleshooting.</para
></note>
</listitem>
</varlistentry>

<varlistentry id="cmdline-delete-my-patches">
<term
><parameter
>--delete-my-patches</parameter
></term>
<listitem
><para
>Deze optie zorgt er voor dat &kdesrc-build; de mappen met broncode verwijdert waarin gebruikersdata kan voorkomen, zodat de module opnieuw kan worden gedownload. Dit is normaal gesproken alleen zinnig voor &kde;-ontwikkelaars (die wellicht lokaal wijzigingen hebben die verwijderd zouden kunnen worden).</para>

<para
>Dit word op dit moment alleen gebruikt om modules uit te checken die zijn geconverteerd van &subversion; naar &git;. Normaal gesproken heeft u deze optie niet nodig, &kdesrc-build; zal vragen om opnieuw te worden gestart als dat nodig is.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-delete-my-settings">
<term
><parameter
>--delete-my-settings</parameter
></term>
<listitem
><para
>Deze optie gebruikt u om &kdesrc-build; bestaande bestanden waarin gebruikersdata kan voorkomen te laten overschrijven.</para>

<para
>Dit wordt op dit moment alleen gebruikt voor de xsession setup van de login manager. Normaal gesproken heeft u deze optie niet nodig, &kdesrc-build; zal vragen om opnieuw te worden gestart als dat nodig is.</para>
</listitem>
</varlistentry>

<varlistentry id="cmdline-global-option">
<term
><parameter
>--<replaceable
>&lt;optie-naam&gt;</replaceable
>=</parameter
></term>
<listitem
><para
>U kunt dit gebruiken om een optie in uw <link linkend="configure-data"
>configuratiebestand</link
> voor elke module te overschrijven. Bijvoorbeeld, om de optie <link linkend="conf-log-dir"
>log-dir</link
> te overschrijven, zou u kunnen doen: <userinput
><parameter
>--log-dir=<filename class="directory"
><replaceable
>/path/to/dir</replaceable
></filename
></parameter
></userinput
>. </para>

<note
><para
>U kunt deze functionaliteit alleen gebruiken bij optie-namen die al bekend zijn in &kdesrc-build;, en dat ze niet al worden gebruikt bij relevante commandoregelopties. Bijvoorbeeld de optie <link linkend="conf-async"
>async</link
> van het configuratiebestand heeft de specifieke commandoregelopties <link linkend="cmdline-async"
>--async</link
> en <link linkend="cmdline-no-async"
>--no-async</link
> geprefereerd door &kdesrc-build;. </para
></note>

</listitem>
</varlistentry>

<varlistentry id="cmdline-module-option">
<term
><parameter
>--set-module-option-value=<replaceable
>&lt;module-name&gt;</replaceable
>,<replaceable
>&lt;option-name&gt;</replaceable
>,<replaceable
>&lt;option-value&gt;</replaceable
></parameter
></term>
<listitem
><para
>U kunt dit gebruiken om een optie in uw <link linkend="configure-data"
>configuratiebestand</link
> voor specifieke module te overschrijven. </para
></listitem>
</varlistentry>

</variablelist>

<para
>Van alle andere commandoregelopties wordt aangenomen dat het bij te werken en te bouwen modules zijn. Haal het bouwen en het installeren niet door elkaar. </para>

</sect1>

</chapter>

<chapter id="using-kdesrc-build">
<title
>&kdesrc-build; gebruiken</title>

<sect1 id="using-kdesrc-build-preface">
<title
>Inleiding</title>

<para
>Normaal gesproken is het gebruik van &kdesrc-build; nadat u door <xref linkend="getting-started"/> bent gegaan niet moeilijker dan het invoeren op de commandoregel van:</para>

<screen
><prompt
>&percnt;</prompt
> <command
><userinput
>kdesrc-build</userinput
></command
>
</screen>

<para
>&kdesrc-build; zal de broncode voor &kde; downloaden, vervolgens proberen dat te configureren en te bouwen, en dat daarna te installeren.</para>

<para
>Lees verder om te ontdekken hoe &kdesrc-build; dit doet, en wat u verder met dit hulpmiddel kan doen.</para>

</sect1>

<sect1 id="basic-features">
<title
>Standaard functionaliteiten van &kdesrc-build;</title>

<sect2 id="using-qt">
<title
>qt-ondersteuning</title>
<para
>&kdesrc-build; ondersteunt het bouwen van de &Qt; toolkit die door &kde; software wordt gebruikt als handreiking aan de gebruikers. Deze ondersteuning wordt afgehandeld door een speciale module genaamd qt.</para>

<note
><para
>&Qt; wordt ontwikkeld in een separate repository van &kde; de software is te vinden op <ulink url="http://code.qt.io/cgit/qt/"
>http://code.qt.io/cgit/qt/</ulink
>.</para
></note>

<para
>Om &Qt; te kunnen bouwen, moet u er op letten dat <link linkend="conf-qtdir"
>qtdir</link
> verwijst naar de map waar u &Qt; wilt installeren zoals is beschreven in <xref linkend="configure-data"/>.</para>

<para
>Let er op dat de qt module aanwezig is in uw <filename
>.kdesrc-buildrc</filename
>, voor enig andere module in het bestand. Als u het voorbeeld configuratiebestand gebruikt, dan hoeft u enkel de al aanwezige qt module entry te uncommenten.</para>

<para
>Nu moet u controleren dat de opties <link linkend="conf-repository"
>repository</link
> en <link linkend="conf-branch"
>branch</link
> juist zijn ingesteld:</para>

<orderedlist>
<listitem
><para
>De eerste optie is om &Qt; te bouwen met behulp van een mirror in de &kde; broncoderepositories (zonder verdere wijzigingen, het is gewoon een cloon van de officiële broncode). Dit wordt sterk aanbevolen vanwege problemen die u kunt ondervinden met het clonen van de complete &Qt; module uit de officiële repository.</para>

<para
>U kunt de optie <option
>repository</option
> voor de qt module instellen op <userinput
>kde:qt</userinput
> om deze mogelijkheid te gebruiken.</para>
</listitem>

<listitem
><para
>In het andere geval, kunt u om de standaard &Qt; te bouwen, uw optie <option
>repository</option
> instellen op <userinput
>git://gitorious.org/qt/qt.git</userinput
>. Merk op dat u problemen kunt ondervinden met de initiële cloon van &Qt; uit dezerepository.</para
></listitem>
</orderedlist>

<para
>In beide gevallen, moet u de branch-optie instellen op <userinput
>master</userinput
> (tenzij u een andere branch wilt gebruiken).</para>

</sect2>

<sect2 id="kdesrc-build-std-flags">
<title
>Standaard flags toegevoegd door &kdesrc-build;</title>
<para
>Opmerking: deze sectie is niet van toepassing op modules waarvoor u een aangepaste toolchain hebt geconfigureerd, met bijv. <link linkend="conf-cmake-toolchain"
>cmake-toolchain</link
>.</para>

<para
>Om het u makkelijker te maken en tijd te besparen, voegt &kdesrc-build; enkele standaard paden toe aan uw omgeving: </para>

<itemizedlist>
<listitem
><para
>De paden naar de &kde; en de &Qt; libraries worden automatisch aan de variabele <envar
>LD_LIBRARY_PATH</envar
> toegevoegd. Dit betekent dat u  &libpath; niet hoeft te bewerken om ze toe te voegen. </para
></listitem>

<listitem
><para
>De paden naar de ontwikkel-hulpprogramma's van &kde; en de &Qt; worden automatisch aan de variabele <envar
>PATH</envar
> toegevoegd. Dit betekent dat u  &binpath; niet hoeft te bewerken om ze toe te voegen. </para
></listitem>

<listitem
><para
>Het pad naar de door &kde; geleverde <application
>pkg-config</application
> worden automatisch aan de variabele <envar
>PKG_CONFIG_PATH</envar
> toegevoegd. Dit betekent dat u &set-env; niet hoeft te gebruiken om ze toe te voegen. </para
></listitem>

<listitem
><para
>De instellingen voor &kdedir; wordt automatisch doorgegeven aan de omgevingsvariabele <envar
>KDEDIR</envar
> tijdens het bouwen. (<envar
>KDEDIRS</envar
> wordt niet permanent gewijzigd). </para
></listitem>

<listitem
><para
>De instellingen voor &qtdir; wordt automatisch doorgegeven aan de omgevingsvariabele <envar
>QTDIR</envar
> tijdens het bouwen. </para
></listitem>

</itemizedlist>

</sect2>

<sect2 id="build-priority">
<title
>Het wijzigen van de bouwprioriteit van &kdesrc-build;</title>
<para
>Programma's kunnen verschillende prioriteiten hebben in besturingssystemen zoals &Linux; en &BSD;. Hierdoor kan het systeem computertijd toewijzen aan de verschillende programma's overeenkomstig met hoe belangrijk ze zijn. </para>

<para
>&kdesrc-build; zal zichzelf normaal gesproken een lage prioriteit geven zodat de rest van de programma's op uw systeem onaangetast zijn en normaal zullen werken. Door deze techniek te gebruiken, zal &kdesrc-build; alleen extra CPU-capaciteit gebruiken als dat beschikbaar is. </para>

<para
>&kdesrc-build; houdt een hogere prioriteit dan batch-processen en CPU-donatie programma's zoals <ulink url="http://setiathome.ssl.berkeley.edu/"
>Seti@Home</ulink
>. </para>

<para
>Om &kdesrc-build; zodanig te wijzigen dat het permanent een hogere (of lagere) prioriteit heeft, moet u de &niceness;-instelling in het <link linkend="configure-data"
>configuratiebestand</link
> wijzigen. De instelling &niceness; regelt hoe <quote
>nice</quote
> &kdesrc-build; is naar andere programma's. Met andere woorden, door het hebben van een hogere &niceness;, geeft &kdesrc-build; een lagere prioriteit. Dus door &kdesrc-build; een hogere prioriteit te geven, reduceert u de &niceness; (en vice versa). De &niceness; kan gaan van 0 (helemaal niet nice, hoogste prioriteit) tot 20 (super nice, laagste prioriteit).</para>

<para
>U kunt ook de prioriteit van &kdesrc-build; tijdelijk wijzigen me de hulp van &cmd-nice; <link linkend="cmdline"
>commandoregeloptie</link
>. De gebruikte optiewaarde moet precies hetzelfde zijn als voor &niceness;.</para>

<note
><para
>Root kan sommige programma's gebruiken met een negatieve waarde voor nice, met voor dergelijke programma's de bijbehorende nog hogere prioriteit. Een negatieve (of zelfs 0) &niceness; voor &kdesrc-build; instellen is geen goed idee, omdat het niet helpt om de CPU-tijden significant korter te maken, maar het zorgt er wel voor dat uw computer erg traag lijkt in het geval dat u uw computer wilt gebruiken. </para
></note>

<informalexample>
<para
>Om &kdesrc-build; met een prioriteit van 15 (een lagere prioriteit dan normaal) te laten werken:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--nice=<replaceable
>15</replaceable
></option
></userinput
>
</screen>

<para
>Maar u kunt ook het <link linkend="configure-data"
>configuratiebestand</link
> bewerken om de wijziging permanent te maken:</para>

<screen
>&niceness; <replaceable
>15</replaceable
>
</screen>
</informalexample>

<tip>
<para
>De <link linkend="conf-niceness"
>niceness</link
>-optie heeft alleen effect op het gebruik van de processor(s) van de computer. Een ander belangrijke factor die invloed heeft op de performance van de computer is hoeveel data input of output (<acronym
>I/O</acronym
>) een programma gebruikt. Om te regelen hoeveel <acronym
>I/O</acronym
> een programma kan gebruiken, hebben moderne &Linux; besturingssystemen een vergelijkbaar hulpmiddel genaamd <application
>ionice</application
>. &kdesrc-build; ondersteunt <application
>ionice</application
>, (maar alleen om het compleet IN- of UIT- te schakelen) door de optie <link linkend="conf-use-idle-io-priority"
>use-idle-io-priority</link
> te gebruiken, vanaf &kdesrc-build; versie 1.12. </para>
</tip>

</sect2>

<sect2 id="root-installation">
<title
>Installatie als de Root</title>
<para
>U wilt wellicht &kdesrc-build; gebruiken voor de installatie met root-privileges. Maar dit is wellicht voor de niet aanbevolen systeembrede installatie. Maar dit is ook handig voor gebruik bij een aanbevolen single user &kde; bouw. Dat is omdat sommige modules (met name kdebase) programma's installeert die tijdens gebruik kort hogere permissies nodig hebben. Zij kunnen niet op deze permissie-niveau's werken tenzij ze met de verhoogde permissies zijn geïnstalleerd. </para>

<para
>U zou &kdesrc-build; gewoon direct als root kunnen opstarten, maar dit wordt niet aanbevolen, omdat het programma niet voor dat gebruik is uitgetest. Al hoe wel het zou veilig moeten zijn om het programma op die manier te gebruiken, is het beter om het gebruik als root zoveel mogelijk te vermijden.</para>

<para
>Om dit probleem op te lossen, heeft &kdesrc-build; de optie &make-install-prefix;. U kunt deze optie gebruiken om een te gebruiken commando te specificeren dat de installatie als een andere gebruiker uitvoert. De aanbevolen manier om dit commando te gebruiken is met de hulp van het programma &sudo;, wat het installatieproces zal starten als root. </para>

<informalexample>
<para
>Bijvoorbeeld, om met gebruik van &sudo; alle modules te installeren, kan u het volgende doen:</para>

<screen
>global
  &make-install-prefix; <replaceable
>sudo</replaceable>
  # Other options
end global
</screen>

<para
>Om &make-install-prefix; te gebruiken voor een enkele module, moet u het volgende doen: </para>

<screen
>module <replaceable
>svn-module-name</replaceable>
  &make-install-prefix; <replaceable
>sudo</replaceable>
end module
</screen>
</informalexample>

</sect2>

<sect2 id="build-progress">
<title
>De voortgang van het bouwen van een module tonen</title>
<para
>Deze functionaliteit is altijd beschikbaar, en is indien mogelijk automatisch ingeschakeld. Wat dit doet is het tonen van de geschatte voortgang van het bouwproces tijdens het bouwen van een module; op die manier kunt u weten hoelang het nog duurt om een module te bouwen. </para>

</sect2>

</sect1>

<sect1 id="advanced-features">
<title
>Uitgebreide functionaliteiten</title>

<sect2 id="partial-builds">
<title
>Een module gedeeltelijk bouwen</title>
<para
>Het is mogelijk om alleen gedeeltes van een enkele &kde; module te bouwen. Bijvoorbeeld, u wilt alleen een programma uit een module compileren. &kdesrc-build; heeft mogelijkheden om het u makkelijk te maken. Er zijn meerdere manieren om dit te doen. </para>

<sect3 id="not-compiling">
<title
>Mappen uit een bouw verwijderen</title>
<para
>Het is mogelijk om een gehele opslagruimte te downloaden maar het bouwsysteem er een paar mappen uit te laten wanneer er wordt gebouwd. Dit vereist dat de module &cmake; gebruikt en dat het bouwsysteem van de module om de map te verwijderen toestaat dit optioneel te laten zijn. </para>

<para
>Dit wordt bestuurd met de optie &do-not-compile;.</para>

<important
><para
>Deze optie vereist dat u in ieder geval na een wijziging het bouwsysteem herconfigureert. Dit doet u door het commando <userinput
><command
>kdesrc-build</command
> <option
>&cmd-reconfigure;</option
> <option
><replaceable
>module</replaceable
></option
></userinput
> te gebruiken. </para
></important>

<informalexample>
<para
>Om de map <filename class="directory"
>python</filename
> uit het kdebindings bouwproces te verwijderen:</para>

<screen
>module <replaceable
>kdebindings</replaceable>
  &do-not-compile; <replaceable
>python</replaceable>
end module
</screen>

</informalexample>

<note
><para
>Deze functie is afhankelijk van enkele afspraken gebruikt in de meeste &kde; modules. Het hoeft daarom niet bij alle programma's te werken.</para
></note>

</sect3>

</sect2>

<sect2 id="using-branches">
<title
>Ondersteuning voor branching en tagging bij for &kdesrc-build;</title>

<sect3 id="branches-and-tags">
<title
>Wat zijn branches en tags?</title>

<para
>&subversion; ondersteunt het beheer van de geschiedenis van de &kde;-broncode. &kde; gebruikt deze ondersteuning om voor ontwikkeling branches (afsplitsingen) te creëren, en de repository zo nu en dan te taggen (markeren) met een nieuwe versie release. </para>

<para
>Bijvoorbeeld, de &kmail;-ontwikkelaars kunnen aan het werk zijn voor een nieuwe functie in een andere branch om te vermijden dat ze de versie breken die bij de meeste ontwikkelaars in gebruik is. In deze branch kunnen ontwikkelingen aan de gang zijn, terwijl in de hoofd-branch (genaamd /trunk) ook ontwikkelingen aan de gang kunnen zijn. </para>

<para
>Een tag, aan de andere kant, is een snapshot van de broncoderepository op een tijdstip. Dit wordt door het administratieteam van &kde; gebruikt om een versie van de code te markeren als geschikt voor release en de ontwikkelaars toch te laten werken aan de code. </para>

<para
>In &subversion; is er geen verschil tussen branches, tags, of trunk wat betreft de code. Het is alleen maar een afspraak tussen de ontwikkelaars. Dit maakt het moeilijk om goed branches en tags te hanteren door &kdesrc-build;. Maar, er zijn toch enkele dingen die gedaan kunnen worden. </para>

</sect3>

<sect3 id="branch-support">
<title
>Het gebruik van branches en tags</title>

<para
>Het gebruik van branches en tags regelt u met een set van opties, die variëren van een gewoon verzoek voor een versie, tot een specifieke &url; om van te downloaden voor gevorderde gebruikers. </para>

<para
>De makkelijkste methode is om de &branch; en &tag;-opties te gebruiken. U gebruikt gewoon de optie samen met de naam van de gewenste branch of tag van een module, en &kdesrc-build; zal proberen om de juiste locatie in de &kde; repository te bepalen waarvan het moet downloaden. Bij de meeste &kde; modules werkt dit vrij goed.</para>

<informalexample>
<para
>Om kdelibs van &kde; 4.6 (die gewoon bekend staat als de 4.6 branch) te downloaden: </para>

<screen
>module kdelibs
  branch <replaceable
>4.6</replaceable>
  # other options...
end module
</screen>

<para
>Of, om kdemultimedia te downloaden zoals het was released met &kde; 4.6.1:</para>

<screen
>module kdemultimedia
  tag <replaceable
>4.6.1</replaceable>
  # other options...
end module
</screen>

</informalexample>

<tip
><para
>U kunt een algemene (global) branch waarde instellen. Maar als u dat doet, vergeet dan niet om een andere branch voor de modules die niet de global branch gebruiken te specificeren! </para
></tip>
</sect3>

<sect3 id="advanced-branches">
<title
>Geavanceerde opties wat betref branches</title>

<para
>&kdesrc-build; heeft twee opties voor situaties waar &branch; en &tag; het juiste pad incorrect bepaalt: &module-base-path; en &override-url;. </para>

<itemizedlist>
<listitem
><para
>&module-base-path; gebruikt u om &kdesrc-build; te helpen met het invullen van het ontbrekende gedeelte van een module's pad. In de repository van &kde;, zijn alle paden in de vorm <filename class="directory"
>svnRoot/module-base-path/<replaceable
>module-name</replaceable
></filename
>. Normaal gesproken kan &kdesrc-build; zelf het van toepassing zijnde middelste gedeelte bepalen. Als dat niet lukt, dan kunt i &module-base-path;, op de volgende manier gebruiken: </para>

<informalexample>
<screen
>module kdesupport
    # kdesupport ondersteunt verschillende tags om makkelijk het vereiste 
    # software voor een bepaalde KDE Platform release te organiseren.
    module-base-path tags/kdesupport-for-4.5
end module
</screen>

<para
>Dit zorgt ervoor dat &kdesrc-build; gaat downloaden kdesupport van (in dit voorbeeld), <filename
>svn://anonsvn.kde.org/home/kde/<replaceable
>tags/kdesupport-for-4.5</replaceable
></filename
>. </para>
</informalexample>
<tip
><para
>In vorige versies van &kdesrc-build; werd de &module-base-path; anders behandelt. Als u problemen tegenkomt bij het gebruik van een oude module-base-path definitie dan zou misschien moeten controleren of het daadwerkelijke pad hetzelfde is als wat &kdesrc-build; verwacht bij het gebruik van de optie <link linkend="cmdline-pretend"
>--pretend</link
>. </para
></tip>
</listitem>

<listitem
><para
>Bij de optie &override-url;is het vereist dat u het exacte pad specificeert waarvan u download. Maar, hiermee kunt u wel van paden downloaden waarmee u bij voorgaande versies van &kdesrc-build; geen hoop had om van te kunnen downloaden. Op dit moment zou de optie &module-base-path; genoeg moeten zijn om van elke Subversion bron URL te kunnen downloaden. </para>

<important
><para
>&kdesrc-build; zal de waarde die u specificeerde voor &override-url; absoluut niet wijzigen of corrigeren, dus als u uw &svn-server;-instelling wijzigt, dan zal u dit ook moeten bijwerken. </para
></important>

</listitem>
</itemizedlist>

</sect3>

</sect2>

<sect2 id="stopping-the-build-early">
<title
>Het bouwen vroeg stoppen</title>

<sect3 id="the-build-continues">
<title
>Normaal gaat het bouwen door zelfs als er zaken mislukken</title>

<para
>&kdesrc-build; zal normaal een update doen, alle modules in de gespecificeerde lijst van te bouwen modules bouwen en installeren, zelfs als het bouwen van een module mislukt. Dit is gewoonlijk een gemak om u het bijwerken van software pakketten te bieden zelfs als er een eenvoudig foutje is gemaakt in een van de bronopslagruimten tijdens de ontwikkeling die de oorzaak is dat het bouwen breekt. </para>

<para
>U zou echter willen dat &kdesrc-build; stopt met wat het aan het doen is wanneer het bouwen en installeren van een module mislukt. Dit kan u tijd besparen die verkwist kan zijn om voortgang te maken terwijl overblijvende modulen in de te bouwen lijst niet instaat zullen zijn ook met succes te bouwen, speciaal als u nooit eerder met succes de modules in the lijst hebt gebouwd. </para>

</sect3>

<sect3 id="stop-on-failure-stops-early">
<title
>Vroeg stoppen met --stop-on-failure</title>

<para
>De primaire methode om dat te doen is om de optie <link linkend="cmdline-stop-on-failure"
>--stop-on-failure</link
> op de opdrachtregel te gebruiken wanneer u &kdesrc-build; uitvoert. </para>

<para
>Deze optie kan ook ingesteld worden in het <link linkend="conf-stop-on-failure"
>configuratiebestand</link
> om het de normale modus van werken te maken. </para>

<para
>Het is ook mogelijk om &kdesrc-build; bij uitvoeren te vertellen om te stoppen met bouwen <emphasis
>na</emphasis
> voltooiing van de huidige module waaraan gewerkt wordt. Dit in tegenstelling tot &kdesrc-build; interrumperen met een commando zoals <keycombo action="simul"
>&Ctrl;<keycap
>C</keycap
></keycombo
>, die &kdesrc-build; onmiddellijk laat stoppen, met verlies van voortgang van de huidige module. </para>

<important
><para
>&kdesrc-build; interrumperen tijdens het installeren van een module wanneer de optie <link linkend="conf-use-clean-install"
>use-clean-install</link
> is ingeschakeld zal betekenen dat de geïnterrumpeerde module niet beschikbaar zal zijn totdat &kdesrc-build; in staat is met succes de module te bouwen!</para>

<para
>Als u het nodig hebt om &kdesrc-build; te interrumperen zonder een nette afsluiting in deze situatie, probeer dan tenminste dit te doen terwijl &kdesrc-build; een module installeert.</para>
</important>

</sect3>

<sect3 id="stopping-early-without-stop-on-failure">
<title
>&kdesrc-build; vroeg stoppen zonder --stop-on-failure</title>

<para
>Zoals hierboven genoemd is het mogelijk &kdesrc-build; netjes vroeg te laten stoppen nadat deze de module waar nu aan wordt gewerkt heeft voltooid. Om dit te doen, moet u het POSIX-signaal <literal
>HUP</literal
> naar &kdesrc-build; zenden. </para>

<para
>U kunt dit doen met een commando zoals <command
>pkill</command
> (op &Linux; systemen) als volgt:</para>

<programlisting
><prompt
>$ </prompt
><userinput
><command
>pkill <option
>-HUP</option
> kdesrc-build</command
></userinput
>
</programlisting>

<para
>Als dat met succes is gedaan zult u een bericht in de uitvoer van &kdesrc-build; zien zoals:</para>

<programlisting
>[ build ] recv SIGHUP, zal eindigen na deze module
</programlisting>

<note>
<para
>&kdesrc-build; kan dit bericht meerdere keren laten zien afhankelijk van het aantal individuele &kdesrc-build; processen die actief zijn. Dit is normaal en geen indicatie van een fout.</para>
</note>

<para
>Nadat &kdesrc-build; het signaal heeft bevestigd, zal het stoppen met verwerken nadat de huidige module is gebouwd en geïnstalleerd. Als &kdesrc-build; nog steeds broncode aan het bijwerken is toen het verzoek werd ontvangen, zal &kdesrc-build; stoppen nadat de broncode van de module is bijgewerkt. Nadat zowel het bijwerken als de bouwprocessen vroeg zijn gestopt, zal &kdesrc-build; zijn partiële resultaten afdrukken en dan eindigen. </para>

</sect3>

</sect2>

<sect2 id="building-successfully">
<title
>Hoe &kdesrc-build; probeert zich te verzekeren van een succesvolle bouw</title>

<sect3 id="automatic-rebuilds">
<title
>Automatisch herbouwen</title>

<para
>&kdesrc-build; had vroeger de gewoonte om onderdelen toe te voegen bij automatische pogingen om een module te herbouwen na een mislukking (omdat soms dan deze poging tot herbouwen wel werkte, vanwege bugs in het bouwsysteem op dat moment). Dankzij de omschakeling naar &cmake; heeft het bouwsysteem geen last meer van deze bugs, zodat &kdesrc-build; niet langer meer dan een keer zal proberen een module te herbouwen. Er zijn echter situaties waar &kdesrc-build; toch zal proberen actie te ondernemen:</para>

<itemizedlist>

<listitem
><para
>Als u <link linkend="conf-configure-flags"
>configure-flags</link
> of <link linkend="conf-cmake-options"
>cmake-options</link
> voor een module wijzigt, dan zal &kdesrc-build; dit detecteren en automatisch configure of cmake voor dat module herstarten.</para
></listitem>

<listitem
><para
>Als het bouwsysteem niet bestaat (ook als &kdesrc-build; het niet heeft verwijderd) dan zal &kdesrc-build; het automatisch recreëren. Dit is handig om een volledige <link linkend="cmdline-refresh-build"
>--refresh-build</link
> uit te kunnen voeren voor een specifiek module zonder dat het ook voor andere modules uitgevoerd te hoeven worden.</para
></listitem>

</itemizedlist>

</sect3>

<sect3 id="manual-rebuilds">
<title
>Handmatig een module herbouwen</title>
<para
>Als u een wijziging aan de optiewaarden van een module aanbrengt, of de broncode van de module wijzigt zodanig dat &kdesrc-build; het niet herkent, dan kan het nodig zijn dat u handmatig de module moet herbouwen.</para>

<para
>U kunt dit gewoon doen door <userinput
><command
>kdesrc-build</command
> <option
>--refresh-build</option
> <option
><replaceable
>module</replaceable
></option
></userinput
> op te starten. </para>

<para
>Als u graag heeft dat &kdesrc-build; automatisch de module tijdens de volgende normale bouw update automatisch wordt herbouwd, dan kunt een speciaal bestand creëren. Elke module heeft een bouwmap. Als u u een bestand genaamd <filename
>.refresh-me</filename
> in de bouwmap van een module creëert, dan zal &kdesrc-build; de volgende keer dat het bouwproces gebeurt de module herbouwen, zelfs als het normaal gesproken de snellere incrementele bouw zou uitvoeren.</para>

<tip>
<para
>Standaard is de bouwmap <filename class="directory"
>~/kdesrc/build/<replaceable
>module</replaceable
>/</filename
>. Als u de waarde van de optie &build-dir; wijzigt, dan wordt dat gebruikt in plaats van <filename class="directory"
>~/kdesrc/build</filename
>.</para>
</tip>

<informalexample>
<para
>Herbouwen door <filename
>.refresh-me</filename
> voor de module <replaceable
>kdelibs</replaceable
> te gebruiken:</para>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>touch</command
> <filename
>~/kdesrc/build/<replaceable
>kdelibs</replaceable
>/.refresh-me</filename
></userinput>
<prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
></userinput
>
</screen>
</informalexample>
</sect3>

</sect2>

<sect2 id="changing-environment">
<title
>De instellingen van de omgevingsvariabelen wijzigen</title>
<para
>Normaal gesproken gebruikt &kdesrc-build; om updates en het bouwproces uit te voeren de bij de start aanwezige omgeving voor het gebruik van programma's. Dit is handig voor het gebruik van &kdesrc-build; vanaf de commandoregel.</para>

<para
>Maar als u de instellingen voor de omgevingsvariabelen wilt wijzigen waarvoor &kdesrc-build; niet direct een optie voor heeft. (Bijvoorbeeld, om de vereiste omgevingsvariabelen op te zetten om &kdesrc-build; door een timer zoals &cron; te laten starten) Dan kunt u dit doen met de optie &set-env;.</para>

<para
>Afwijkend van de meeste andere opties, kunt u deze meer dan een keer instellen, en het accepteert twee waarden, gescheiden door een spatie. De eerste is de naam van de in te stellen omgevingsvariabele, en de rest van de regel is de waarde.</para>

<informalexample>
<para
>Set <userinput
><envar
>DISTRO</envar
>=<replaceable
>BSD</replaceable
></userinput
> for all modules:</para>
<screen
>global
  set-env <replaceable
>DISTRO</replaceable
> <replaceable
>BSD</replaceable>
end global
</screen>
</informalexample>

</sect2>

<sect2 id="resuming">
<title
>Hervatten van bouwprocessen</title>

<sect3 id="resuming-failed">
<title
>Hervatten na een mislukte of afgebroken bouwproces</title>

<para
>U kunt opdracht geven aan &kdesrc-build; om de bouw vanaf een andere module te starten dan wat het normaal zou doen. Dit kan handig zijn als een groep modules mislukte, of als u een de bouw in het midden af heeft gebroken. U kunt dit regelen met de hulp van de optie &cmd-resume-from; en de optie &cmd-resume-after;.</para>

<note
><para
>Oudere versies van &kdesrc-build; zouden de update van de broncode overslaan bij het hervatten van een bouw. Standaard gebeurt dit niet langer, maar u kunt altijd de commandoregelparameter <option
>--no-src</option
> gebruiken om de update van de broncode over te slaan.</para
></note>

<informalexample>
<para
>De start van de bouw hervatten vanaf kdebase:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--resume-from=<replaceable
>kdebase</replaceable
></option
></userinput
>
</screen>
</informalexample>

<informalexample>
<para
>De start van de bouw hervatten na kdebase (in het geval dat u handmatig het probleem herstelde en de module zelf installeerde):</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--resume-after=<replaceable
>kdebase</replaceable
></option
></userinput
>
</screen>
</informalexample>

<para
>Als de laatste &kdesrc-build;-bouw eindigde met een bouw-mislukking, dan kunt u ook de commandoregelparameter <link linkend="cmdline-resume"
>--resume</link
> gebruiken, wat hervat met de laatste bouw , startend met de module die mislukte. De update van de broncode en metadata worden ook overgeslagen (maar als u dit nodig heeft, dan is het in het algemeen beter om <link linkend="cmdline-resume-from"
>--resume-from</link
> te gebruiken).</para>


</sect3>

<sect3 id="ignoring-modules">
<title
>Modules tijdens de bouw negeren</title>

<para
>Vergelijkbaar met de manier waarop u <link linkend="resuming-failed"
>de bouw hervat vanaf een module</link
>, in plaats daarvan kunt u ervoor kiezen om alles zoals normaal te updaten en te bouwen, en een groep modules te negeren.</para>

<para
>Dit kunt u doen door de optie &cmd-ignore-modules; te gebruiken. Met deze optie kunt u opdracht geven aan &kdesrc-build; om bij de update en de bouw op de commandoregel opgegeven modules te negeren.</para>

<informalexample>
<para
>Tijdens een complete run extragear/multimedia en kdereview negeren:</para>
<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--ignore-modules</option
> <replaceable
>extragear/multimedia kdereview</replaceable
></userinput
>
</screen>
</informalexample>

</sect3>
</sect2>

<sect2 id="changing-env-from-cmd-line">
<title
>Vanaf de commandoregel opties wijzigen</title>

<sect3 id="changing-global-opts">
<title
>Algemene (global) opties wijzigen</title>
<para
>U kunt direct vanaf de commandoregel de optiewaarden ingelezen van het <link linkend="configure-data"
>configuratiebestand</link
> wijzigen. Dit overschrijft de instellingen uit het configuratiebestand, maar dat is alleen maar tijdelijk. Het het heeft alleen maar effect zolang het opdrachtregel aanwezig blijft.</para>

<para
>Bij &kdesrc-build; kunt u opties zoals <replaceable
>option-name</replaceable
> wijzigen door op de commandoregel een argument op te geven in de vorm<userinput
><option
>--<replaceable
>optie-naam</replaceable
>=waarde</option
></userinput
>. &kdesrc-build; zal herkennen dat het niet weet wat de optie inhoud, en de naam opzoeken in de lijst met optienamen. Als de naam onbekend is, dan geeft het een waarschuwing, anders zal het tijdelijk de instellingen in het configuratiebestand overschrijven met de door u gegeven waarde.</para>

<informalexample>
<para
>De optie &source-dir; instellen op <filename
>/dev/null</filename
> voor een test:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--pretend</option
> <option
>--<replaceable
>source-dir</replaceable
>=<replaceable
>/dev/null</replaceable
></option
></userinput
>
</screen>

</informalexample>

</sect3>

<sect3 id="changing-module-opts">
<title
>Module opties wijzigen</title>
<para
>Het is ook mogelijk om opties alleen voor een specifieke module te wijzigen. De syntax is vergelijkbaar: --<replaceable
>module</replaceable
>,<replaceable
>optienaam</replaceable
>=<replaceable
>waarde</replaceable
>. </para>

<para
>Deze wijziging overschrijft alle overeenkomstige instellingen in het <link linkend="configure-data"
>configuratiebestand</link
> voor de gevonden module, en past alleen die waarden toe die met de optie op de commandoregel zijn opgegeven.</para>

<informalexample>
<para
>Een ander bouwmap gebruiken voor de kdeedu module:</para>

<screen
><prompt
>&percnt;</prompt
> <userinput
><command
>kdesrc-build</command
> <option
>--<replaceable
>kdeedu</replaceable
>,<replaceable
>build-dir</replaceable
>=<replaceable
>temp-build</replaceable
></option
></userinput
>
</screen>

</informalexample>

</sect3>

</sect2>

</sect1>

<sect1 id="developer-features">
<title
>Functionaliteiten voor &kde;-ontwikkelaars</title>

<sect2 id="ssh-agent-reminder">
<title
>&ssh; Agent controles</title>
<para
>&kdesrc-build; kan er op letten dat &kde;-ontwikkelaars die &ssh; gebruiken voor toegang tot de &kde;-broncoderepository niet per ongeluk het &ssh; Agent-hulpprogramma ingeschakeld laten. Dit kan veroorzaken dat &kdesrc-build; onafgebroken blijft wachten totdat de ontwikkelaar zijn &ssh;-wachtwoord invoert, daarom zal &kdesrc-build; standaard controleren of de Agent is opgestart is voordat het de broncode update. </para>

<note
><para
>Dit is alleen gedaan voor &kde;-ontwikkelaars die &ssh; gebruiken. Omdat geen wachtwoord nodig is voor de standaard anonieme checkout. &subversion; zal de wachtwoorden voor het tweede mogelijke protocol voor &kde;-ontwikkelaars behandelen, https. </para
></note>

<para
>U wilt wellicht de &ssh; Agent controle uitschakelen, in situaties waar &kdesrc-build; is de aanwezigheid van een agent niet goed detecteert. Om de agent controle uit te schakelen, stelt u de optie <option
>disable-agent-check</option
> in op <userinput
>true</userinput
>.</para>

<informalexample>
<para
>De &ssh; agent controle uitschakelen:</para>
<screen
>global
  disable-agent-check true
end global
</screen>
</informalexample>

</sect2>

</sect1>

<sect1 id="other-features">
<title
>Andere functionaliteiten van &kdesrc-build;</title>

<sect2 id="changing-verbosity">
<title
>Het aantal meldingen van &kdesrc-build; wijzigen</title>
<para
>&kdesrc-build; heeft verschillende opties om de hoeveelheid meldingen die het script genereert te regelen. Fouten geven in elk geval altijd een melding.</para>

<itemizedlist>
<listitem
><para
>De optie <option
>--quiet</option
> (de afkorting is <option
>-q</option
>) zorgt ervoor dat &kdesrc-build; veelal stil is. Alleen belangrijke meldingen, waarschuwingen, of fouten krijgt u te zien. Indien beschikbaar, is informatie over de voortgang van de bouw nog steeds zichtbaar.</para
></listitem>

<listitem
><para
>De optie <option
>--really-quiet</option
> (geen afkorting) zorgt ervoor dat &kdesrc-build; u alleen belangrijke waarschuwingen en fouten tijdens de uitvoering te zien geeft.</para
></listitem>

<listitem
><para
>De optie <option
>--verbose</option
> (de afkorting is <option
>-v</option
>) zorgt ervoor dat &kdesrc-build; zeer gedetailleerde meldingen geeft.</para
></listitem>

<listitem
><para
>De optie <option
>--debug</option
> is alleen voor debuggen, zorgt ervoor dat &kdesrc-build; hetzelfde reageert alsof <option
>--verbose</option
> is ingeschakeld, zodat commando's ook uitvoer naar het terminalvenster geven, en geeft voor veel functies debug-informatie.</para
></listitem>
</itemizedlist>

</sect2>

<sect2 id="kdesrc-build-color">
<title
>Gekleurde meldingen</title>
<para
>Indien opgestart vanuit een &konsole; of en andere terminal, zal &kdesrc-build; normaal gesproken gekleurde tekst tonen.</para>

<para
>U kunt dit uitschakelen door op de commandoregel <option
>--no-color</option
> te gebruiken, of door in het <link linkend="configure-data"
>configuratiebestand</link
> de optie &colorful-output; op <userinput
>false</userinput
> te zetten. </para>

<informalexample>
<para
>Gekleurde meldingen uitschakelen in het configuratiebestand:</para>
<screen
>global
  colorful-output false
end global
</screen>
</informalexample>

</sect2>

<sect2 id="deleting-build-dir">
<title
>Na een bouw de onnodige mappen verwijderen</title>
<para
>Heeft u weinig ruimte op de hardeschijf maar u wilt wel een bleeding-edge &kde; checkout hebben? &kdesrc-build; kan helpen bij het reduceren van hardeschijfruimte bij het bouwen van &kde; vanuit &subversion;.</para>

<note
><para
>Wees u ervan bewust dat het bouwen van &kde; veel ruimte nodig heeft. Er zijn verschillende veel ruimtevragende onderdelen bij het gebruik van &kdesrc-build;:</para
></note>

<orderedlist>
<listitem
><para
>De daadwerkelijke checkout van de broncode kan een aanzienlijke hoeveelheid ruimte vragen. De standaard modules hebben ongeveer aan 1.6 gigabytes hardeschijfruimte nodig. U kunt dit reduceren door er zeker van te zijn dat u alleen de modules bouwt die u echt wil hebben. &kdesrc-build; zal geen broncode van de harde schijf verwijderen, zelfs als u het item uit het <link linkend="configure-data"
>configuratiebestand</link
> verwijdert, zorg er daarom voor dat u de onnodige broncode checkouts in de map met broncode verwijdert. Merk op dat de broncode-bestanden van het internet worden gedownload, u <emphasis
>moet niet</emphasis
> ze verwijderen als u ze daadwerkelijk gebruikt, tenminste totdat u klaar bent met het gebruik van &kdesrc-build;.</para>

<para
>Daarnaast, als u een &Qt; van uw distributie heeft geïnstalleerd (en de kans is groot dat u dat heeft gedaan), dan hoeft u waarschijnlijk de qt module niet te installeren. Dat bespaart ongeveer 200 megabytes hardeschijfruimte.</para>

<para
>Nog een ding over de manier waarop &subversion; werkt: er zijn op de harde schijf eigenlijk twee bestanden voor elk uit het repository uitgecheckt bestand. &kdesrc-build; heeft op dit punt geen code om te proberen de grootte van de broncode te minimaliseren als de broncode niet in gebruik is. </para>
</listitem>

<listitem>
<para
>&kdesrc-build; zal voor het bouwen een separate bouwmap creëren waarin de broncode wordt gebouwd. Soms zal &kdesrc-build; een map met broncode kopiëren om een fake bouwmap te creëren. Als dit voorkomt, worden ruimtebesparende symlinks gebruikt, zodat dit wat hardeschijfruimte betreft geen probleem vormt. Standaard is voor een module de bouwmap veel groter dan de map met broncode. Bijvoorbeeld, de bouwmap voor kdebase is ongeveer 1050 megabytes, terwijl de broncode van kdebase's alleen maar ongeveer 550 megabytes is.</para>

<para
>Gelukkig is de bouwmap niet meer nodig nadat een module succesvol is gebouwd en geïnstalleerd. &kdesrc-build; kan automatisch de bouwmap na de installatie van een module verwijderen, zie de voorbereiden hieronder voor meer informatie. Merk op dat deze stap het onmogelijk maakt voor &kdesrc-build; om de tijdbesparende incrementele bouw uit te voeren.</para>
</listitem>

<listitem
><para
>En tenslotte is er voor de eigenlijke installatie van &kde; hardeschijfruimte nodig, wat niet in de bouwmap wordt geïnstalleerd. Standaard neemt dit minder ruimte in beslag dan de bouwmap. Maar het is moeilijker om hierover cijfers te geven. </para
></listitem>
</orderedlist>

<para
>Hoe vermindert u de nodige ruimte voor &kde;? Een manier is om de juiste compiler flags te gebruiken, voor een optimalisatie voor opslagruimte in plaats van voor snelheid. Een andere manier, wat een groot effect kan hebben, is het verwijderen van debug-informatie van uw &kde;-bouw. </para>

<warning
><para
>U moet zeker weten wat u doet voor dat u besluit om de debug-informatie te verwijderen. Het gebruiken van bleeding-edge software houd in dat u software gebruikt die een grotere kans heeft om te crashen dan software uit een stabiele release. Als u software gebruikt zonder debug-informatie, dan kan het erg moeilijk zijn om een goed bug rapport te creëren zodat uw bug wordt opgelost, en zal u waarschijnlijk de debug-informatie opnieuw moeten inschakelen voor het betreffende programma en opnieuw moeten bouwen om de ontwikkelaar te helpen met het fixxen van de crash. Verwijder daarom de debug-informatie op uw eigen risico! </para
></warning>

<informalexample>
<para
>De bouwmap verwijderen na de installatie van een module. De map met broncode wordt echter bewaard, en debugging is mogelijk:</para>

<screen
>global
  configure-flags      --enable-debug
  remove-after-install builddir        # Remove build directory after install
end global
</screen>

<para
>De bouwmap verwijderen na de installatie van een module. zonder debug-informatie, met ruimte-optimalisatie.</para>

<screen
>global
  cxxflags             -Os             # Optimize for size
  configure-flags      --disable-debug
  remove-after-install builddir        # Remove build directory after install
end global
</screen>
</informalexample>
</sect2>

</sect1>

</chapter>

<chapter id="kde-cmake">
<title
>&cmake;, het bouwsysteem voor &kde;</title>

<sect1 id="kde-cmake-intro">
<title
>Inleiding tot &cmake;</title>

<para
>In Maart 2006, versloeg het &cmake; programma verschillende concurrenten en werd geselecteerd als bouwsysteem voor &kde; 4, daarmee het op autotools-gebaseerde systeem vervangend dat &kde; vanaf het begin gebruikte.</para>

<para
>Een introductie-pagina over &cmake; is beschikbaar op de <ulink url="https://community.kde.org/Guidelines_HOWTOs/CMake"
>&kde; Community Wiki</ulink
>. Waar het eigenlijk op neer komt is dat we in plaats van <userinput
><command
>make</command
> <option
>-f</option
> <filename
>Makefile.cvs</filename
></userinput
>, en dan <command
>configure</command
>, en tenslotte &make; gebruiken, we eenvoudig &cmake; en &make; gebruiken. </para>

<para
>&kdesrc-build; heeft ondersteuning voor &cmake;. Enkele functionaliteiten van &kdesrc-build; zijn eigenlijk functionaliteiten van het onderliggende bouwsysteem, inclusief <link linkend="conf-configure-flags"
>configure-flags</link
> en <link linkend="conf-do-not-compile"
>do-not-compile</link
>. Als er equivalente functionaliteiten beschikbaar zijn, dan worden ze beschikbaar gemaakt. Bijvoorbeeld, het equivalent voor de optie configure-flags  is <link linkend="conf-cmake-options"
>cmake-options</link
>, en de optie <link linkend="conf-do-not-compile"
>do-not-compile</link
> wordt ook ondersteunt voor &cmake; vanaf &kdesrc-build; versie 1.6.3. </para>

</sect1>
</chapter>

<chapter id="credits-and-license">
<title
>Dankbetuigingen en licentie</title>

&meld.fouten;&vertaling.freek; &underFDL; </chapter>

<appendix id="appendix-modules">
<title
>De organisatie van de modules en broncode van &kde;</title>
<sect1 id="module-concept">
<title
>De <quote
>Module</quote
></title>

<para
>&kde; groepeert de software in <quote
>modules</quote
> van verschillende grootte. Oorspronkelijk was dit losjes gegroepeerd in een paar grote modules, maar met de introductie van de op <ulink url="https://git-scm.com/"
>Git</ulink
>-gebaseerde <ulink url="https://commits.kde.org/"
>broncoderepositories</ulink
>, zijn deze grote modules verder opgesplitst in vele kleinere modules. </para>

<para
>Ook &kdesrc-build; gebruikt dit concept van modules. In essentie, is een <quote
>module</quote
> een groepering van code die kan worden gedownload, gebouwd, getest, en geïnstalleerd. </para>

<sect2 id="single-modules">
<title
>Individuele modules</title>

<para
>Het is makkelijk om het zo in te stellen dat &kdesrc-build; een enkele module bouwt. De volgende lijst is een voorbeeld van hoe een declaratie voor een op Subversion-gebaseerde module er uit zou zien in het <link linkend="kdesrc-buildrc"
>configuratiebestand</link
>.</para>

<programlisting
>module <replaceable
>kdefoo</replaceable>
    <option
><replaceable
>cmake-options -DCMAKE_BUILD_TYPE=Debug</replaceable
></option>
end module
</programlisting>

<tip
><para
>Dit is een op Subversion-gebaseerde module omdat het geen <link linkend="conf-repository"
>repository</link
>-optie gebruikt. Ook is de <option
>cmake-options</option
>-optie alleen als voorbeeld gegeven, het is niet vereist.</para
></tip>

</sect2>
<sect2 id="module-groups">
<title
>Groepen van gerelateerde modulen</title>

<para
>Op dit moment zijn de meeste &kde; broncodemodules gebaseerd op Git en worden gewoonlijk gecombineerd in groepen van modules.</para>

<para
>&kdesrc-build; ondersteunt daarom ook groepen modules, met <link linkend="module-sets"
>module sets</link
>. Een voorbeeld:</para>

<programlisting
>module-set <replaceable
>basis-modules</replaceable>
    <option
>repository</option
> kde-projects
    <option
>use-modules</option
> <replaceable
>kde-runtime kde-workspace kde-baseapps</replaceable>
end module-set
</programlisting>

<tip
><para
>U kunt de module set naam (<replaceable
>base-modules</replaceable
> in dit geval) leeg laten als u dat wilt. Deze instelling <option
>repository</option
> geeft aan waar &kdesrc-build; de broncode kan downloaden, maar u kunt ook een <symbol
>git://</symbol
> URL gebruiken.</para
></tip>

<para
>Een speciale functionaliteit van de <quote
><option
>repository</option
> <literal
>kde-projects</literal
></quote
> is dat &kdesrc-build; automatisch alle Git modules die in de door u opgegeven modules (in the KDE Project database) zijn gegroepeerd, zal downloaden.</para>
</sect2>

<sect2 id="module-branch-groups">
<title
>Module <quote
>branch groups</quote
></title>

<para
>Het concept van een <link linkend="module-groups"
>groep van modules</link
> verder uitbouwent, merkten de &kde;-ontwikkelaars uiteindelijk dat het synchroniseren van namen van de Git branches over een groot aantal repositories steeds moeilijker werd, met name tijdens de ontwikkeling van de nieuwe &kde; Frameworks voor &Qt; 5. </para>

<para
>Daarom is het concept <quote
>branch groups</quote
> ontwikkeld, om gebruikers en ontwikkelaars in staat te stellen een of alleen een paar groepen te selecteren en het script toestaan om automatisch de juiste Git-branch te selecteren. </para>

<para
>&kdesrc-build; ondersteunt deze functie vanaf versie 1.16-pre2, via de optie <link linkend="conf-branch-group"
>branch-group</link
>. </para>

<example id="ex-branch-group">
<title
>Voorbeeld van gebruikt van een branch-group</title>

<para
>branch-group kunt u in het configuratiebestand als volgt gebruiken: </para>

<programlisting
>global
    # Selecteert KDE Frameworks 5 aen andere Qt5-gebaseerde apps
    <option
>branch-group</option
> <replaceable
>kf5-qt5</replaceable>

    # Andere global opties hier ...
end global

module-set
    # branch-groep werkt alleen voor kde-projects
    <option
>repository</option
> kde-projects

    # branch-groep is doorgegeven van de set globally, maar kan ook
    # hier gespecificeerd.

    <option
>use-modules</option
> <replaceable
>kdelibs kde-workspace</replaceable>
end module-set

# kdelibs's branch zal zijn "frameworks"
# kde-workspace's branch zal zijn "master" (vanaf Augustus 2013)
</programlisting>

<para
>In dit geval geeft dezelfde <literal
>branch-group</literal
> voor elke Git-module verschillende branch-namen. </para>
</example>

<para
>Voor deze functionaliteit moeten de &kde;-ontwikkelaars in een Git repository genaamd <literal
>kde-build-metadata</literal
> wat data bijhouden, maar deze module zal automatisch door &kdesrc-build; (u kunt het zien verschijnen in de uitvoer van het script) worden meegeleverd. </para>

<tip
><para
>&kde; modules die nog geen naam hebben voor de branch group die u heeft gekozen, zullen standaard een toepasselijke naam voor de branch krijgen, als u nog geen <literal
>branch-group</literal
> heeft opgegeven. </para
></tip>

</sect2>

</sect1>
</appendix>

<appendix id="appendix-profile">
<title
>Achterhaalde procedures voor het instellen van profielen</title>

<sect1 id="old-profile-setup">
<title
>Een &kde; aanmeldprofiel instellen</title>

<para
>Deze instructies beschrijven hoe u een profiel kan opstellen waarmee u zich kan aanmelden bij uw nieuw gebouwde &kde; &plasma; desktop. &kdesrc-build; zal normaal gesproken dit automatisch proberen te doen (zie <xref linkend="session-driver"/>). Deze appendix- sectie kan handig zijn voor personen die  de functionaliteit van &kdesrc-build; voor het instellen van een inlog-profiel niet kunnen gebruiken. Maar deze instructies hoeven niet altijd up-to-date te zijn, het kan ook handig zijn om het bestand <filename
>kde-env-master.sh</filename
> te bestuderen wat met de &kdesrc-build;-broncode is meegeleverd.</para>

<sect2 id="changing-profile">
<title
>Uw instellingen voor het opstartprofiel wijzigen</title>

<important
><para
>Het <filename
>.bash_profile</filename
> is een bestand met de inloginstellingen voor de populaire <application
>bash</application
> shell in gebruik bij veel &Linux;-distributies. Als u een andere shell gebruikt, dan moet u waarschijnlijk de in deze sectie gegeven voorbeelden aanpassen voor de door u gebruikte shell.</para
></important>

<para
>Open of creëer met uw favoriete editor in uw thuismap het bestand <filename
>.bash_profile</filename
>, en voeg aan het eind van het bestand toe: als u de qt module bouwt (standaard doet u dat), voeg in plaats daarvan dan toe: <programlisting>
QTDIR=(pad naar qtdir)   # zoals standaard ~/kdesrc/build/qt .
KDEDIR=(pad naar kdedir) # zoals standaard ~/kde .
KDEDIRS=$KDEDIR
PATH=$KDEDIR/bin:$QTDIR/bin:$PATH
MANPATH=$QTDIR/doc/man:$MANPATH

# Reageer op de juiste manier als LD_LIBRARY_PATH nog niet is ingesteld.
if [ -z $LD_LIBRARY_PATH ]; then
  LD_LIBRARY_PATH=$KDEDIR/lib:$QTDIR/lib
else
  LD_LIBRARY_PATH=$KDEDIR/lib:$QTDIR/lib:$LD_LIBRARY_PATH
fi

export QTDIR KDEDIRS PATH MANPATH LD_LIBRARY_PATH
</programlisting
>, en als u niet qt bouwt (en in plaats daarvan uw systeem &Qt; gebruikt), voeg dan dit toe: <programlisting
>KDEDIR=(pad naar kdedir)  # Zoals standaard ~/kde.
KDEDIRS=$KDEDIR
PATH=$KDEDIR/bin:$QTDIR/bin:$PATH

# Reageer op de juiste manier als LD_LIBRARY_PATH nog niet is ingesteld.
if [ -z $LD_LIBRARY_PATH ]; then
  LD_LIBRARY_PATH=$KDEDIR/lib
else
  LD_LIBRARY_PATH=$KDEDIR/lib:$LD_LIBRARY_PATH
fi

export KDEDIRS PATH LD_LIBRARY_PATH
</programlisting>
</para>

<para
>Als u geen speciale gebruiker gebruikt, stel dan een andere $<envar
>KDEHOME</envar
> in uw <filename
>.bash_profile</filename
> voor uw nieuwe omgeving in: <programlisting
>export KDEHOME="${HOME}/.kde-svn"

# Maak het indien nodig
[ ! -e ~/.kde-svn ] &amp;&amp; mkdir ~/.kde-svn
</programlisting>
</para>

<note>
<para
>Als later uw K Menu leeg is of juist te vol is met toepassingen van uw distributie, dan moet u wellicht in uw <filename
>.bash_profile</filename
> de omgevingsvariabele <acronym
>XDG</acronym
> instellen : <programlisting
>XDG_CONFIG_DIRS="/etc/xdg"
XDG_DATA_DIRS="${KDEDIR}/share:/usr/share"
export XDG_CONFIG_DIRS XDG_DATA_DIRS
</programlisting>

</para>
</note>

</sect2>
<sect2 id="starting-kde">
<title
>&kde; opstarten</title>

<para
>Nu u de omgevingsvariabelen zodanig heeft ingesteld dat u de juiste &kde; gebruikt, is het belangrijk dat u ook het juiste <command
>startkde</command
> script gebruikt. </para>

<para
>Open in de thuismap het tekstbestand <filename
>.xinitrc</filename
> of maak indien noodzakelijk deze aan. Voeg de regel toe: <programlisting
><command
>exec</command
> <option
>${KDEDIR}/bin/startkde</option
>
</programlisting>
</para>

<important
><para
>Bij sommige distributies, kan het nodig zijn om dezelfde stappen ook bij het bestand <filename
>.xsession</filename
>, ook in uw thuismap, uit te voeren. Dit geldt met name als u grafische login managers zoals &kdm;, <application
>gdm</application
>, of <application
>xdm</application
> gebruikt.</para>
</important>

<para
>Start nu uw gloednieuwe &kde; op: in &BSD; en &Linux; systemen met virtuele terminal support, u gebruikt sneltoetsen zoals <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F1</keycap
></keycombo
> ... <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F12</keycap
></keycombo
> om naar de Virtuele Console 1 tot en met 12 om te schakelen. Hierdoor kunt u op hetzelfde moment meer dan een desktop-omgeving gebruiken. De eerste zes zijn tekst-terminals en de volgende zes zijn grafische vensters. </para>

<para
>Als u uw computer wilt starten, dan krijgt u in plaats daarvan een grafische display manager te zien, u kunt de nieuwe &kde;-omgeving gebruiken, zelfs als het niet als optie erbij staat. De meeste display managers, ook &kdm;, hebben bij het inloggen als optie om een <quote
>Custom Session</quote
>te gebruiken. Bij deze optie, worden van het <filename
>.xsession</filename
>-bestand in uw thuismap uw sessie-instellingen geladen. Als u al zoals hierboven beschreven dit bestand heeft aangepast, dan zou deze optie u naar uw nieuwe &kde;-installatie moeten leiden. </para>

<para
>Als dat niet werkt, dan is er een andere manier die u kunt proberen die normaal gesproken zou moeten werken: Druk op <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F2</keycap
></keycombo
>, en u zal een tekst-terminalvenster te zien krijgen. Log in als de speciale gebruiker en type: </para>

<screen
><command
>startx</command
> <option
>--</option
> <option
>:1</option
>
</screen>

<tip>
<para
>U kunt tegelijk de nieuwe &kde; en de oude &kde; gebruiken! Log in als normale gebruiker, start de stabiele &kde; desktop. Druk op <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F2</keycap
></keycombo
> (of <keycap
>F1</keycap
>, <keycap
>F3</keycap
>, enz..), en u krijgt een tekst-terminalvenster te zien. Log in als de speciale &kde; &subversion;-gebruiker en type:</para>

<screen
><command
>startx</command
> <option
>--</option
> <option
>:1</option
>
</screen>

<para
>U kunt terug gaan naar de &kde;-desktop van uw normale gebruiker door de sneltoets van een al opgestarte desktop in te drukken. Normaal gesproken is dit <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F7</keycap
></keycombo
>, maar misschien moet u in plaats daarvan <keycap
>F6</keycap
> of <keycap
>F8</keycap
> gebruiken. Om terug te gaan naar uw door &kdesrc-build;-gecompileerde &kde;, moet u dezelfde stappen uitvoeren, maar dan met de volgende functietoets. Als u bijvoorbeeld <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F7</keycap
></keycombo
> moet invoeren om naar uw normale &kde; om te schakelen, dan moet u <keycombo action="simul"
>&Ctrl;&Alt;<keycap
>F8</keycap
></keycombo
> invoeren om naar uw door &kdesrc-build; gebouwde &kde; om te schakelen.</para>
</tip>

</sect2>
</sect1>

</appendix>
</book>
