% layout 'default';
% title 'kdesrc-build - Status';

<h1 class="title">kdesrc-build Status</h1>

<div class="container is-hidden" id="msgFailure">
  <div class="notification is-danger is-large">There must be something wrong, kdesrc-build is still not ready.</div>
</div>

<div class="columns is-centered">
  <div class="column content">
    <p>kdesrc-build is online using the configuration found at:
    <b><a href="file://<%= $ctx->rcFile() =%>"><%= $ctx->rcFile() %></a></b></p>

    <div class="tags has-addons">
      <span class="tag is-large">Build in progress:</span>
      % if ($c->in_build) {
        <span class="tag is-warning is-large">Yes</span>
      % } else {
        <span class="tag is-info is-large">No</span>
      % }
    </div>

    <a id="btnBeginNewBuild" class="button is-loading is-primary is-link" disabled>Begin New Build</a>

  </div>
</div>

<script>
  let numAttempts = 0;
  const checkForServerReady = () => {
    numAttempts++;
    window.fetch('<%= url_for('has_metadata') =%>')
      .then(resp => resp.json())
      .then((data) => {
        console.log(`Has metadata? ${data.has_metadata}`);

        // Server will tell us if it's downloaded KDE project metadata
        if (data.has_metadata) {
          const buildButton = lkup("btnBeginNewBuild");
          buildButton.removeAttribute('disabled');
          buildButton.classList.remove('is-loading');
          buildButton.setAttribute('href', "<%= url_for('setup_new_build') %>");
        } else {
          if (numAttempts < 30) {
            // Try again
            setTimeout(checkForServerReady, 500);
          } else {
            // Let user know something must be tubed up
            lkup("msgFailure").classList.remove('is-hidden');
          }
        }
      })
      .catch((err) => {
        console.error(`Caught an error ${err}`);
        lkup("msgFailure").classList.remove('is-hidden');
        lkup("msgFailure").querySelector('div').textContent = err.toString();
      });
  };

  setTimeout(checkForServerReady, 500);
</script>
